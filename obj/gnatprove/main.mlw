(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_short_integer__content "model_trace:" : short_short_integer }
 
 function short_short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref___projection
 
 meta "inline : no" function short_short_integer__ref___projection
 
 val short_short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer__rep
 use        Standard__short_short_integer
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__short_short_integer.short_short_integer, 
 predicate in_range = Standard__short_short_integer.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_integer__ref #"system.ads" 1 0 0# =
  { mutable short_integer__content "model_trace:" : short_integer }
 
 function short_integer__ref___projection #"system.ads" 1 0 0# 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref___projection
 
 meta "inline : no" function short_integer__ref___projection
 
 val short_integer__havoc #"system.ads" 1 0 0# 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer__rep
 use        Standard__short_integer
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__short_integer.short_integer, 
 predicate in_range = Standard__short_integer.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer__ref #"system.ads" 1 0 0# =
  { mutable integer__content "model_trace:" : integer }
 
 function integer__ref___projection #"system.ads" 1 0 0# 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref___projection
 
 meta "inline : no" function integer__ref___projection
 
 val integer__havoc #"system.ads" 1 0 0# 
   (x : integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
 use        Standard__integer
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer.integer, 
 predicate in_range = Standard__integer.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_integer__content "model_trace:" : long_integer }
 
 function long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref___projection
 
 meta "inline : no" function long_integer__ref___projection
 
 val long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer__rep
 use        Standard__long_integer
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__long_integer.long_integer, 
 predicate in_range = Standard__long_integer.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_long_integer__ref #"system.ads" 1 0 0# =
  { mutable long_long_integer__content "model_trace:" : long_long_integer }
 
 function long_long_integer__ref___projection #"system.ads" 1 0 0# 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref___projection
 
 meta "inline : no" function long_long_integer__ref___projection
 
 val long_long_integer__havoc #"system.ads" 1 0 0# 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer__rep
 use        Standard__long_long_integer
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__long_long_integer.long_long_integer, 
 predicate in_range = Standard__long_long_integer.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type natural__ref #"system.ads" 1 0 0# =
  { mutable natural__content "model_trace:" : natural }
 
 function natural__ref___projection #"system.ads" 1 0 0# 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref___projection
 
 meta "inline : no" function natural__ref___projection
 
 val natural__havoc #"system.ads" 1 0 0# 
   (x : natural__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural__rep
 use        Standard__natural
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__natural.natural, 
 predicate in_range = Standard__natural.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type positive__ref #"system.ads" 1 0 0# =
  { mutable positive__content "model_trace:" : positive }
 
 function positive__ref___projection #"system.ads" 1 0 0# 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref___projection
 
 meta "inline : no" function positive__ref___projection
 
 val positive__havoc #"system.ads" 1 0 0# 
   (x : positive__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive__rep
 use        Standard__positive
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__positive.positive, 
 predicate in_range = Standard__positive.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type short_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last #"system.ads" 1 0 0# 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Float32.t)  =
  #"system.ads" 1 0 0# (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = short_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_float__ref #"system.ads" 1 0 0# =
  { mutable short_float__content "model_trace:" : short_float }
 
 function short_float__ref___projection #"system.ads" 1 0 0# 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref___projection
 
 meta "inline : no" function short_float__ref___projection
 
 val short_float__havoc #"system.ads" 1 0 0# 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float__rep
 use        Standard__short_float
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Standard__short_float.short_float, 
 predicate in_range = Standard__short_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last #"system.ads" 1 0 0# 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Float32.t)  =
  #"system.ads" 1 0 0# (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type float__ref #"system.ads" 1 0 0# =
  { mutable float__content "model_trace:" : float }
 
 function float__ref___projection #"system.ads" 1 0 0# 
   (a : float__ref) : float =
  a.float__content
 
 meta "model_projection" function float__ref___projection
 
 meta "inline : no" function float__ref___projection
 
 val float__havoc #"system.ads" 1 0 0# 
   (x : float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float__rep
 use        Standard__float
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Standard__float.float, 
 predicate in_range = Standard__float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64

 type long_float #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : Float64.t =
  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t))
 
 function last #"system.ads" 1 0 0# 
   : Float64.t =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Float64.t)  =
  #"system.ads" 1 0 0# (Float64.t'isFinite x)
 
 clone export "ada__model".Static_Float64 with
 type t = long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_float__ref #"system.ads" 1 0 0# =
  { mutable long_float__content "model_trace:" : long_float }
 
 function long_float__ref___projection #"system.ads" 1 0 0# 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref___projection
 
 meta "inline : no" function long_float__ref___projection
 
 val long_float__havoc #"system.ads" 1 0 0# 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float__rep
 use        Standard__long_float
 use        "_gnatprove_standard".Float64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float64 with
 type t = Standard__long_float.long_float, 
 predicate in_range = Standard__long_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  255
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type character__ref #"system.ads" 1 0 0# =
  { mutable character__content "model_trace:" : character }
 
 function character__ref___projection #"system.ads" 1 0 0# 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref___projection
 
 meta "inline : no" function character__ref___projection
 
 val character__havoc #"system.ads" 1 0 0# 
   (x : character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
 use        Standard__character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__character.character, 
 predicate in_range = Standard__character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  65535
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_character__content "model_trace:" : wide_character }
 
 function wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref___projection
 
 meta "inline : no" function wide_character__ref___projection
 
 val wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character__rep
 use        Standard__wide_character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__wide_character.wide_character, 
 predicate in_range = Standard__wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_wide_character__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_character__content "model_trace:" : wide_wide_character }
 
 function wide_wide_character__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref___projection
 
 meta "inline : no" function wide_wide_character__ref___projection
 
 val wide_wide_character__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character__rep
 use        Standard__wide_wide_character
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__wide_wide_character.wide_wide_character, 
 predicate in_range = Standard__wide_wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"system.ads" 1 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_78 #"system.ads" 1 0 0#  : int.
   (if (( (a__first <= temp___idx_78) /\ (temp___idx_78 <= a__last) )) then (
    ((Standard__character__rep.to_rep (get a temp___idx_78)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_78))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"system.ads" 1 0 0#  b #"system.ads" 1 0 0#  : map.
  (forall a__first #"system.ads" 1 0 0#  a__last #"system.ads" 1 0 0#  b__first #"system.ads" 1 0 0#  b__last #"system.ads" 1 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_78 #"system.ads" 1 0 0#  : int.
    (if (( (a__first <= temp___idx_78) /\ (temp___idx_78 <= a__last) )) then (
     ((Standard__character__rep.to_rep (get a temp___idx_78)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_78))))) else true)) ) )))
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int__Standard__character
 use        Standard__integer__rep

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 function to_string #"system.ads" 1 0 0# 
   (x : Main.__image) : string
 
 function from_string #"system.ads" 1 0 0# 
   (x : string) : Main.__image
 
 type string__ref #"system.ads" 1 0 0# =
  { mutable string__content "model_trace:" : string }
 
 function string__ref___projection #"system.ads" 1 0 0# 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref___projection
 
 meta "inline : no" function string__ref___projection
 
 val string__havoc #"system.ads" 1 0 0# 
   (x : string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character
 use        Standard__wide_character__rep

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"system.ads" 1 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_84 #"system.ads" 1 0 0#  : int.
   (if (( (a__first <= temp___idx_84) /\ (temp___idx_84 <= a__last) )) then (
    ((Standard__wide_character__rep.to_rep (get a temp___idx_84)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_84))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"system.ads" 1 0 0#  b #"system.ads" 1 0 0#  : map.
  (forall a__first #"system.ads" 1 0 0#  a__last #"system.ads" 1 0 0#  b__first #"system.ads" 1 0 0#  b__last #"system.ads" 1 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_84 #"system.ads" 1 0 0#  : int.
    (if (( (a__first <= temp___idx_84) /\ (temp___idx_84 <= a__last) )) then (
     ((Standard__wide_character__rep.to_rep (get a temp___idx_84)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_84))))) else true)) ) )))
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Standard__integer__rep
 use        Array__Int__Standard__wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_character.wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_string__content "model_trace:" : wide_string }
 
 function wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref___projection
 
 meta "inline : no" function wide_string__ref___projection
 
 val wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character
 use        Standard__wide_wide_character__rep

 function index_I1_one #"system.ads" 1 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"system.ads" 1 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_90 #"system.ads" 1 0 0#  : int.
   (if (( (a__first <= temp___idx_90) /\ (temp___idx_90 <= a__last) )) then (
    ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_90)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_90))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"system.ads" 1 0 0#  b #"system.ads" 1 0 0#  : map.
  (forall a__first #"system.ads" 1 0 0#  a__last #"system.ads" 1 0 0#  b__first #"system.ads" 1 0 0#  b__last #"system.ads" 1 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_90 #"system.ads" 1 0 0#  : int.
    (if (( (a__first <= temp___idx_90) /\ (temp___idx_90 <= a__last) )) then (
     ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_90)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_90))))) else true)) ) )))
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Standard__integer__rep
 use        Array__Int__Standard__wide_wide_character

 type component_type #"system.ads" 1 0 0# =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string #"system.ads" 1 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wide_wide_string__ref #"system.ads" 1 0 0# =
  { mutable wide_wide_string__content "model_trace:" : wide_wide_string }
 
 function wide_wide_string__ref___projection #"system.ads" 1 0 0# 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref___projection
 
 meta "inline : no" function wide_wide_string__ref___projection
 
 val wide_wide_string__havoc #"system.ads" 1 0 0# 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration #"system.ads" 1 0 0# 
 
 function inv_small #"system.ads" 1 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"system.ads" 1 0 0# 
   : Main.__fixed =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : Main.__fixed =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : Main.__fixed)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type duration__ref #"system.ads" 1 0 0# =
  { mutable duration__content "model_trace:" : duration }
 
 function duration__ref___projection #"system.ads" 1 0 0# 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref___projection
 
 meta "inline : no" function duration__ref___projection
 
 val duration__havoc #"system.ads" 1 0 0# 
   (x : duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -128 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  127
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_8__ref #"system.ads" 1 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref___projection #"system.ads" 1 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref___projection
 
 meta "inline : no" function integer_8__ref___projection
 
 val integer_8__havoc #"system.ads" 1 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8__rep
 use        Standard__integer_8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_8.integer_8, 
 predicate in_range = Standard__integer_8.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -32768 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  32767
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_16__ref #"system.ads" 1 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref___projection #"system.ads" 1 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref___projection
 
 meta "inline : no" function integer_16__ref___projection
 
 val integer_16__havoc #"system.ads" 1 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16__rep
 use        Standard__integer_16
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_16.integer_16, 
 predicate in_range = Standard__integer_16.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_32__ref #"system.ads" 1 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref___projection #"system.ads" 1 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref___projection
 
 meta "inline : no" function integer_32__ref___projection
 
 val integer_32__havoc #"system.ads" 1 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32__rep
 use        Standard__integer_32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_32.integer_32, 
 predicate in_range = Standard__integer_32.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_64__ref #"system.ads" 1 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref___projection #"system.ads" 1 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref___projection
 
 meta "inline : no" function integer_64__ref___projection
 
 val integer_64__havoc #"system.ads" 1 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64__rep
 use        Standard__integer_64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__integer_64.integer_64, 
 predicate in_range = Standard__integer_64.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer #"system.ads" 1 0 0# 
 
 function first #"system.ads" 1 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"system.ads" 1 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"system.ads" 1 0 0# 
   (x : int)  =
  #"system.ads" 1 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type universal_integer__ref #"system.ads" 1 0 0# =
  { mutable universal_integer__content "model_trace:" : universal_integer }
 
 function universal_integer__ref___projection #"system.ads" 1 0 0# 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref___projection
 
 meta "inline : no" function universal_integer__ref___projection
 
 val universal_integer__havoc #"system.ads" 1 0 0# 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer__rep
 use        Standard__universal_integer
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Standard__universal_integer.universal_integer, 
 predicate in_range = Standard__universal_integer.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name #"system.ads" 46 0 0# 
 
 function first #"system.ads" 46 0 0# 
   : int =
  0
 
 function last #"system.ads" 46 0 0# 
   : int =
  0
 
 predicate in_range #"system.ads" 46 0 0# 
   (x : int)  =
  #"system.ads" 46 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type name__ref #"system.ads" 46 0 0# =
  { mutable name__content "model_trace:" : name }
 
 function name__ref___projection #"system.ads" 46 0 0# 
   (a : name__ref) : name =
  a.name__content
 
 meta "model_projection" function name__ref___projection
 
 meta "inline : no" function name__ref___projection
 
 val name__havoc #"system.ads" 46 0 0# 
   (x : name__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "name" defined at system.ads:46, created in Gnat2Why.Types.Translate_Type *)
module System__name__rep
 use        System__name
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__name.name, 
 predicate in_range = System__name.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main

 function system_name #"system.ads" 47 0 0# "model" "model_trace:7571" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 46 0 0# 
   : int

end

(* Module for axiomatizing type "address" defined at system.ads:108, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type address #"system.ads" 108 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"system.ads" 108 0 0# 
   : BV32.t
 
 function first #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"system.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"system.ads" 108 0 0# 
   : int =
  0
 
 function last_int #"system.ads" 108 0 0# 
   : int =
  4294967295
 
 predicate in_range #"system.ads" 108 0 0# 
   (x : BV32.t)  =
  #"system.ads" 108 0 0# true
 
 predicate in_range_int #"system.ads" 108 0 0# 
   (x : int)  =
  #"system.ads" 108 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type address__ref #"system.ads" 108 0 0# =
  { mutable address__content "model_trace:" : address }
 
 function address__ref___projection #"system.ads" 108 0 0# 
   (a : address__ref) : address =
  a.address__content
 
 meta "model_projection" function address__ref___projection
 
 meta "inline : no" function address__ref___projection
 
 val address__havoc #"system.ads" 108 0 0# 
   (x : address__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "address" defined at system.ads:108, created in Gnat2Why.Types.Translate_Type *)
module System__address__rep
 use        System__address
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = System__address.address, 
 predicate in_range = System__address.in_range, 
 predicate in_range_int = System__address.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "null_address" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_address #"system.ads" 69 0 0# "model" "model_trace:7693" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 77 0 0# "model" "model_trace:7740" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 77 0 0# "model" "model_trace:7747" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
 
 predicate olt__function_guard #"system.ads" 108 0 0# 
   (result : bool) (left : BV32.t) (right : BV32.t) 

end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 78 0 0# "model" "model_trace:7767" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 78 0 0# "model" "model_trace:7774" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
 
 predicate ole__function_guard #"system.ads" 108 0 0# 
   (result : bool) (left : BV32.t) (right : BV32.t) 

end

(* Module for defining the constant "left" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 79 0 0# "model" "model_trace:7794" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 79 0 0# "model" "model_trace:7801" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
 
 predicate ogt__function_guard #"system.ads" 108 0 0# 
   (result : bool) (left : BV32.t) (right : BV32.t) 

end

(* Module for defining the constant "left" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 80 0 0# "model" "model_trace:7821" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:80, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 80 0 0# "model" "model_trace:7828" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:80, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
 
 predicate oge__function_guard #"system.ads" 108 0 0# 
   (result : bool) (left : BV32.t) (right : BV32.t) 

end

(* Module for defining the constant "left" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"system.ads" 81 0 0# "model" "model_trace:7848" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"system.ads" 81 0 0# "model" "model_trace:7855" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
 
 predicate oeq__function_guard #"system.ads" 108 0 0# 
   (result : bool) (left : BV32.t) (right : BV32.t) 

end

(* Module for axiomatizing type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bit_order #"system.ads" 91 0 0# 
 
 function first #"system.ads" 91 0 0# 
   : int =
  0
 
 function last #"system.ads" 91 0 0# 
   : int =
  1
 
 predicate in_range #"system.ads" 91 0 0# 
   (x : int)  =
  #"system.ads" 91 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type bit_order__ref #"system.ads" 91 0 0# =
  { mutable bit_order__content "model_trace:" : bit_order }
 
 function bit_order__ref___projection #"system.ads" 91 0 0# 
   (a : bit_order__ref) : bit_order =
  a.bit_order__content
 
 meta "model_projection" function bit_order__ref___projection
 
 meta "inline : no" function bit_order__ref___projection
 
 val bit_order__havoc #"system.ads" 91 0 0# 
   (x : bit_order__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order__rep
 use        System__bit_order
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__bit_order.bit_order, 
 predicate in_range = System__bit_order.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main

 function default_bit_order #"system.ads" 92 0 0# "model" "model_trace:7922" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 91 0 0# 
   : int

end

(* Module for defining the constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main

 function max_priority #"system.ads" 97 0 0# "model" "model_trace:7938" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main

 function max_interrupt_priority #"system.ads" 98 0 0# "model" "model_trace:7948" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type any_priority #"system.ads" 100 0 0# 
 
 function first #"system.ads" 100 0 0# 
   : int =
  0
 
 function last #"system.ads" 100 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 100 0 0# 
   (x : int)  =
  #"system.ads" 100 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type any_priority__ref #"system.ads" 100 0 0# =
  { mutable any_priority__content "model_trace:" : any_priority }
 
 function any_priority__ref___projection #"system.ads" 100 0 0# 
   (a : any_priority__ref) : any_priority =
  a.any_priority__content
 
 meta "model_projection" function any_priority__ref___projection
 
 meta "inline : no" function any_priority__ref___projection
 
 val any_priority__havoc #"system.ads" 100 0 0# 
   (x : any_priority__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority__rep
 use        System__any_priority
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__any_priority.any_priority, 
 predicate in_range = System__any_priority.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "priority" defined at system.ads:101, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type priority #"system.ads" 101 0 0# 
 
 function first #"system.ads" 101 0 0# 
   : int =
  0
 
 function last #"system.ads" 101 0 0# 
   : int =
  30
 
 predicate in_range #"system.ads" 101 0 0# 
   (x : int)  =
  #"system.ads" 101 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type priority__ref #"system.ads" 101 0 0# =
  { mutable priority__content "model_trace:" : priority }
 
 function priority__ref___projection #"system.ads" 101 0 0# 
   (a : priority__ref) : priority =
  a.priority__content
 
 meta "model_projection" function priority__ref___projection
 
 meta "inline : no" function priority__ref___projection
 
 val priority__havoc #"system.ads" 101 0 0# 
   (x : priority__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "priority" defined at system.ads:101, created in Gnat2Why.Types.Translate_Type *)
module System__priority__rep
 use        System__priority
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__priority.priority, 
 predicate in_range = System__priority.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use import "int".Int

 type interrupt_priority #"system.ads" 102 0 0# 
 
 function first #"system.ads" 102 0 0# 
   : int =
  31
 
 function last #"system.ads" 102 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 102 0 0# 
   (x : int)  =
  #"system.ads" 102 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type interrupt_priority__ref #"system.ads" 102 0 0# =
  { mutable interrupt_priority__content "model_trace:" : interrupt_priority }
 
 function interrupt_priority__ref___projection #"system.ads" 102 0 0# 
   (a : interrupt_priority__ref) : interrupt_priority =
  a.interrupt_priority__content
 
 meta "model_projection" function interrupt_priority__ref___projection
 
 meta "inline : no" function interrupt_priority__ref___projection
 
 val interrupt_priority__havoc #"system.ads" 102 0 0# 
   (x : interrupt_priority__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority__rep
 use        System__interrupt_priority
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__interrupt_priority.interrupt_priority, 
 predicate in_range = System__interrupt_priority.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main

 function default_priority #"system.ads" 104 0 0# "model" "model_trace:8000" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 101 0 0# 
   : int

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main

 function backend_divide_checks #"system.ads" 121 0 0# "model" "model_trace:8030" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 121 0 0# 
   : int

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main

 function backend_overflow_checks #"system.ads" 122 0 0# "model" "model_trace:8040" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 122 0 0# 
   : int

end

(* Module for defining the constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main

 function command_line_args #"system.ads" 123 0 0# "model" "model_trace:8050" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 123 0 0# 
   : int

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main

 function configurable_run_time #"system.ads" 124 0 0# "model" "model_trace:8060" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 124 0 0# 
   : int

end

(* Module for defining the constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main

 function denorm #"system.ads" 125 0 0# "model" "model_trace:8070" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 125 0 0# 
   : int

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main

 function duration_32_bits #"system.ads" 126 0 0# "model" "model_trace:8080" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 126 0 0# 
   : int

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main

 function exit_status_supported #"system.ads" 127 0 0# "model" "model_trace:8090" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 127 0 0# 
   : int

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main

 function fractional_fixed_ops #"system.ads" 128 0 0# "model" "model_trace:8100" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 128 0 0# 
   : int

end

(* Module for defining the constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main

 function frontend_layout #"system.ads" 129 0 0# "model" "model_trace:8110" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 129 0 0# 
   : int

end

(* Module for defining the constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main

 function machine_overflows #"system.ads" 130 0 0# "model" "model_trace:8120" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 130 0 0# 
   : int

end

(* Module for defining the constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main

 function machine_rounds #"system.ads" 131 0 0# "model" "model_trace:8130" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 131 0 0# 
   : int

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main

 function preallocated_stacks #"system.ads" 132 0 0# "model" "model_trace:8140" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 132 0 0# 
   : int

end

(* Module for defining the constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main

 function signed_zeros #"system.ads" 133 0 0# "model" "model_trace:8150" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 133 0 0# 
   : int

end

(* Module for defining the constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main

 function stack_check_default #"system.ads" 134 0 0# "model" "model_trace:8160" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 134 0 0# 
   : int

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main

 function stack_check_probes #"system.ads" 135 0 0# "model" "model_trace:8170" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 135 0 0# 
   : int

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main

 function stack_check_limits #"system.ads" 136 0 0# "model" "model_trace:8180" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 136 0 0# 
   : int

end

(* Module for defining the constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main

 function support_aggregates #"system.ads" 137 0 0# "model" "model_trace:8190" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 137 0 0# 
   : int

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main

 function support_atomic_primitives #"system.ads" 138 0 0# "model" "model_trace:8200" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 138 0 0# 
   : int

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main

 function support_composite_assign #"system.ads" 139 0 0# "model" "model_trace:8210" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 139 0 0# 
   : int

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main

 function support_composite_compare #"system.ads" 140 0 0# "model" "model_trace:8220" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 140 0 0# 
   : int

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main

 function support_long_shifts #"system.ads" 141 0 0# "model" "model_trace:8230" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 141 0 0# 
   : int

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main

 function always_compatible_rep #"system.ads" 142 0 0# "model" "model_trace:8240" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main

 function suppress_standard_library #"system.ads" 143 0 0# "model" "model_trace:8250" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 143 0 0# 
   : int

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main

 function use_ada_main_program_name #"system.ads" 144 0 0# "model" "model_trace:8260" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 144 0 0# 
   : int

end

(* Module for defining the constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_exceptions
 use import "_gnatprove_standard".Main

 function frontend_exceptions #"system.ads" 145 0 0# "model" "model_trace:8270" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 145 0 0# 
   : int

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main

 function zcx_by_default #"system.ads" 146 0 0# "model" "model_trace:8280" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 146 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "Tpriorities_mappingB" defined at system.ads:161, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep

 function index_I1_one #"system.ads" 146 0 0# 
   : int =
  1
 
 type component_type #"system.ads" 146 0 0# =
  Standard__integer.integer
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"system.ads" 1 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_132 #"system.ads" 1 0 0#  : int.
   (if (( (a__first <= temp___idx_132) /\ (temp___idx_132 <= a__last) )) then (
    ((Standard__integer__rep.to_rep (get a temp___idx_132)) = (Standard__integer__rep.to_rep (get b ((b__first - a__first) + temp___idx_132))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"system.ads" 1 0 0#  b #"system.ads" 1 0 0#  : map.
  (forall a__first #"system.ads" 1 0 0#  a__last #"system.ads" 1 0 0#  b__first #"system.ads" 1 0 0#  b__last #"system.ads" 1 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_132 #"system.ads" 1 0 0#  : int.
    (if (( (a__first <= temp___idx_132) /\ (temp___idx_132 <= a__last) )) then (
     ((Standard__integer__rep.to_rep (get a temp___idx_132)) = (Standard__integer__rep.to_rep (get b ((b__first - a__first) + temp___idx_132))))) else true)) ) )))
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__integer__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__Tpriorities_mappingB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer
 use        Standard__integer__rep
 use        System__any_priority
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 1 0 0# =
  Standard__integer.integer
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = System__any_priority.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tpriorities_mappingB #"system.ads" 161 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tpriorities_mappingB__ref #"system.ads" 161 0 0# =
  { mutable tpriorities_mappingB__content "model_trace:" : tpriorities_mappingB }
 
 function tpriorities_mappingB__ref___projection #"system.ads" 161 0 0# 
   (a : tpriorities_mappingB__ref) : tpriorities_mappingB =
  a.tpriorities_mappingB__content
 
 meta "model_projection" function tpriorities_mappingB__ref___projection
 
 meta "inline : no" function tpriorities_mappingB__ref___projection
 
 val tpriorities_mappingB__havoc #"system.ads" 161 0 0# 
   (x : tpriorities_mappingB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Translate_Type *)
module System__priorities_mapping
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 161 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"system.ads" 166 0 0# 
 
 function first #"system.ads" 166 0 0# 
   : int =
  0
 
 function last #"system.ads" 166 0 0# 
   : int =
  31
 
 predicate in_range #"system.ads" 166 0 0# 
   (x : int)  =
  #"system.ads" 166 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t3s__ref #"system.ads" 166 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref___projection #"system.ads" 166 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref___projection
 
 meta "inline : no" function t3s__ref___projection
 
 val t3s__havoc #"system.ads" 166 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T3s__rep
 use        System__T3s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__T3s.t3s, 
 predicate in_range = System__T3s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Translate_Type *)
module System__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Array__Int__Standard__integer

 type component_type #"system.ads" 166 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  0
 
 function last #"system.ads" 1 0 0# 
   : int =
  31
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__integer.map, 
 function array_bool_eq = Array__Int__Standard__integer.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__underlying_priorities
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer

 function underlying_priorities #"system.ads" 165 0 0# "model_projected" "model_trace:8306" 
   : Array__Int__Standard__integer.map
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 161 0 0# 
   : int

end

(* Module for axiomatizing type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Ttask_storage_sizeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttask_storage_sizeB #"s-parame.ads" 58 0 0# 
 
 function first #"s-parame.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 58 0 0# 
   (x : int)  =
  #"s-parame.ads" 58 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttask_storage_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ttask_storage_sizeB__ref #"s-parame.ads" 58 0 0# =
  { mutable ttask_storage_sizeB__content "model_trace:" : ttask_storage_sizeB }
 
 function ttask_storage_sizeB__ref___projection #"s-parame.ads" 58 0 0# 
   (a : ttask_storage_sizeB__ref) : ttask_storage_sizeB =
  a.ttask_storage_sizeB__content
 
 meta "model_projection" function ttask_storage_sizeB__ref___projection
 
 meta "inline : no" function ttask_storage_sizeB__ref___projection
 
 val ttask_storage_sizeB__havoc #"s-parame.ads" 58 0 0# 
   (x : ttask_storage_sizeB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Ttask_storage_sizeB__rep
 use        System__parameters__Ttask_storage_sizeB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__parameters__Ttask_storage_sizeB.ttask_storage_sizeB, 
 predicate in_range = System__parameters__Ttask_storage_sizeB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__task_storage_size
 use import "_gnatprove_standard".Main
 use import "int".Int

 type task_storage_size #"s-parame.ads" 58 0 0# 
 
 function first #"s-parame.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 58 0 0# 
   (x : int)  =
  #"s-parame.ads" 58 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_storage_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type task_storage_size__ref #"s-parame.ads" 58 0 0# =
  { mutable task_storage_size__content "model_trace:" : task_storage_size }
 
 function task_storage_size__ref___projection #"s-parame.ads" 58 0 0# 
   (a : task_storage_size__ref) : task_storage_size =
  a.task_storage_size__content
 
 meta "model_projection" function task_storage_size__ref___projection
 
 meta "inline : no" function task_storage_size__ref___projection
 
 val task_storage_size__havoc #"s-parame.ads" 58 0 0# 
   (x : task_storage_size__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__task_storage_size__rep
 use        System__parameters__task_storage_size
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__parameters__task_storage_size.task_storage_size, 
 predicate in_range = System__parameters__task_storage_size.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Tsize_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsize_typeB #"s-parame.ads" 61 0 0# 
 
 function first #"s-parame.ads" 61 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 61 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 61 0 0# 
   (x : int)  =
  #"s-parame.ads" 61 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsize_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tsize_typeB__ref #"s-parame.ads" 61 0 0# =
  { mutable tsize_typeB__content "model_trace:" : tsize_typeB }
 
 function tsize_typeB__ref___projection #"s-parame.ads" 61 0 0# 
   (a : tsize_typeB__ref) : tsize_typeB =
  a.tsize_typeB__content
 
 meta "model_projection" function tsize_typeB__ref___projection
 
 meta "inline : no" function tsize_typeB__ref___projection
 
 val tsize_typeB__havoc #"s-parame.ads" 61 0 0# 
   (x : tsize_typeB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Tsize_typeB__rep
 use        System__parameters__Tsize_typeB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__parameters__Tsize_typeB.tsize_typeB, 
 predicate in_range = System__parameters__Tsize_typeB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__size_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type size_type #"s-parame.ads" 61 0 0# 
 
 function first #"s-parame.ads" 61 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-parame.ads" 61 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-parame.ads" 61 0 0# 
   (x : int)  =
  #"s-parame.ads" 61 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = size_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type size_type__ref #"s-parame.ads" 61 0 0# =
  { mutable size_type__content "model_trace:" : size_type }
 
 function size_type__ref___projection #"s-parame.ads" 61 0 0# 
   (a : size_type__ref) : size_type =
  a.size_type__content
 
 meta "model_projection" function size_type__ref___projection
 
 meta "inline : no" function size_type__ref___projection
 
 val size_type__havoc #"s-parame.ads" 61 0 0# 
   (x : size_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__size_type__rep
 use        System__parameters__size_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__parameters__size_type.size_type, 
 predicate in_range = System__parameters__size_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__unspecified_size
 use import "_gnatprove_standard".Main

 function unspecified_size #"s-parame.ads" 64 0 0# "model" "model_trace:8483" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for axiomatizing type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__percentage
 use import "_gnatprove_standard".Main
 use import "int".Int

 type percentage #"s-parame.ads" 67 0 0# 
 
 function first #"s-parame.ads" 67 0 0# 
   : int =
  ( -1 )
 
 function last #"s-parame.ads" 67 0 0# 
   : int =
  100
 
 predicate in_range #"s-parame.ads" 67 0 0# 
   (x : int)  =
  #"s-parame.ads" 67 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = percentage, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type percentage__ref #"s-parame.ads" 67 0 0# =
  { mutable percentage__content "model_trace:" : percentage }
 
 function percentage__ref___projection #"s-parame.ads" 67 0 0# 
   (a : percentage__ref) : percentage =
  a.percentage__content
 
 meta "model_projection" function percentage__ref___projection
 
 meta "inline : no" function percentage__ref___projection
 
 val percentage__havoc #"s-parame.ads" 67 0 0# 
   (x : percentage__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__percentage__rep
 use        System__parameters__percentage
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__parameters__percentage.percentage, 
 predicate in_range = System__parameters__percentage.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__dynamic
 use import "_gnatprove_standard".Main

 function dynamic #"s-parame.ads" 68 0 0# "model" "model_trace:8510" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for defining the constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_percentage
 use import "_gnatprove_standard".Main

 function sec_stack_percentage #"s-parame.ads" 75 0 0# "model" "model_trace:8521" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 67 0 0# 
   : int

end

(* Module for defining the constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_dynamic
 use import "_gnatprove_standard".Main

 function sec_stack_dynamic #"s-parame.ads" 78 0 0# "model" "model_trace:8531" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 78 0 0# 
   : int

end

(* Module for possibly declaring a logic function for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__default_stack_size
 use import "_gnatprove_standard".Main

 function default_stack_size #"s-parame.ads" 81 0 0# 
   (__void_param : unit) : int
 
 predicate default_stack_size__function_guard #"s-parame.ads" 61 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__minimum_stack_size
 use import "_gnatprove_standard".Main

 function minimum_stack_size #"s-parame.ads" 84 0 0# 
   (__void_param : unit) : int
 
 predicate minimum_stack_size__function_guard #"s-parame.ads" 61 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for defining the constant "size" defined at s-parame.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__adjust_storage_size__size
 use import "_gnatprove_standard".Main

 function size #"s-parame.ads" 87 0 0# "model" "model_trace:8570" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-parame.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__adjust_storage_size__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__adjust_storage_size
 use import "_gnatprove_standard".Main

 function adjust_storage_size #"s-parame.ads" 87 0 0# 
   (size : int) : int
 
 predicate adjust_storage_size__function_guard #"s-parame.ads" 61 0 0# 
   (result : int) (size : int) 

end

(* Module for defining the constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_env_stack_size
 use import "_gnatprove_standard".Main

 function default_env_stack_size #"s-parame.ads" 96 0 0# "model" "model_trace:8584" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 61 0 0# 
   : int

end

(* Module for defining the constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__stack_grows_down
 use import "_gnatprove_standard".Main

 function stack_grows_down #"s-parame.ads" 101 0 0# "model" "model_trace:8594" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 101 0 0# 
   : int

end

(* Module for axiomatizing type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__c_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type c_address #"s-parame.ads" 116 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-parame.ads" 116 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-parame.ads" 116 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-parame.ads" 116 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-parame.ads" 116 0 0# 
   : int =
  0
 
 function last_int #"s-parame.ads" 116 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-parame.ads" 116 0 0# 
   (x : BV32.t)  =
  #"s-parame.ads" 116 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-parame.ads" 116 0 0# 
   (x : int)  =
  #"s-parame.ads" 116 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = c_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type c_address__ref #"s-parame.ads" 116 0 0# =
  { mutable c_address__content "model_trace:" : c_address }
 
 function c_address__ref___projection #"s-parame.ads" 116 0 0# 
   (a : c_address__ref) : c_address =
  a.c_address__content
 
 meta "model_projection" function c_address__ref___projection
 
 meta "inline : no" function c_address__ref___projection
 
 val c_address__havoc #"s-parame.ads" 116 0 0# 
   (x : c_address__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__c_address__rep
 use        System__parameters__c_address
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = System__parameters__c_address.c_address, 
 predicate in_range = System__parameters__c_address.in_range, 
 predicate in_range_int = System__parameters__c_address.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = System__parameters__c_address.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-parame.ads" 116 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  13
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__c_malloc_linkname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function c_malloc_linkname #"s-parame.ads" 119 0 0# "model_projected" "model_trace:8637" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__garbage_collected
 use import "_gnatprove_standard".Main

 function garbage_collected #"s-parame.ads" 142 0 0# "model" "model_trace:8647" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 142 0 0# 
   : int

end

(* Module for defining the constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__single_lock
 use import "_gnatprove_standard".Main

 function single_lock #"s-parame.ads" 157 0 0# "model" "model_trace:8657" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 157 0 0# 
   : int

end

(* Module for defining the constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__no_abort
 use import "_gnatprove_standard".Main

 function no_abort #"s-parame.ads" 170 0 0# "model" "model_trace:8667" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 170 0 0# 
   : int

end

(* Module for defining the constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__runtime_traces
 use import "_gnatprove_standard".Main

 function runtime_traces #"s-parame.ads" 190 0 0# "model" "model_trace:8686" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-parame.ads" 190 0 0# 
   : int

end

(* Module for axiomatizing type "Tbig_stringP1" defined at s-stalib.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__Tbig_stringP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tbig_stringP1 #"s-stalib.ads" 62 0 0# 
 
 function first #"s-stalib.ads" 62 0 0# 
   : int =
  1
 
 function last #"s-stalib.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-stalib.ads" 62 0 0# 
   (x : int)  =
  #"s-stalib.ads" 62 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tbig_stringP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tbig_stringP1__ref #"s-stalib.ads" 62 0 0# =
  { mutable tbig_stringP1__content "model_trace:" : tbig_stringP1 }
 
 function tbig_stringP1__ref___projection #"s-stalib.ads" 62 0 0# 
   (a : tbig_stringP1__ref) : tbig_stringP1 =
  a.tbig_stringP1__content
 
 meta "model_projection" function tbig_stringP1__ref___projection
 
 meta "inline : no" function tbig_stringP1__ref___projection
 
 val tbig_stringP1__havoc #"s-stalib.ads" 62 0 0# 
   (x : tbig_stringP1__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tbig_stringP1" defined at s-stalib.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__Tbig_stringP1__rep
 use        System__standard_library__Tbig_stringP1
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__standard_library__Tbig_stringP1.tbig_stringP1, 
 predicate in_range = System__standard_library__Tbig_stringP1.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "big_string" defined at s-stalib.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__big_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-stalib.ads" 62 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  2147483647
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "source" defined at a-unccon.ads:17 instantiated at s-stalib.ads:76, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__to_ptr__source
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type source #"a-unccon.ads" 17 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-unccon.ads" 17 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"a-unccon.ads" 17 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"a-unccon.ads" 17 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"a-unccon.ads" 17 0 0# 
   : int =
  0
 
 function last_int #"a-unccon.ads" 17 0 0# 
   : int =
  4294967295
 
 predicate in_range #"a-unccon.ads" 17 0 0# 
   (x : BV32.t)  =
  #"a-unccon.ads" 17 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"a-unccon.ads" 17 0 0# 
   (x : int)  =
  #"a-unccon.ads" 17 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = source, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type source__ref #"a-unccon.ads" 17 0 0# =
  { mutable source__content "model_trace:" : source }
 
 function source__ref___projection #"a-unccon.ads" 17 0 0# 
   (a : source__ref) : source =
  a.source__content
 
 meta "model_projection" function source__ref___projection
 
 meta "inline : no" function source__ref___projection
 
 val source__havoc #"a-unccon.ads" 17 0 0# 
   (x : source__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "source" defined at a-unccon.ads:17 instantiated at s-stalib.ads:76, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__to_ptr__source__rep
 use        System__standard_library__to_ptr__source
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = System__standard_library__to_ptr__source.source, 
 predicate in_range = System__standard_library__to_ptr__source.in_range, 
 predicate in_range_int = System__standard_library__to_ptr__source.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = System__standard_library__to_ptr__source.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "s" defined at a-unccon.ads:20 instantiated at s-stalib.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__to_ptr__s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s #"a-unccon.ads" 20 0 0# "model" "model_trace:20427" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-unccon.ads" 17 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-unccon.ads:20 instantiated at s-stalib.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__to_ptr__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T2s" defined at s-stalib.ads:142, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-unccon.ads" 17 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  17
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "constraint_error_name" defined at s-stalib.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__constraint_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function constraint_error_name #"s-stalib.ads" 142 0 0# "model_projected" "model_trace:8912" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T3s" defined at s-stalib.ads:143, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "program_error_name" defined at s-stalib.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__program_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function program_error_name #"s-stalib.ads" 143 0 0# "model_projected" "model_trace:8926" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T4s" defined at s-stalib.ads:144, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "storage_error_name" defined at s-stalib.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__storage_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function storage_error_name #"s-stalib.ads" 144 0 0# "model_projected" "model_trace:8940" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T5s" defined at s-stalib.ads:145, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "tasking_error_name" defined at s-stalib.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__tasking_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function tasking_error_name #"s-stalib.ads" 145 0 0# "model_projected" "model_trace:8954" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T6s" defined at s-stalib.ads:146, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "abort_signal_name" defined at s-stalib.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__abort_signal_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function abort_signal_name #"s-stalib.ads" 146 0 0# "model_projected" "model_trace:8968" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "T7s" defined at s-stalib.ads:148, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"system.ads" 1 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  14
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "numeric_error_name" defined at s-stalib.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__standard_library__numeric_error_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function numeric_error_name #"s-stalib.ads" 148 0 0# "model_projected" "model_trace:8982" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "exception_trace_kind" defined at s-stalib.ads:218, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__exception_trace_kind
 use import "_gnatprove_standard".Main
 use import "int".Int

 type exception_trace_kind #"s-stalib.ads" 218 0 0# 
 
 function first #"s-stalib.ads" 218 0 0# 
   : int =
  0
 
 function last #"s-stalib.ads" 218 0 0# 
   : int =
  3
 
 predicate in_range #"s-stalib.ads" 218 0 0# 
   (x : int)  =
  #"s-stalib.ads" 218 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = exception_trace_kind, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type exception_trace_kind__ref #"s-stalib.ads" 218 0 0# =
  { mutable exception_trace_kind__content "model_trace:" : exception_trace_kind }
 
 function exception_trace_kind__ref___projection #"s-stalib.ads" 218 0 0# 
   (a : exception_trace_kind__ref) : exception_trace_kind =
  a.exception_trace_kind__content
 
 meta "model_projection" function exception_trace_kind__ref___projection
 
 meta "inline : no" function exception_trace_kind__ref___projection
 
 val exception_trace_kind__havoc #"s-stalib.ads" 218 0 0# 
   (x : exception_trace_kind__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "exception_trace_kind" defined at s-stalib.ads:218, created in Gnat2Why.Types.Translate_Type *)
module System__standard_library__exception_trace_kind__rep
 use        System__standard_library__exception_trace_kind
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__standard_library__exception_trace_kind.exception_trace_kind, 
 predicate in_range = System__standard_library__exception_trace_kind.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "traceback_entry" defined at s-traent.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__traceback_entries__traceback_entry
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type traceback_entry #"s-traent.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-traent.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-traent.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-traent.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-traent.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"s-traent.ads" 50 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-traent.ads" 50 0 0# 
   (x : BV32.t)  =
  #"s-traent.ads" 50 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-traent.ads" 50 0 0# 
   (x : int)  =
  #"s-traent.ads" 50 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = traceback_entry, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type traceback_entry__ref #"s-traent.ads" 50 0 0# =
  { mutable traceback_entry__content "model_trace:" : traceback_entry }
 
 function traceback_entry__ref___projection #"s-traent.ads" 50 0 0# 
   (a : traceback_entry__ref) : traceback_entry =
  a.traceback_entry__content
 
 meta "model_projection" function traceback_entry__ref___projection
 
 meta "inline : no" function traceback_entry__ref___projection
 
 val traceback_entry__havoc #"s-traent.ads" 50 0 0# 
   (x : traceback_entry__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "traceback_entry" defined at s-traent.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__traceback_entries__traceback_entry__rep
 use        System__traceback_entries__traceback_entry
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = System__traceback_entries__traceback_entry.traceback_entry, 
 predicate in_range = System__traceback_entries__traceback_entry.in_range, 
 predicate in_range_int = System__traceback_entries__traceback_entry.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = System__traceback_entries__traceback_entry.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "null_tb_entry" defined at s-traent.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__null_tb_entry
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_tb_entry #"s-traent.ads" 53 0 0# "model" "model_trace:9436" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-traent.ads" 50 0 0# 
   : int

end

(* Module for axiomatizing the array theory associated to type "tracebacks_array" defined at s-traent.ads:56, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__traceback_entries__traceback_entry
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32
 use        System__traceback_entries__traceback_entry
 use        System__traceback_entries__traceback_entry__rep

 function index_I1_one #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 type component_type #"s-traent.ads" 50 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"s-traent.ads" 50 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_158 #"s-traent.ads" 50 0 0#  : int.
   (if (( (a__first <= temp___idx_158) /\ (temp___idx_158 <= a__last) )) then (
    ((System__traceback_entries__traceback_entry__rep.to_rep (get a temp___idx_158)) = (System__traceback_entries__traceback_entry__rep.to_rep (get b ((b__first - a__first) + temp___idx_158))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"s-traent.ads" 50 0 0#  b #"s-traent.ads" 50 0 0#  : map.
  (forall a__first #"s-traent.ads" 50 0 0#  a__last #"s-traent.ads" 50 0 0#  b__first #"s-traent.ads" 50 0 0#  b__last #"s-traent.ads" 50 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_158 #"s-traent.ads" 50 0 0#  : int.
    (if (( (a__first <= temp___idx_158) /\ (temp___idx_158 <= a__last) )) then (
     ((System__traceback_entries__traceback_entry__rep.to_rep (get a temp___idx_158)) = (System__traceback_entries__traceback_entry__rep.to_rep (get b ((b__first - a__first) + temp___idx_158))))) else true)) ) )))
 
 function index_Index_one #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV32_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__traceback_entries__traceback_entry__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "tracebacks_array" defined at s-traent.ads:56, created in Gnat2Why.Types.Translate_Type *)
module System__traceback_entries__tracebacks_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__integer__rep
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"s-traent.ads" 50 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function index_1_id #"s-traent.ads" 50 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tracebacks_array #"s-traent.ads" 56 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tracebacks_array__ref #"s-traent.ads" 56 0 0# =
  { mutable tracebacks_array__content "model_trace:" : tracebacks_array }
 
 function tracebacks_array__ref___projection #"s-traent.ads" 56 0 0# 
   (a : tracebacks_array__ref) : tracebacks_array =
  a.tracebacks_array__content
 
 meta "model_projection" function tracebacks_array__ref___projection
 
 meta "inline : no" function tracebacks_array__ref___projection
 
 val tracebacks_array__havoc #"s-traent.ads" 56 0 0# 
   (x : tracebacks_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "tb_entry" defined at s-traent.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__pc_for__tb_entry
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function tb_entry #"s-traent.ads" 58 0 0# "model" "model_trace:9467" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-traent.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "tb_entry" defined at s-traent.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__traceback_entries__pc_for__tb_entry___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pc_for" defined at s-traent.ads:58, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__traceback_entries__pc_for
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function pc_for #"s-traent.ads" 58 0 0# 
   (tb_entry : BV32.t) : BV32.t
 
 predicate pc_for__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (tb_entry : BV32.t) 

end

(* Module for defining the constant "pc" defined at s-traent.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module System__traceback_entries__tb_entry_for__pc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function pc #"s-traent.ads" 63 0 0# "model" "model_trace:9492" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "pc" defined at s-traent.ads:63, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__traceback_entries__tb_entry_for__pc___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tb_entry_for" defined at s-traent.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__traceback_entries__tb_entry_for
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function tb_entry_for #"s-traent.ads" 63 0 0# 
   (pc : BV32.t) : BV32.t
 
 predicate tb_entry_for__function_guard #"s-traent.ads" 50 0 0# 
   (result : BV32.t) (pc : BV32.t) 

end

(* Module for axiomatizing the record theory associated to type "exception_id" defined at a-except.ads:58, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__exceptions__exception_id__rep
 use import "_gnatprove_standard".Main

 type __main_type #"system.ads" 108 0 0# 
 
 function __main_eq #"system.ads" 108 0 0# 
   (a : __main_type) (b : __main_type) : bool
 
 type __rep #"system.ads" 108 0 0# 
 
 function to_base #"system.ads" 108 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"system.ads" 108 0 0# 
   (a : __rep) : __rep =
  a
 
 function bool_eq #"system.ads" 108 0 0# 
   (a : __rep) (b : __rep) : bool
 
 function user_eq #"system.ads" 108 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "exception_id" defined at a-except.ads:58, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_id
 use export Ada__exceptions__exception_id__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type exception_id #"a-except.ads" 58 0 0# =
  __rep
 
 function value__size #"a-except.ads" 58 0 0# 
   : int
 
 function object__size #"a-except.ads" 58 0 0# 
   (a : exception_id) : int
 
 function value__alignment #"a-except.ads" 58 0 0# 
   : int
 
 function object__alignment #"a-except.ads" 58 0 0# 
   (a : exception_id) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"a-except.ads" 58 0 0#  : exception_id.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"a-except.ads" 58 0 0#  : exception_id.
   ((object__alignment a) >= 0))
 
 function dummy #"a-except.ads" 58 0 0# 
   : exception_id
 
 type exception_id__ref #"a-except.ads" 58 0 0# =
  { mutable exception_id__content "model_trace:" : exception_id }
 
 function exception_id__ref___projection #"a-except.ads" 58 0 0# 
   (a : exception_id__ref) : exception_id =
  a.exception_id__content
 
 meta "model_projection" function exception_id__ref___projection
 
 meta "inline : no" function exception_id__ref___projection
 
 val exception_id__havoc #"a-except.ads" 58 0 0# 
   (x : exception_id__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_id" defined at a-except.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function null_id #"a-except.ads" 61 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "null_id" defined at a-except.ads:61, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__null_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T5s" defined at a-except.ads:297, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T5s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t5s #"a-except.ads" 297 0 0# 
 
 function first #"a-except.ads" 297 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 297 0 0# 
   : int =
  200
 
 predicate in_range #"a-except.ads" 297 0 0# 
   (x : int)  =
  #"a-except.ads" 297 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t5s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t5s__ref #"a-except.ads" 297 0 0# =
  { mutable t5s__content "model_trace:" : t5s }
 
 function t5s__ref___projection #"a-except.ads" 297 0 0# 
   (a : t5s__ref) : t5s =
  a.t5s__content
 
 meta "model_projection" function t5s__ref___projection
 
 meta "inline : no" function t5s__ref___projection
 
 val t5s__havoc #"a-except.ads" 297 0 0# 
   (x : t5s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T5s" defined at a-except.ads:297, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T5s__rep
 use        Ada__exceptions__exception_occurrence__T5s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__exceptions__exception_occurrence__T5s.t5s, 
 predicate in_range = Ada__exceptions__exception_occurrence__T5s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T6s" defined at a-except.ads:297, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T6s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-except.ads" 297 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  200
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7s" defined at a-except.ads:312, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7s #"a-except.ads" 312 0 0# 
 
 function first #"a-except.ads" 312 0 0# 
   : int =
  0
 
 function last #"a-except.ads" 312 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 312 0 0# 
   (x : int)  =
  #"a-except.ads" 312 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t7s__ref #"a-except.ads" 312 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref___projection #"a-except.ads" 312 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref___projection
 
 meta "inline : no" function t7s__ref___projection
 
 val t7s__havoc #"a-except.ads" 312 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T7s" defined at a-except.ads:312, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence__T7s__rep
 use        Ada__exceptions__exception_occurrence__T7s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__exceptions__exception_occurrence__T7s.t7s, 
 predicate in_range = Ada__exceptions__exception_occurrence__T7s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Ttracebacks_arrayP1" defined at a-except.ads:283, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__Ttracebacks_arrayP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ttracebacks_arrayP1 #"a-except.ads" 283 0 0# 
 
 function first #"a-except.ads" 283 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 283 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 283 0 0# 
   (x : int)  =
  #"a-except.ads" 283 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttracebacks_arrayP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ttracebacks_arrayP1__ref #"a-except.ads" 283 0 0# =
  { mutable ttracebacks_arrayP1__content "model_trace:" : ttracebacks_arrayP1 }
 
 function ttracebacks_arrayP1__ref___projection #"a-except.ads" 283 0 0# 
   (a : ttracebacks_arrayP1__ref) : ttracebacks_arrayP1 =
  a.ttracebacks_arrayP1__content
 
 meta "model_projection" function ttracebacks_arrayP1__ref___projection
 
 meta "inline : no" function ttracebacks_arrayP1__ref___projection
 
 val ttracebacks_arrayP1__havoc #"a-except.ads" 283 0 0# 
   (x : ttracebacks_arrayP1__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Ttracebacks_arrayP1" defined at a-except.ads:283, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__Ttracebacks_arrayP1__rep
 use        Ada__exceptions__Ttracebacks_arrayP1
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__exceptions__Ttracebacks_arrayP1.ttracebacks_arrayP1, 
 predicate in_range = Ada__exceptions__Ttracebacks_arrayP1.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "tracebacks_array" defined at a-except.ads:283, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__tracebacks_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"a-except.ads" 283 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function first #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 function last #"s-traent.ads" 50 0 0# 
   : int =
  50
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "exception_occurrence" defined at a-except.ads:286, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__exceptions__exception_occurrence__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__natural
 use        Standard__natural__rep
 use        System__address
 use        System__address__rep
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_occurrence__T6s
 use        Ada__exceptions__exception_occurrence__T7s
 use        Ada__exceptions__exception_occurrence__T7s__rep
 use        Ada__exceptions__tracebacks_array
 use        Array__Int__Standard__character
 use        Array__Int__System__traceback_entries__traceback_entry
 use        Array__Int__Standard__character
 use        Array__Int__System__traceback_entries__traceback_entry
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type __split_fields #"s-traent.ads" 50 0 0# =
  { rec__ada__exceptions__exception_occurrence__id "model_trace:.7289" : Ada__exceptions__exception_id.exception_id; rec__ada__exceptions__exception_occurrence__machine_occurrence "model_trace:.7299" : System__address.address; rec__ada__exceptions__exception_occurrence__msg_length "model_trace:.7311" : Standard__natural.natural; rec__ada__exceptions__exception_occurrence__msg "model_trace:.7322" : Array__Int__Standard__character.map; rec__ada__exceptions__exception_occurrence__exception_raised "model_trace:.7337" : bool; rec__ada__exceptions__exception_occurrence__pid "model_trace:.7348" : Standard__natural.natural; rec__ada__exceptions__exception_occurrence__num_tracebacks "model_trace:.7359" : Ada__exceptions__exception_occurrence__T7s.t7s; rec__ada__exceptions__exception_occurrence__tracebacks "model_trace:.7375" : Array__Int__System__traceback_entries__traceback_entry.map }
 
 function __split_fields_Id__projection #"a-except.ads" 283 0 0# "model_trace:.7289" 
   (a : __split_fields) : Ada__exceptions__exception_id.exception_id =
  a.rec__ada__exceptions__exception_occurrence__id
 
 meta "model_projection" function __split_fields_Id__projection
 
 meta "inline : no" function __split_fields_Id__projection
 
 function __split_fields_Machine_Occurrence__projection #"a-except.ads" 286 0 0# "model_trace:.7299" 
   (a : __split_fields) : System__address.address =
  a.rec__ada__exceptions__exception_occurrence__machine_occurrence
 
 meta "model_projection" function __split_fields_Machine_Occurrence__projection
 
 meta "inline : no" function __split_fields_Machine_Occurrence__projection
 
 function __split_fields_Msg_Length__projection #"a-except.ads" 286 0 0# "model_trace:.7311" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__ada__exceptions__exception_occurrence__msg_length
 
 meta "model_projection" function __split_fields_Msg_Length__projection
 
 meta "inline : no" function __split_fields_Msg_Length__projection
 
 function __split_fields_Msg__projection #"a-except.ads" 286 0 0# "model_trace:.7322" 
   (a : __split_fields) : Array__Int__Standard__character.map =
  a.rec__ada__exceptions__exception_occurrence__msg
 
 meta "model_projection" function __split_fields_Msg__projection
 
 meta "inline : no" function __split_fields_Msg__projection
 
 function __split_fields_Exception_Raised__projection #"a-except.ads" 286 0 0# "model_trace:.7337" 
   (a : __split_fields) : bool =
  a.rec__ada__exceptions__exception_occurrence__exception_raised
 
 meta "model_projection" function __split_fields_Exception_Raised__projection
 
 meta "inline : no" function __split_fields_Exception_Raised__projection
 
 function __split_fields_Pid__projection #"a-except.ads" 286 0 0# "model_trace:.7348" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__ada__exceptions__exception_occurrence__pid
 
 meta "model_projection" function __split_fields_Pid__projection
 
 meta "inline : no" function __split_fields_Pid__projection
 
 function __split_fields_Num_Tracebacks__projection #"a-except.ads" 286 0 0# "model_trace:.7359" 
   (a : __split_fields) : Ada__exceptions__exception_occurrence__T7s.t7s =
  a.rec__ada__exceptions__exception_occurrence__num_tracebacks
 
 meta "model_projection" function __split_fields_Num_Tracebacks__projection
 
 meta "inline : no" function __split_fields_Num_Tracebacks__projection
 
 function __split_fields_Tracebacks__projection #"a-except.ads" 286 0 0# "model_trace:.7375" 
   (a : __split_fields) : Array__Int__System__traceback_entries__traceback_entry.map =
  a.rec__ada__exceptions__exception_occurrence__tracebacks
 
 meta "model_projection" function __split_fields_Tracebacks__projection
 
 meta "inline : no" function __split_fields_Tracebacks__projection
 
 type __split_fields__ref #"a-except.ads" 286 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref___projection #"a-except.ads" 286 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___projection
 
 meta "inline : no" function __split_fields__ref___projection
 
 val __split_fields__havoc #"a-except.ads" 286 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"a-except.ads" 286 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep___projection #"a-except.ads" 286 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___projection
 
 meta "inline : no" function __rep___projection
 
 function to_base #"a-except.ads" 286 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"a-except.ads" 286 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate ada__exceptions__exception_occurrence__id__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__id_ #"a-except.ads" 286 0 0# 
   (a : __rep) : Ada__exceptions__exception_id.exception_id
  requires { #"a-except.ads" 58 0 0# (ada__exceptions__exception_occurrence__id__pred a) }
  ensures { #"a-except.ads" 58 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__id) }
 
 predicate ada__exceptions__exception_occurrence__machine_occurrence__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__machine_occurrence_ #"a-except.ads" 286 0 0# 
   (a : __rep) : System__address.address
  requires { #"system.ads" 108 0 0# (ada__exceptions__exception_occurrence__machine_occurrence__pred a) }
  ensures { #"system.ads" 108 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__machine_occurrence) }
 
 predicate ada__exceptions__exception_occurrence__msg_length__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__msg_length_ #"a-except.ads" 286 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# (ada__exceptions__exception_occurrence__msg_length__pred a) }
  ensures { #"system.ads" 1 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__msg_length) }
 
 predicate ada__exceptions__exception_occurrence__msg__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__msg_ #"a-except.ads" 286 0 0# 
   (a : __rep) : Array__Int__Standard__character.map
  requires { #"a-except.ads" 297 0 0# (ada__exceptions__exception_occurrence__msg__pred a) }
  ensures { #"a-except.ads" 297 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__msg) }
 
 predicate ada__exceptions__exception_occurrence__exception_raised__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__exception_raised_ #"a-except.ads" 286 0 0# 
   (a : __rep) : bool
  requires { #"a-except.ads" 286 0 0# (ada__exceptions__exception_occurrence__exception_raised__pred a) }
  ensures { #"a-except.ads" 286 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__exception_raised) }
 
 predicate ada__exceptions__exception_occurrence__pid__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__pid_ #"a-except.ads" 286 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# (ada__exceptions__exception_occurrence__pid__pred a) }
  ensures { #"system.ads" 1 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__pid) }
 
 predicate ada__exceptions__exception_occurrence__num_tracebacks__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__num_tracebacks_ #"a-except.ads" 286 0 0# 
   (a : __rep) : Ada__exceptions__exception_occurrence__T7s.t7s
  requires { #"a-except.ads" 312 0 0# (ada__exceptions__exception_occurrence__num_tracebacks__pred a) }
  ensures { #"a-except.ads" 312 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__num_tracebacks) }
 
 predicate ada__exceptions__exception_occurrence__tracebacks__pred #"a-except.ads" 286 0 0# 
   (a : __rep)  =
  #"a-except.ads" 286 0 0# true
 
 val rec__ada__exceptions__exception_occurrence__tracebacks_ #"a-except.ads" 286 0 0# 
   (a : __rep) : Array__Int__System__traceback_entries__traceback_entry.map
  requires { #"a-except.ads" 283 0 0# (ada__exceptions__exception_occurrence__tracebacks__pred a) }
  ensures { #"a-except.ads" 283 0 0# (result = a.__split_fields.rec__ada__exceptions__exception_occurrence__tracebacks) }
 
 function bool_eq #"a-except.ads" 286 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( ( ( ( ( ((Ada__exceptions__exception_id.bool_eq a.__split_fields.rec__ada__exceptions__exception_occurrence__id b.__split_fields.rec__ada__exceptions__exception_occurrence__id) = True) /\ ((System__address__rep.to_rep a.__split_fields.rec__ada__exceptions__exception_occurrence__machine_occurrence) = (System__address__rep.to_rep b.__split_fields.rec__ada__exceptions__exception_occurrence__machine_occurrence)) ) /\ ((Standard__natural__rep.to_rep a.__split_fields.rec__ada__exceptions__exception_occurrence__msg_length) = (Standard__natural__rep.to_rep b.__split_fields.rec__ada__exceptions__exception_occurrence__msg_length)) ) /\ ((Ada__exceptions__exception_occurrence__T6s.bool_eq a.__split_fields.rec__ada__exceptions__exception_occurrence__msg b.__split_fields.rec__ada__exceptions__exception_occurrence__msg) = True) ) /\ (a.__split_fields.rec__ada__exceptions__exception_occurrence__exception_raised = b.__split_fields.rec__ada__exceptions__exception_occurrence__exception_raised) ) /\ ((Standard__natural__rep.to_rep a.__split_fields.rec__ada__exceptions__exception_occurrence__pid) = (Standard__natural__rep.to_rep b.__split_fields.rec__ada__exceptions__exception_occurrence__pid)) ) /\ ((Ada__exceptions__exception_occurrence__T7s__rep.to_rep a.__split_fields.rec__ada__exceptions__exception_occurrence__num_tracebacks) = (Ada__exceptions__exception_occurrence__T7s__rep.to_rep b.__split_fields.rec__ada__exceptions__exception_occurrence__num_tracebacks)) ) /\ ((Ada__exceptions__tracebacks_array.bool_eq a.__split_fields.rec__ada__exceptions__exception_occurrence__tracebacks b.__split_fields.rec__ada__exceptions__exception_occurrence__tracebacks) = True) )) then (
   True) else (
   False))
 
 function user_eq #"a-except.ads" 286 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "exception_occurrence" defined at a-except.ads:286, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__exception_occurrence
 use export Ada__exceptions__exception_occurrence__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type exception_occurrence #"a-except.ads" 286 0 0# =
  __rep
 
 function value__size #"a-except.ads" 286 0 0# 
   : int
 
 function object__size #"a-except.ads" 286 0 0# 
   (a : exception_occurrence) : int
 
 function value__alignment #"a-except.ads" 286 0 0# 
   : int
 
 function object__alignment #"a-except.ads" 286 0 0# 
   (a : exception_occurrence) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"a-except.ads" 286 0 0#  : exception_occurrence.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"a-except.ads" 286 0 0#  : exception_occurrence.
   ((object__alignment a) >= 0))
 
 function ada__exceptions__exception_occurrence__id__first__bit #"a-except.ads" 286 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__id__last__bit #"a-except.ads" 286 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__id__position #"a-except.ads" 286 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__id__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__id__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__id__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__id__last__bit ) > (ada__exceptions__exception_occurrence__id__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__id__position_axiom :
  ((ada__exceptions__exception_occurrence__id__position ) >= 0)
 
 function ada__exceptions__exception_occurrence__machine_occurrence__first__bit #"a-except.ads" 287 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__machine_occurrence__last__bit #"a-except.ads" 287 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__machine_occurrence__position #"a-except.ads" 287 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__machine_occurrence__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__machine_occurrence__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__machine_occurrence__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__machine_occurrence__last__bit ) > (ada__exceptions__exception_occurrence__machine_occurrence__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__machine_occurrence__position_axiom :
  ((ada__exceptions__exception_occurrence__machine_occurrence__position ) >= 0)
 
 function ada__exceptions__exception_occurrence__msg_length__first__bit #"a-except.ads" 290 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__msg_length__last__bit #"a-except.ads" 290 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__msg_length__position #"a-except.ads" 290 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__msg_length__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__msg_length__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__msg_length__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__msg_length__last__bit ) > (ada__exceptions__exception_occurrence__msg_length__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__msg_length__position_axiom :
  ((ada__exceptions__exception_occurrence__msg_length__position ) >= 0)
 
 function ada__exceptions__exception_occurrence__msg__first__bit #"a-except.ads" 294 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__msg__last__bit #"a-except.ads" 294 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__msg__position #"a-except.ads" 294 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__msg__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__msg__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__msg__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__msg__last__bit ) > (ada__exceptions__exception_occurrence__msg__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__msg__position_axiom :
  ((ada__exceptions__exception_occurrence__msg__position ) >= 0)
 
 function ada__exceptions__exception_occurrence__exception_raised__first__bit #"a-except.ads" 297 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__exception_raised__last__bit #"a-except.ads" 297 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__exception_raised__position #"a-except.ads" 297 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__exception_raised__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__exception_raised__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__exception_raised__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__exception_raised__last__bit ) > (ada__exceptions__exception_occurrence__exception_raised__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__exception_raised__position_axiom :
  ((ada__exceptions__exception_occurrence__exception_raised__position ) >= 0)
 
 function ada__exceptions__exception_occurrence__pid__first__bit #"a-except.ads" 300 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__pid__last__bit #"a-except.ads" 300 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__pid__position #"a-except.ads" 300 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__pid__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__pid__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__pid__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__pid__last__bit ) > (ada__exceptions__exception_occurrence__pid__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__pid__position_axiom :
  ((ada__exceptions__exception_occurrence__pid__position ) >= 0)
 
 function ada__exceptions__exception_occurrence__num_tracebacks__first__bit #"a-except.ads" 309 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__num_tracebacks__last__bit #"a-except.ads" 309 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__num_tracebacks__position #"a-except.ads" 309 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__num_tracebacks__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__num_tracebacks__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__num_tracebacks__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__num_tracebacks__last__bit ) > (ada__exceptions__exception_occurrence__num_tracebacks__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__num_tracebacks__position_axiom :
  ((ada__exceptions__exception_occurrence__num_tracebacks__position ) >= 0)
 
 function ada__exceptions__exception_occurrence__tracebacks__first__bit #"a-except.ads" 312 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__tracebacks__last__bit #"a-except.ads" 312 0 0# 
   : int
 
 function ada__exceptions__exception_occurrence__tracebacks__position #"a-except.ads" 312 0 0# 
   : int
 
 axiom ada__exceptions__exception_occurrence__tracebacks__first__bit_axiom :
  ((ada__exceptions__exception_occurrence__tracebacks__first__bit ) >= 0)
 
 axiom ada__exceptions__exception_occurrence__tracebacks__last__bit_axiom :
  ((ada__exceptions__exception_occurrence__tracebacks__last__bit ) > (ada__exceptions__exception_occurrence__tracebacks__first__bit ))
 
 axiom ada__exceptions__exception_occurrence__tracebacks__position_axiom :
  ((ada__exceptions__exception_occurrence__tracebacks__position ) >= 0)
 
 function dummy #"a-except.ads" 315 0 0# 
   : exception_occurrence
 
 type exception_occurrence__ref #"a-except.ads" 286 0 0# =
  { mutable exception_occurrence__content "model_trace:" : exception_occurrence }
 
 function exception_occurrence__ref___projection #"a-except.ads" 286 0 0# 
   (a : exception_occurrence__ref) : exception_occurrence =
  a.exception_occurrence__content
 
 meta "model_projection" function exception_occurrence__ref___projection
 
 meta "inline : no" function exception_occurrence__ref___projection
 
 val exception_occurrence__havoc #"a-except.ads" 286 0 0# 
   (x : exception_occurrence__ref) : unit
  writes {x}

end

(* Module for defining the constant "null_occurrence" defined at a-except.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_occurrence
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function null_occurrence #"a-except.ads" 68 0 0# "model_projected" "model_trace:6601" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "null_occurrence" defined at a-except.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__null_occurrence___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "id" defined at a-except.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 70 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name__id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name" defined at a-except.ads:70, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function exception_name #"a-except.ads" 70 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__string.string
 
 predicate exception_name__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (id : Ada__exceptions__exception_id.exception_id) 

end

(* Module for defining the constant "x" defined at a-except.ads:72, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 72 0 0# "model_projected" "model_trace:6636" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name__2__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name__2" defined at a-except.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_name__2 #"a-except.ads" 72 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
 
 predicate exception_name__2__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "id" defined at a-except.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 75 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_exception_name__id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_exception_name" defined at a-except.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_exception_name
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Ada__exceptions__exception_id

 function wide_exception_name #"a-except.ads" 74 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_string.wide_string
 
 predicate wide_exception_name__function_guard #"system.ads" 1 0 0# 
   (result : Standard__wide_string.wide_string) (id : Ada__exceptions__exception_id.exception_id) 

end

(* Module for defining the constant "x" defined at a-except.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 79 0 0# "model_projected" "model_trace:6678" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_exception_name__2__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_exception_name__2" defined at a-except.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Ada__exceptions__exception_occurrence

 function wide_exception_name__2 #"a-except.ads" 78 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_string.wide_string
 
 predicate wide_exception_name__2__function_guard #"system.ads" 1 0 0# 
   (result : Standard__wide_string.wide_string) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "id" defined at a-except.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_wide_exception_name__id
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function id #"a-except.ads" 83 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "id" defined at a-except.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_wide_exception_name__id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_wide_exception_name" defined at a-except.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_wide_exception_name
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Ada__exceptions__exception_id

 function wide_wide_exception_name #"a-except.ads" 82 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_wide_string.wide_wide_string
 
 predicate wide_wide_exception_name__function_guard #"system.ads" 1 0 0# 
   (result : Standard__wide_wide_string.wide_wide_string) (id : Ada__exceptions__exception_id.exception_id) 

end

(* Module for defining the constant "x" defined at a-except.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__wide_wide_exception_name__2__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 87 0 0# "model_projected" "model_trace:6724" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__wide_wide_exception_name__2__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "wide_wide_exception_name__2" defined at a-except.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__wide_wide_exception_name__2
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Ada__exceptions__exception_occurrence

 function wide_wide_exception_name__2 #"a-except.ads" 86 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_wide_string.wide_wide_string
 
 predicate wide_wide_exception_name__2__function_guard #"system.ads" 1 0 0# 
   (result : Standard__wide_wide_string.wide_wide_string) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "e" defined at a-except.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 90 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at a-except.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"a-except.ads" 90 0 0# "model_projected" "model_trace:6756" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at a-except.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception__message___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_message__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 94 0 0# "model_projected" "model_trace:6779" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_message__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_message" defined at a-except.ads:94, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_message
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_message #"a-except.ads" 94 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
 
 predicate exception_message__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "x" defined at a-except.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 96 0 0# "model_projected" "model_trace:6798" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_identity__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 102 0 0# "model_projected" "model_trace:6816" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_identity__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_identity" defined at a-except.ads:102, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_identity
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_occurrence

 function exception_identity #"a-except.ads" 102 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Ada__exceptions__exception_id.exception_id
 
 predicate exception_identity__function_guard #"a-except.ads" 58 0 0# 
   (result : Ada__exceptions__exception_id.exception_id) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "x" defined at a-except.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_information__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 104 0 0# "model_projected" "model_trace:6835" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_information__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_information" defined at a-except.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_information
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_information #"a-except.ads" 104 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
 
 predicate exception_information__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "source" defined at a-except.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__save_occurrence__source
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function source #"a-except.ads" 125 0 0# "model_projected" "model_trace:6863" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at a-except.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at a-except.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__save_occurrence__2__source
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function source #"a-except.ads" 128 0 0# "model_projected" "model_trace:6881" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at a-except.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__2__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "code_loc" defined at a-except.ads:159, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__code_loc
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type code_loc #"a-except.ads" 159 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-except.ads" 159 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"a-except.ads" 159 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"a-except.ads" 159 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"a-except.ads" 159 0 0# 
   : int =
  0
 
 function last_int #"a-except.ads" 159 0 0# 
   : int =
  4294967295
 
 predicate in_range #"a-except.ads" 159 0 0# 
   (x : BV32.t)  =
  #"a-except.ads" 159 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"a-except.ads" 159 0 0# 
   (x : int)  =
  #"a-except.ads" 159 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = code_loc, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type code_loc__ref #"a-except.ads" 159 0 0# =
  { mutable code_loc__content "model_trace:" : code_loc }
 
 function code_loc__ref___projection #"a-except.ads" 159 0 0# 
   (a : code_loc__ref) : code_loc =
  a.code_loc__content
 
 meta "model_projection" function code_loc__ref___projection
 
 meta "inline : no" function code_loc__ref___projection
 
 val code_loc__havoc #"a-except.ads" 159 0 0# 
   (x : code_loc__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "code_loc" defined at a-except.ads:159, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__code_loc__rep
 use        Ada__exceptions__code_loc
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = Ada__exceptions__code_loc.code_loc, 
 predicate in_range = Ada__exceptions__code_loc.in_range, 
 predicate in_range_int = Ada__exceptions__code_loc.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = Ada__exceptions__code_loc.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "null_loc" defined at a-except.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__null_loc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_loc #"a-except.ads" 164 0 0# "model" "model_trace:6948" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 159 0 0# 
   : int

end

(* Module for defining the constant "x" defined at a-except.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__eid_to_string__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function x #"a-except.ads" 169 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__eid_to_string__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eid_to_string" defined at a-except.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__eid_to_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function eid_to_string #"a-except.ads" 169 0 0# 
   (x : Ada__exceptions__exception_id.exception_id) : Standard__string.string
 
 predicate eid_to_string__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (x : Ada__exceptions__exception_id.exception_id) 

end

(* Module for defining the constant "s" defined at a-except.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__string_to_eid__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"a-except.ads" 170 0 0# "model_projected" "model_trace:6998" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-except.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__string_to_eid__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "string_to_eid" defined at a-except.ads:170, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__string_to_eid
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 function string_to_eid #"a-except.ads" 170 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_id.exception_id
 
 predicate string_to_eid__function_guard #"a-except.ads" 58 0 0# 
   (result : Ada__exceptions__exception_id.exception_id) (s : Standard__string.string) 

end

(* Module for defining the constant "x" defined at a-except.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__exception_name_simple__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 180 0 0# "model_projected" "model_trace:7035" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__exception_name_simple__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "exception_name_simple" defined at a-except.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__exception_name_simple
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function exception_name_simple #"a-except.ads" 180 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
 
 predicate exception_name_simple__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "e" defined at a-except.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception_always__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 188 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception_always__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "message" defined at a-except.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_exception_always__message
 use import "_gnatprove_standard".Main
 use        Standard__string

 function message #"a-except.ads" 188 0 0# "model_projected" "model_trace:7063" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "message" defined at a-except.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_exception_always__message___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "e" defined at a-except.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_signal_handler__e
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 function e #"a-except.ads" 198 0 0# 
   : Ada__exceptions__exception_id.exception_id
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at a-except.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_signal_handler__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "m" defined at a-except.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_signal_handler__m
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function m #"a-except.ads" 199 0 0# "model" "model_trace:7103" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "m" defined at a-except.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_signal_handler__m___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:216, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__raise_from_controlled_operation__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 216 0 0# "model_projected" "model_trace:7135" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__raise_from_controlled_operation__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:231, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence_always__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 231 0 0# "model_projected" "model_trace:7186" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:231, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence_always__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "x" defined at a-except.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__reraise_occurrence_no_defer__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 238 0 0# "model_projected" "model_trace:7208" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__reraise_occurrence_no_defer__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "triggered_by_abort" defined at a-except.ads:245, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__triggered_by_abort
 use import "_gnatprove_standard".Main

 function triggered_by_abort #"a-except.ads" 245 0 0# 
   (__void_param : unit) : bool
 
 predicate triggered_by_abort__function_guard #"a-except.ads" 245 0 0# 
   (result : bool) (__void_param : unit) 

end

(* Module for defining the constant "left" defined at a-except.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__Oeq__left
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function left #"a-except.ads" 319 0 0# "model_projected" "model_trace:7394" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at a-except.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__Oeq__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at a-except.ads:319, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__Oeq__right
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function right #"a-except.ads" 319 0 0# "model_projected" "model_trace:7401" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at a-except.ads:319, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__Oeq__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oeq" defined at a-except.ads:319, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__Oeq
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function oeq #"a-except.ads" 319 0 0# 
   (left : Ada__exceptions__exception_occurrence.exception_occurrence) (right : Ada__exceptions__exception_occurrence.exception_occurrence) : bool
 
 predicate oeq__function_guard #"a-except.ads" 286 0 0# 
   (result : bool) (left : Ada__exceptions__exception_occurrence.exception_occurrence) (right : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "x" defined at a-except.ads:326, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__get_exception_machine_occurrence__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 326 0 0# "model_projected" "model_trace:7421" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:326, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__get_exception_machine_occurrence__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_exception_machine_occurrence" defined at a-except.ads:325, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__get_exception_machine_occurrence
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Ada__exceptions__exception_occurrence

 function get_exception_machine_occurrence #"a-except.ads" 325 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : BV32.t
 
 predicate get_exception_machine_occurrence__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "x" defined at a-except.ads:334, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__eo_to_string__x
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function x #"a-except.ads" 334 0 0# "model_projected" "model_trace:7450" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "x" defined at a-except.ads:334, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__eo_to_string__x___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eo_to_string" defined at a-except.ads:334, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__eo_to_string
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function eo_to_string #"a-except.ads" 334 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
 
 predicate eo_to_string__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (x : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "s" defined at a-except.ads:335, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__exceptions__string_to_eo__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"a-except.ads" 335 0 0# "model_projected" "model_trace:7469" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at a-except.ads:335, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__string_to_eo__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "string_to_eo" defined at a-except.ads:335, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__string_to_eo
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_occurrence

 function string_to_eo #"a-except.ads" 335 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_occurrence.exception_occurrence
 
 predicate string_to_eo__function_guard #"a-except.ads" 286 0 0# 
   (result : Ada__exceptions__exception_occurrence.exception_occurrence) (s : Standard__string.string) 

end

(* Module for axiomatizing type "T9s" defined at a-except.ads:343, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T9s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t9s #"a-except.ads" 343 0 0# 
 
 function first #"a-except.ads" 343 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 343 0 0# 
   : int =
  200
 
 predicate in_range #"a-except.ads" 343 0 0# 
   (x : int)  =
  #"a-except.ads" 343 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t9s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t9s__ref #"a-except.ads" 343 0 0# =
  { mutable t9s__content "model_trace:" : t9s }
 
 function t9s__ref___projection #"a-except.ads" 343 0 0# 
   (a : t9s__ref) : t9s =
  a.t9s__content
 
 meta "model_projection" function t9s__ref___projection
 
 meta "inline : no" function t9s__ref___projection
 
 val t9s__havoc #"a-except.ads" 343 0 0# 
   (x : t9s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T9s" defined at a-except.ads:343, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T9s__rep
 use        Ada__exceptions__T9s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__exceptions__T9s.t9s, 
 predicate in_range = Ada__exceptions__T9s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T10s" defined at a-except.ads:343, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T10s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"a-except.ads" 343 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  200
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11s" defined at a-except.ads:347, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T11s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t11s #"a-except.ads" 347 0 0# 
 
 function first #"a-except.ads" 347 0 0# 
   : int =
  1
 
 function last #"a-except.ads" 347 0 0# 
   : int =
  50
 
 predicate in_range #"a-except.ads" 347 0 0# 
   (x : int)  =
  #"a-except.ads" 347 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t11s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t11s__ref #"a-except.ads" 347 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref___projection #"a-except.ads" 347 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref___projection
 
 meta "inline : no" function t11s__ref___projection
 
 val t11s__havoc #"a-except.ads" 347 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T11s" defined at a-except.ads:347, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T11s__rep
 use        Ada__exceptions__T11s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__exceptions__T11s.t11s, 
 predicate in_range = Ada__exceptions__T11s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T12s" defined at a-except.ads:347, created in Gnat2Why.Types.Translate_Type *)
module Ada__exceptions__T12s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 type component_type #"a-except.ads" 347 0 0# =
  System__traceback_entries__traceback_entry.traceback_entry
 
 function first #"s-traent.ads" 50 0 0# 
   : int =
  1
 
 function last #"s-traent.ads" 50 0 0# 
   : int =
  50
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__traceback_entries__traceback_entry.map, 
 function array_bool_eq = Array__Int__System__traceback_entries__traceback_entry.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "root_stream_type" defined at a-stream.ads:70, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__streams__root_stream_type__rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main

 type __split_fields #"s-traent.ads" 50 0 0# =
  { rec__ext__ "model_trace:" : Main.__private }
 
 function __split_fields___projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields) : Main.__private =
  a.rec__ext__
 
 meta "model_projection" function __split_fields___projection
 
 meta "inline : no" function __split_fields___projection
 
 type __split_fields__ref #"s-traent.ads" 50 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_2__projection #"s-traent.ads" 50 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_2__projection
 
 meta "inline : no" function __split_fields__ref_2__projection
 
 val __split_fields__havoc #"s-traent.ads" 50 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"s-traent.ads" 50 0 0# =
  { __split_fields "model_trace:" : __split_fields; attr__tag "model_trace:" : int }
 
 function __rep_2__projection #"s-traent.ads" 50 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_2__projection
 
 meta "inline : no" function __rep_2__projection
 
 function __rep_3__projection #"s-traent.ads" 50 0 0# 
   (a : __rep) : int =
  a.attr__tag
 
 meta "model_projection" function __rep_3__projection
 
 meta "inline : no" function __rep_3__projection
 
 function to_base #"s-traent.ads" 50 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-traent.ads" 50 0 0# 
   (a : __rep) : __rep =
  a
 
 function user_eq #"s-traent.ads" 50 0 0# 
   (a : __rep) (b : __rep) : bool
 
 function __dispatch_eq #"s-traent.ads" 50 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "root_stream_type" defined at a-stream.ads:70, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__root_stream_type
 use export Ada__streams__root_stream_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type root_stream_type #"a-stream.ads" 70 0 0# =
  __rep
 
 function __tag #"a-stream.ads" 70 0 0# 
   : int
 
 function value__size #"a-stream.ads" 70 0 0# 
   : int
 
 function object__size #"a-stream.ads" 70 0 0# 
   (a : root_stream_type) : int
 
 function value__alignment #"a-stream.ads" 70 0 0# 
   : int
 
 function object__alignment #"a-stream.ads" 70 0 0# 
   (a : root_stream_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"a-stream.ads" 70 0 0#  : root_stream_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"a-stream.ads" 70 0 0#  : root_stream_type.
   ((object__alignment a) >= 0))
 
 function dummy #"a-stream.ads" 70 0 0# 
   : root_stream_type
 
 type root_stream_type__ref #"a-stream.ads" 70 0 0# =
  { mutable root_stream_type__content "model_trace:" : root_stream_type }
 
 function root_stream_type__ref___projection #"a-stream.ads" 70 0 0# 
   (a : root_stream_type__ref) : root_stream_type =
  a.root_stream_type__content
 
 meta "model_projection" function root_stream_type__ref___projection
 
 meta "inline : no" function root_stream_type__ref___projection
 
 val root_stream_type__havoc #"a-stream.ads" 70 0 0# 
   (x : root_stream_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type stream_element #"a-stream.ads" 42 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"a-stream.ads" 42 0 0# 
   : BV8.t
 
 function first #"a-stream.ads" 42 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"a-stream.ads" 42 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"a-stream.ads" 42 0 0# 
   : int =
  0
 
 function last_int #"a-stream.ads" 42 0 0# 
   : int =
  255
 
 predicate in_range #"a-stream.ads" 42 0 0# 
   (x : BV8.t)  =
  #"a-stream.ads" 42 0 0# true
 
 predicate in_range_int #"a-stream.ads" 42 0 0# 
   (x : int)  =
  #"a-stream.ads" 42 0 0# BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = stream_element, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type stream_element__ref #"a-stream.ads" 42 0 0# =
  { mutable stream_element__content "model_trace:" : stream_element }
 
 function stream_element__ref___projection #"a-stream.ads" 42 0 0# 
   (a : stream_element__ref) : stream_element =
  a.stream_element__content
 
 meta "model_projection" function stream_element__ref___projection
 
 meta "inline : no" function stream_element__ref___projection
 
 val stream_element__havoc #"a-stream.ads" 42 0 0# 
   (x : stream_element__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element__rep
 use        Ada__streams__stream_element
 use        "_gnatprove_standard".BV8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV8 with
 type t = Ada__streams__stream_element.stream_element, 
 predicate in_range = Ada__streams__stream_element.in_range, 
 predicate in_range_int = Ada__streams__stream_element.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Tstream_element_offsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tstream_element_offsetB #"a-stream.ads" 44 0 0# 
 
 function first #"a-stream.ads" 44 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"a-stream.ads" 44 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-stream.ads" 44 0 0# 
   (x : int)  =
  #"a-stream.ads" 44 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tstream_element_offsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tstream_element_offsetB__ref #"a-stream.ads" 44 0 0# =
  { mutable tstream_element_offsetB__content "model_trace:" : tstream_element_offsetB }
 
 function tstream_element_offsetB__ref___projection #"a-stream.ads" 44 0 0# 
   (a : tstream_element_offsetB__ref) : tstream_element_offsetB =
  a.tstream_element_offsetB__content
 
 meta "model_projection" function tstream_element_offsetB__ref___projection
 
 meta "inline : no" function tstream_element_offsetB__ref___projection
 
 val tstream_element_offsetB__havoc #"a-stream.ads" 44 0 0# 
   (x : tstream_element_offsetB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Tstream_element_offsetB__rep
 use        Ada__streams__Tstream_element_offsetB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__streams__Tstream_element_offsetB.tstream_element_offsetB, 
 predicate in_range = Ada__streams__Tstream_element_offsetB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_offset #"a-stream.ads" 44 0 0# 
 
 function first #"a-stream.ads" 44 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"a-stream.ads" 44 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-stream.ads" 44 0 0# 
   (x : int)  =
  #"a-stream.ads" 44 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type stream_element_offset__ref #"a-stream.ads" 44 0 0# =
  { mutable stream_element_offset__content "model_trace:" : stream_element_offset }
 
 function stream_element_offset__ref___projection #"a-stream.ads" 44 0 0# 
   (a : stream_element_offset__ref) : stream_element_offset =
  a.stream_element_offset__content
 
 meta "model_projection" function stream_element_offset__ref___projection
 
 meta "inline : no" function stream_element_offset__ref___projection
 
 val stream_element_offset__havoc #"a-stream.ads" 44 0 0# 
   (x : stream_element_offset__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_offset__rep
 use        Ada__streams__stream_element_offset
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__streams__stream_element_offset.stream_element_offset, 
 predicate in_range = Ada__streams__stream_element_offset.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "stream_element_count" defined at a-stream.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type stream_element_count #"a-stream.ads" 51 0 0# 
 
 function first #"a-stream.ads" 51 0 0# 
   : int =
  0
 
 function last #"a-stream.ads" 51 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"a-stream.ads" 51 0 0# 
   (x : int)  =
  #"a-stream.ads" 51 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type stream_element_count__ref #"a-stream.ads" 51 0 0# =
  { mutable stream_element_count__content "model_trace:" : stream_element_count }
 
 function stream_element_count__ref___projection #"a-stream.ads" 51 0 0# 
   (a : stream_element_count__ref) : stream_element_count =
  a.stream_element_count__content
 
 meta "model_projection" function stream_element_count__ref___projection
 
 meta "inline : no" function stream_element_count__ref___projection
 
 val stream_element_count__havoc #"a-stream.ads" 51 0 0# 
   (x : stream_element_count__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "stream_element_count" defined at a-stream.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_count__rep
 use        Ada__streams__stream_element_count
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__streams__stream_element_count.stream_element_count, 
 predicate in_range = Ada__streams__stream_element_count.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "stream_element_array" defined at a-stream.ads:54, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Ada__streams__stream_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8
 use        Ada__streams__stream_element
 use        Ada__streams__stream_element__rep

 function index_I1_one #"a-stream.ads" 51 0 0# 
   : int =
  1
 
 type component_type #"a-stream.ads" 51 0 0# =
  Ada__streams__stream_element.stream_element
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"a-stream.ads" 42 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_159 #"a-stream.ads" 42 0 0#  : int.
   (if (( (a__first <= temp___idx_159) /\ (temp___idx_159 <= a__last) )) then (
    ((Ada__streams__stream_element__rep.to_rep (get a temp___idx_159)) = (Ada__streams__stream_element__rep.to_rep (get b ((b__first - a__first) + temp___idx_159))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"a-stream.ads" 42 0 0#  b #"a-stream.ads" 42 0 0#  : map.
  (forall a__first #"a-stream.ads" 42 0 0#  a__last #"a-stream.ads" 42 0 0#  b__first #"a-stream.ads" 42 0 0#  b__last #"a-stream.ads" 42 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_159 #"a-stream.ads" 42 0 0#  : int.
    (if (( (a__first <= temp___idx_159) /\ (temp___idx_159 <= a__last) )) then (
     ((Ada__streams__stream_element__rep.to_rep (get a temp___idx_159)) = (Ada__streams__stream_element__rep.to_rep (get b ((b__first - a__first) + temp___idx_159))))) else true)) ) )))
 
 function index_Index_one #"a-stream.ads" 42 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV8_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Ada__streams__stream_element__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "stream_element_array" defined at a-stream.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__streams__stream_element
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__Tstream_element_offsetB__rep
 use        Ada__streams__stream_element_offset
 use        Array__Int__Ada__streams__stream_element

 type component_type #"a-stream.ads" 42 0 0# =
  Ada__streams__stream_element.stream_element
 
 function index_1_id #"a-stream.ads" 42 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Ada__streams__stream_element.map, 
 function array_bool_eq = Array__Int__Ada__streams__stream_element.bool_eq, 
 type index_base_type = Ada__streams__Tstream_element_offsetB.tstream_element_offsetB, 
 type index_rep_type = int, 
 function to_rep = Ada__streams__Tstream_element_offsetB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Ada__streams__Tstream_element_offsetB.in_range, 
 predicate index_dynamic_property = Ada__streams__stream_element_offset.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type stream_element_array #"a-stream.ads" 54 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type stream_element_array__ref #"a-stream.ads" 54 0 0# =
  { mutable stream_element_array__content "model_trace:" : stream_element_array }
 
 function stream_element_array__ref___projection #"a-stream.ads" 54 0 0# 
   (a : stream_element_array__ref) : stream_element_array =
  a.stream_element_array__content
 
 meta "model_projection" function stream_element_array__ref___projection
 
 meta "inline : no" function stream_element_array__ref___projection
 
 val stream_element_array__havoc #"a-stream.ads" 54 0 0# 
   (x : stream_element_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at a-stream.ads:65, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__write__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item #"a-stream.ads" 65 0 0# "model_projected" "model_trace:9647" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-stream.ads:65, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Troot_stream_typeC" defined at a-stream.ads:39, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Troot_stream_typeC
 use export Ada__streams__root_stream_type
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "v" defined at a-stream.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__write_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function v #"a-stream.ads" 82 0 0# "model_projected" "model_trace:9717" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write_sea__v___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "v" defined at a-stream.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__stream_element_arraySW__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function v #"a-stream.ads" 85 0 0# 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__stream_element_arraySW__v___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_8B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_8B #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  #"interfac.ads" 46 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_8B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tinteger_8B__ref #"interfac.ads" 46 0 0# =
  { mutable tinteger_8B__content "model_trace:" : tinteger_8B }
 
 function tinteger_8B__ref___projection #"interfac.ads" 46 0 0# 
   (a : tinteger_8B__ref) : tinteger_8B =
  a.tinteger_8B__content
 
 meta "model_projection" function tinteger_8B__ref___projection
 
 meta "inline : no" function tinteger_8B__ref___projection
 
 val tinteger_8B__havoc #"interfac.ads" 46 0 0# 
   (x : tinteger_8B__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_8B__rep
 use        Interfaces__Tinteger_8B
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__Tinteger_8B.tinteger_8B, 
 predicate in_range = Interfaces__Tinteger_8B.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 #"interfac.ads" 46 0 0# 
 
 function first #"interfac.ads" 46 0 0# 
   : int =
  ( -128 )
 
 function last #"interfac.ads" 46 0 0# 
   : int =
  127
 
 predicate in_range #"interfac.ads" 46 0 0# 
   (x : int)  =
  #"interfac.ads" 46 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_8__ref #"interfac.ads" 46 0 0# =
  { mutable integer_8__content "model_trace:" : integer_8 }
 
 function integer_8__ref_2__projection #"interfac.ads" 46 0 0# 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref_2__projection
 
 meta "inline : no" function integer_8__ref_2__projection
 
 val integer_8__havoc #"interfac.ads" 46 0 0# 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_8__rep
 use        Interfaces__integer_8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__integer_8.integer_8, 
 predicate in_range = Interfaces__integer_8.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_16B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_16B #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  #"interfac.ads" 49 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_16B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tinteger_16B__ref #"interfac.ads" 49 0 0# =
  { mutable tinteger_16B__content "model_trace:" : tinteger_16B }
 
 function tinteger_16B__ref___projection #"interfac.ads" 49 0 0# 
   (a : tinteger_16B__ref) : tinteger_16B =
  a.tinteger_16B__content
 
 meta "model_projection" function tinteger_16B__ref___projection
 
 meta "inline : no" function tinteger_16B__ref___projection
 
 val tinteger_16B__havoc #"interfac.ads" 49 0 0# 
   (x : tinteger_16B__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_16B__rep
 use        Interfaces__Tinteger_16B
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__Tinteger_16B.tinteger_16B, 
 predicate in_range = Interfaces__Tinteger_16B.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 #"interfac.ads" 49 0 0# 
 
 function first #"interfac.ads" 49 0 0# 
   : int =
  ( -32768 )
 
 function last #"interfac.ads" 49 0 0# 
   : int =
  32767
 
 predicate in_range #"interfac.ads" 49 0 0# 
   (x : int)  =
  #"interfac.ads" 49 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_16__ref #"interfac.ads" 49 0 0# =
  { mutable integer_16__content "model_trace:" : integer_16 }
 
 function integer_16__ref_2__projection #"interfac.ads" 49 0 0# 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref_2__projection
 
 meta "inline : no" function integer_16__ref_2__projection
 
 val integer_16__havoc #"interfac.ads" 49 0 0# 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16__rep
 use        Interfaces__integer_16
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__integer_16.integer_16, 
 predicate in_range = Interfaces__integer_16.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_32B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_32B #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  #"interfac.ads" 52 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_32B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tinteger_32B__ref #"interfac.ads" 52 0 0# =
  { mutable tinteger_32B__content "model_trace:" : tinteger_32B }
 
 function tinteger_32B__ref___projection #"interfac.ads" 52 0 0# 
   (a : tinteger_32B__ref) : tinteger_32B =
  a.tinteger_32B__content
 
 meta "model_projection" function tinteger_32B__ref___projection
 
 meta "inline : no" function tinteger_32B__ref___projection
 
 val tinteger_32B__havoc #"interfac.ads" 52 0 0# 
   (x : tinteger_32B__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_32B__rep
 use        Interfaces__Tinteger_32B
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__Tinteger_32B.tinteger_32B, 
 predicate in_range = Interfaces__Tinteger_32B.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 #"interfac.ads" 52 0 0# 
 
 function first #"interfac.ads" 52 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"interfac.ads" 52 0 0# 
   : int =
  2147483647
 
 predicate in_range #"interfac.ads" 52 0 0# 
   (x : int)  =
  #"interfac.ads" 52 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_32__ref #"interfac.ads" 52 0 0# =
  { mutable integer_32__content "model_trace:" : integer_32 }
 
 function integer_32__ref_2__projection #"interfac.ads" 52 0 0# 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref_2__projection
 
 meta "inline : no" function integer_32__ref_2__projection
 
 val integer_32__havoc #"interfac.ads" 52 0 0# 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_32__rep
 use        Interfaces__integer_32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__integer_32.integer_32, 
 predicate in_range = Interfaces__integer_32.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinteger_64B #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  #"interfac.ads" 55 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tinteger_64B__ref #"interfac.ads" 55 0 0# =
  { mutable tinteger_64B__content "model_trace:" : tinteger_64B }
 
 function tinteger_64B__ref___projection #"interfac.ads" 55 0 0# 
   (a : tinteger_64B__ref) : tinteger_64B =
  a.tinteger_64B__content
 
 meta "model_projection" function tinteger_64B__ref___projection
 
 meta "inline : no" function tinteger_64B__ref___projection
 
 val tinteger_64B__havoc #"interfac.ads" 55 0 0# 
   (x : tinteger_64B__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_64B__rep
 use        Interfaces__Tinteger_64B
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__Tinteger_64B.tinteger_64B, 
 predicate in_range = Interfaces__Tinteger_64B.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 #"interfac.ads" 55 0 0# 
 
 function first #"interfac.ads" 55 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"interfac.ads" 55 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"interfac.ads" 55 0 0# 
   (x : int)  =
  #"interfac.ads" 55 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_64__ref #"interfac.ads" 55 0 0# =
  { mutable integer_64__content "model_trace:" : integer_64 }
 
 function integer_64__ref_2__projection #"interfac.ads" 55 0 0# 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref_2__projection
 
 meta "inline : no" function integer_64__ref_2__projection
 
 val integer_64__havoc #"interfac.ads" 55 0 0# 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_64__rep
 use        Interfaces__integer_64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__integer_64.integer_64, 
 predicate in_range = Interfaces__integer_64.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_8
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_8 #"interfac.ads" 63 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 63 0 0# 
   : BV8.t
 
 function first #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"interfac.ads" 63 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"interfac.ads" 63 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 63 0 0# 
   : int =
  255
 
 predicate in_range #"interfac.ads" 63 0 0# 
   (x : BV8.t)  =
  #"interfac.ads" 63 0 0# true
 
 predicate in_range_int #"interfac.ads" 63 0 0# 
   (x : int)  =
  #"interfac.ads" 63 0 0# BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned_8__ref #"interfac.ads" 63 0 0# =
  { mutable unsigned_8__content "model_trace:" : unsigned_8 }
 
 function unsigned_8__ref___projection #"interfac.ads" 63 0 0# 
   (a : unsigned_8__ref) : unsigned_8 =
  a.unsigned_8__content
 
 meta "model_projection" function unsigned_8__ref___projection
 
 meta "inline : no" function unsigned_8__ref___projection
 
 val unsigned_8__havoc #"interfac.ads" 63 0 0# 
   (x : unsigned_8__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_8__rep
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".BV8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV8 with
 type t = Interfaces__unsigned_8.unsigned_8, 
 predicate in_range = Interfaces__unsigned_8.in_range, 
 predicate in_range_int = Interfaces__unsigned_8.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_16
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_16 #"interfac.ads" 66 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 66 0 0# 
   : BV16.t
 
 function first #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"interfac.ads" 66 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"interfac.ads" 66 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 66 0 0# 
   : int =
  65535
 
 predicate in_range #"interfac.ads" 66 0 0# 
   (x : BV16.t)  =
  #"interfac.ads" 66 0 0# true
 
 predicate in_range_int #"interfac.ads" 66 0 0# 
   (x : int)  =
  #"interfac.ads" 66 0 0# BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned_16__ref #"interfac.ads" 66 0 0# =
  { mutable unsigned_16__content "model_trace:" : unsigned_16 }
 
 function unsigned_16__ref___projection #"interfac.ads" 66 0 0# 
   (a : unsigned_16__ref) : unsigned_16 =
  a.unsigned_16__content
 
 meta "model_projection" function unsigned_16__ref___projection
 
 meta "inline : no" function unsigned_16__ref___projection
 
 val unsigned_16__havoc #"interfac.ads" 66 0 0# 
   (x : unsigned_16__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_16__rep
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".BV16
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV16 with
 type t = Interfaces__unsigned_16.unsigned_16, 
 predicate in_range = Interfaces__unsigned_16.in_range, 
 predicate in_range_int = Interfaces__unsigned_16.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_24
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_24 #"interfac.ads" 69 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777216 )
 
 function first #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 69 0 0# 
   : BV32.t =
  ( BV32.of_int 16777215 )
 
 function first_int #"interfac.ads" 69 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 69 0 0# 
   : int =
  16777215
 
 predicate in_range #"interfac.ads" 69 0 0# 
   (x : BV32.t)  =
  #"interfac.ads" 69 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"interfac.ads" 69 0 0# 
   (x : int)  =
  #"interfac.ads" 69 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = unsigned_24, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type unsigned_24__ref #"interfac.ads" 69 0 0# =
  { mutable unsigned_24__content "model_trace:" : unsigned_24 }
 
 function unsigned_24__ref___projection #"interfac.ads" 69 0 0# 
   (a : unsigned_24__ref) : unsigned_24 =
  a.unsigned_24__content
 
 meta "model_projection" function unsigned_24__ref___projection
 
 meta "inline : no" function unsigned_24__ref___projection
 
 val unsigned_24__havoc #"interfac.ads" 69 0 0# 
   (x : unsigned_24__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_24__rep
 use        Interfaces__unsigned_24
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = Interfaces__unsigned_24.unsigned_24, 
 predicate in_range = Interfaces__unsigned_24.in_range, 
 predicate in_range_int = Interfaces__unsigned_24.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = Interfaces__unsigned_24.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_32 #"interfac.ads" 74 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 74 0 0# 
   : BV32.t
 
 function first #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"interfac.ads" 74 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"interfac.ads" 74 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 74 0 0# 
   : int =
  4294967295
 
 predicate in_range #"interfac.ads" 74 0 0# 
   (x : BV32.t)  =
  #"interfac.ads" 74 0 0# true
 
 predicate in_range_int #"interfac.ads" 74 0 0# 
   (x : int)  =
  #"interfac.ads" 74 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned_32__ref #"interfac.ads" 74 0 0# =
  { mutable unsigned_32__content "model_trace:" : unsigned_32 }
 
 function unsigned_32__ref___projection #"interfac.ads" 74 0 0# 
   (a : unsigned_32__ref) : unsigned_32 =
  a.unsigned_32__content
 
 meta "model_projection" function unsigned_32__ref___projection
 
 meta "inline : no" function unsigned_32__ref___projection
 
 val unsigned_32__havoc #"interfac.ads" 74 0 0# 
   (x : unsigned_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32__rep
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = Interfaces__unsigned_32.unsigned_32, 
 predicate in_range = Interfaces__unsigned_32.in_range, 
 predicate in_range_int = Interfaces__unsigned_32.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_64
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV64

 type unsigned_64 #"interfac.ads" 77 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"interfac.ads" 77 0 0# 
   : BV64.t
 
 function first #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 0 )
 
 function last #"interfac.ads" 77 0 0# 
   : BV64.t =
  ( BV64.of_int 18446744073709551615 )
 
 function first_int #"interfac.ads" 77 0 0# 
   : int =
  0
 
 function last_int #"interfac.ads" 77 0 0# 
   : int =
  18446744073709551615
 
 predicate in_range #"interfac.ads" 77 0 0# 
   (x : BV64.t)  =
  #"interfac.ads" 77 0 0# true
 
 predicate in_range_int #"interfac.ads" 77 0 0# 
   (x : int)  =
  #"interfac.ads" 77 0 0# BV64.uint_in_range x
 
 clone export "ada__model".Static_Modular_64 with
 type t = unsigned_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned_64__ref #"interfac.ads" 77 0 0# =
  { mutable unsigned_64__content "model_trace:" : unsigned_64 }
 
 function unsigned_64__ref___projection #"interfac.ads" 77 0 0# 
   (a : unsigned_64__ref) : unsigned_64 =
  a.unsigned_64__content
 
 meta "model_projection" function unsigned_64__ref___projection
 
 meta "inline : no" function unsigned_64__ref___projection
 
 val unsigned_64__havoc #"interfac.ads" 77 0 0# 
   (x : unsigned_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_64__rep
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".BV64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV64 with
 type t = Interfaces__unsigned_64.unsigned_64, 
 predicate in_range = Interfaces__unsigned_64.in_range, 
 predicate in_range_int = Interfaces__unsigned_64.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "value" defined at interfac.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 82 0 0# "model" "model_trace:10005" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 83 0 0# "model" "model_trace:10014" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 86 0 0# "model" "model_trace:10033" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 87 0 0# "model" "model_trace:10042" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 90 0 0# "model" "model_trace:10061" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 91 0 0# "model" "model_trace:10070" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 94 0 0# "model" "model_trace:10089" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 95 0 0# "model" "model_trace:10098" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function value #"interfac.ads" 98 0 0# "model" "model_trace:10117" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 63 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 99 0 0# "model" "model_trace:10126" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 102 0 0# "model" "model_trace:10145" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 103 0 0# "model" "model_trace:10154" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 106 0 0# "model" "model_trace:10173" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 107 0 0# "model" "model_trace:10182" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 110 0 0# "model" "model_trace:10201" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 111 0 0# "model" "model_trace:10210" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 114 0 0# "model" "model_trace:10229" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 115 0 0# "model" "model_trace:10238" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16

 function value #"interfac.ads" 118 0 0# "model" "model_trace:10257" 
   : BV16.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 66 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 119 0 0# "model" "model_trace:10266" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 122 0 0# "model" "model_trace:10285" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 123 0 0# "model" "model_trace:10294" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 126 0 0# "model" "model_trace:10313" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 127 0 0# "model" "model_trace:10322" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 130 0 0# "model" "model_trace:10341" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 131 0 0# "model" "model_trace:10350" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 134 0 0# "model" "model_trace:10369" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 135 0 0# "model" "model_trace:10378" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"interfac.ads" 138 0 0# "model" "model_trace:10397" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 74 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 139 0 0# "model" "model_trace:10406" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 142 0 0# "model" "model_trace:10425" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 143 0 0# "model" "model_trace:10434" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 146 0 0# "model" "model_trace:10453" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 147 0 0# "model" "model_trace:10462" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:147, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 150 0 0# "model" "model_trace:10481" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 151 0 0# "model" "model_trace:10490" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:151, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 154 0 0# "model" "model_trace:10509" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 155 0 0# "model" "model_trace:10518" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64

 function value #"interfac.ads" 158 0 0# "model" "model_trace:10537" 
   : BV64.t
 
 function attr__ATTRIBUTE_ADDRESS #"interfac.ads" 77 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__amount
 use import "_gnatprove_standard".Main

 function amount #"interfac.ads" 159 0 0# "model" "model_trace:10546" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__amount___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_32B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type tieee_float_32B #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last #"interfac.ads" 169 0 0# 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : Float32.t)  =
  #"interfac.ads" 169 0 0# (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = tieee_float_32B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tieee_float_32B__ref #"interfac.ads" 169 0 0# =
  { mutable tieee_float_32B__content "model_trace:" : tieee_float_32B }
 
 function tieee_float_32B__ref___projection #"interfac.ads" 169 0 0# 
   (a : tieee_float_32B__ref) : tieee_float_32B =
  a.tieee_float_32B__content
 
 meta "model_projection" function tieee_float_32B__ref___projection
 
 meta "inline : no" function tieee_float_32B__ref___projection
 
 val tieee_float_32B__havoc #"interfac.ads" 169 0 0# 
   (x : tieee_float_32B__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_32B__rep
 use        Interfaces__Tieee_float_32B
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Interfaces__Tieee_float_32B.tieee_float_32B, 
 predicate in_range = Interfaces__Tieee_float_32B.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_32
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type ieee_float_32 #"interfac.ads" 169 0 0# 
 
 function first #"interfac.ads" 169 0 0# 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last #"interfac.ads" 169 0 0# 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range #"interfac.ads" 169 0 0# 
   (x : Float32.t)  =
  #"interfac.ads" 169 0 0# (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = ieee_float_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ieee_float_32__ref #"interfac.ads" 169 0 0# =
  { mutable ieee_float_32__content "model_trace:" : ieee_float_32 }
 
 function ieee_float_32__ref___projection #"interfac.ads" 169 0 0# 
   (a : ieee_float_32__ref) : ieee_float_32 =
  a.ieee_float_32__content
 
 meta "model_projection" function ieee_float_32__ref___projection
 
 meta "inline : no" function ieee_float_32__ref___projection
 
 val ieee_float_32__havoc #"interfac.ads" 169 0 0# 
   (x : ieee_float_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_32__rep
 use        Interfaces__ieee_float_32
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Interfaces__ieee_float_32.ieee_float_32, 
 predicate in_range = Interfaces__ieee_float_32.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_64B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64

 type tieee_float_64B #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : Float64.t =
  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t))
 
 function last #"interfac.ads" 172 0 0# 
   : Float64.t =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : Float64.t)  =
  #"interfac.ads" 172 0 0# (Float64.t'isFinite x)
 
 clone export "ada__model".Static_Float64 with
 type t = tieee_float_64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tieee_float_64B__ref #"interfac.ads" 172 0 0# =
  { mutable tieee_float_64B__content "model_trace:" : tieee_float_64B }
 
 function tieee_float_64B__ref___projection #"interfac.ads" 172 0 0# 
   (a : tieee_float_64B__ref) : tieee_float_64B =
  a.tieee_float_64B__content
 
 meta "model_projection" function tieee_float_64B__ref___projection
 
 meta "inline : no" function tieee_float_64B__ref___projection
 
 val tieee_float_64B__havoc #"interfac.ads" 172 0 0# 
   (x : tieee_float_64B__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_64B__rep
 use        Interfaces__Tieee_float_64B
 use        "_gnatprove_standard".Float64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float64 with
 type t = Interfaces__Tieee_float_64B.tieee_float_64B, 
 predicate in_range = Interfaces__Tieee_float_64B.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64

 type ieee_float_64 #"interfac.ads" 172 0 0# 
 
 function first #"interfac.ads" 172 0 0# 
   : Float64.t =
  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t))
 
 function last #"interfac.ads" 172 0 0# 
   : Float64.t =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)
 
 predicate in_range #"interfac.ads" 172 0 0# 
   (x : Float64.t)  =
  #"interfac.ads" 172 0 0# (Float64.t'isFinite x)
 
 clone export "ada__model".Static_Float64 with
 type t = ieee_float_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ieee_float_64__ref #"interfac.ads" 172 0 0# =
  { mutable ieee_float_64__content "model_trace:" : ieee_float_64 }
 
 function ieee_float_64__ref___projection #"interfac.ads" 172 0 0# 
   (a : ieee_float_64__ref) : ieee_float_64 =
  a.ieee_float_64__content
 
 meta "model_projection" function ieee_float_64__ref___projection
 
 meta "inline : no" function ieee_float_64__ref___projection
 
 val ieee_float_64__havoc #"interfac.ads" 172 0 0# 
   (x : ieee_float_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_64__rep
 use        Interfaces__ieee_float_64
 use        "_gnatprove_standard".Float64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float64 with
 type t = Interfaces__ieee_float_64.ieee_float_64, 
 predicate in_range = Interfaces__ieee_float_64.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "TintB" defined at i-c.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TintB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tintB #"i-c.ads" 35 0 0# 
 
 function first #"i-c.ads" 35 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 35 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 35 0 0# 
   (x : int)  =
  #"i-c.ads" 35 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tintB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tintB__ref #"i-c.ads" 35 0 0# =
  { mutable tintB__content "model_trace:" : tintB }
 
 function tintB__ref___projection #"i-c.ads" 35 0 0# 
   (a : tintB__ref) : tintB =
  a.tintB__content
 
 meta "model_projection" function tintB__ref___projection
 
 meta "inline : no" function tintB__ref___projection
 
 val tintB__havoc #"i-c.ads" 35 0 0# 
   (x : tintB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TintB" defined at i-c.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TintB__rep
 use        Interfaces__c__TintB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__TintB.tintB, 
 predicate in_range = Interfaces__c__TintB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "int" defined at i-c.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ #"i-c.ads" 35 0 0# 
 
 function first #"i-c.ads" 35 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 35 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 35 0 0# 
   (x : int)  =
  #"i-c.ads" 35 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type int____ref #"i-c.ads" 35 0 0# =
  { mutable int____content "model_trace:" : int__ }
 
 function int____ref___projection #"i-c.ads" 35 0 0# 
   (a : int____ref) : int__ =
  a.int____content
 
 meta "model_projection" function int____ref___projection
 
 meta "inline : no" function int____ref___projection
 
 val int____havoc #"i-c.ads" 35 0 0# 
   (x : int____ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "int" defined at i-c.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__int__rep
 use        Interfaces__c__int
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__int.int__, 
 predicate in_range = Interfaces__c__int.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "TshortB" defined at i-c.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TshortB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tshortB #"i-c.ads" 36 0 0# 
 
 function first #"i-c.ads" 36 0 0# 
   : int =
  ( -32768 )
 
 function last #"i-c.ads" 36 0 0# 
   : int =
  32767
 
 predicate in_range #"i-c.ads" 36 0 0# 
   (x : int)  =
  #"i-c.ads" 36 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tshortB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tshortB__ref #"i-c.ads" 36 0 0# =
  { mutable tshortB__content "model_trace:" : tshortB }
 
 function tshortB__ref___projection #"i-c.ads" 36 0 0# 
   (a : tshortB__ref) : tshortB =
  a.tshortB__content
 
 meta "model_projection" function tshortB__ref___projection
 
 meta "inline : no" function tshortB__ref___projection
 
 val tshortB__havoc #"i-c.ads" 36 0 0# 
   (x : tshortB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TshortB" defined at i-c.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TshortB__rep
 use        Interfaces__c__TshortB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__TshortB.tshortB, 
 predicate in_range = Interfaces__c__TshortB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "short" defined at i-c.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__short
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short #"i-c.ads" 36 0 0# 
 
 function first #"i-c.ads" 36 0 0# 
   : int =
  ( -32768 )
 
 function last #"i-c.ads" 36 0 0# 
   : int =
  32767
 
 predicate in_range #"i-c.ads" 36 0 0# 
   (x : int)  =
  #"i-c.ads" 36 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short__ref #"i-c.ads" 36 0 0# =
  { mutable short__content "model_trace:" : short }
 
 function short__ref___projection #"i-c.ads" 36 0 0# 
   (a : short__ref) : short =
  a.short__content
 
 meta "model_projection" function short__ref___projection
 
 meta "inline : no" function short__ref___projection
 
 val short__havoc #"i-c.ads" 36 0 0# 
   (x : short__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short" defined at i-c.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__short__rep
 use        Interfaces__c__short
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__short.short, 
 predicate in_range = Interfaces__c__short.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "TlongB" defined at i-c.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TlongB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tlongB #"i-c.ads" 37 0 0# 
 
 function first #"i-c.ads" 37 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 37 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 37 0 0# 
   (x : int)  =
  #"i-c.ads" 37 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tlongB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tlongB__ref #"i-c.ads" 37 0 0# =
  { mutable tlongB__content "model_trace:" : tlongB }
 
 function tlongB__ref___projection #"i-c.ads" 37 0 0# 
   (a : tlongB__ref) : tlongB =
  a.tlongB__content
 
 meta "model_projection" function tlongB__ref___projection
 
 meta "inline : no" function tlongB__ref___projection
 
 val tlongB__havoc #"i-c.ads" 37 0 0# 
   (x : tlongB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TlongB" defined at i-c.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TlongB__rep
 use        Interfaces__c__TlongB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__TlongB.tlongB, 
 predicate in_range = Interfaces__c__TlongB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long" defined at i-c.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long #"i-c.ads" 37 0 0# 
 
 function first #"i-c.ads" 37 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 37 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 37 0 0# 
   (x : int)  =
  #"i-c.ads" 37 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long__ref #"i-c.ads" 37 0 0# =
  { mutable long__content "model_trace:" : long }
 
 function long__ref___projection #"i-c.ads" 37 0 0# 
   (a : long__ref) : long =
  a.long__content
 
 meta "model_projection" function long__ref___projection
 
 meta "inline : no" function long__ref___projection
 
 val long__havoc #"i-c.ads" 37 0 0# 
   (x : long__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long" defined at i-c.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__long__rep
 use        Interfaces__c__long
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__long.long, 
 predicate in_range = Interfaces__c__long.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tsigned_charB" defined at i-c.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tsigned_charB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsigned_charB #"i-c.ads" 40 0 0# 
 
 function first #"i-c.ads" 40 0 0# 
   : int =
  ( -128 )
 
 function last #"i-c.ads" 40 0 0# 
   : int =
  127
 
 predicate in_range #"i-c.ads" 40 0 0# 
   (x : int)  =
  #"i-c.ads" 40 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsigned_charB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tsigned_charB__ref #"i-c.ads" 40 0 0# =
  { mutable tsigned_charB__content "model_trace:" : tsigned_charB }
 
 function tsigned_charB__ref___projection #"i-c.ads" 40 0 0# 
   (a : tsigned_charB__ref) : tsigned_charB =
  a.tsigned_charB__content
 
 meta "model_projection" function tsigned_charB__ref___projection
 
 meta "inline : no" function tsigned_charB__ref___projection
 
 val tsigned_charB__havoc #"i-c.ads" 40 0 0# 
   (x : tsigned_charB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tsigned_charB" defined at i-c.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tsigned_charB__rep
 use        Interfaces__c__Tsigned_charB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__Tsigned_charB.tsigned_charB, 
 predicate in_range = Interfaces__c__Tsigned_charB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "signed_char" defined at i-c.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__signed_char
 use import "_gnatprove_standard".Main
 use import "int".Int

 type signed_char #"i-c.ads" 40 0 0# 
 
 function first #"i-c.ads" 40 0 0# 
   : int =
  ( -128 )
 
 function last #"i-c.ads" 40 0 0# 
   : int =
  127
 
 predicate in_range #"i-c.ads" 40 0 0# 
   (x : int)  =
  #"i-c.ads" 40 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = signed_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type signed_char__ref #"i-c.ads" 40 0 0# =
  { mutable signed_char__content "model_trace:" : signed_char }
 
 function signed_char__ref___projection #"i-c.ads" 40 0 0# 
   (a : signed_char__ref) : signed_char =
  a.signed_char__content
 
 meta "model_projection" function signed_char__ref___projection
 
 meta "inline : no" function signed_char__ref___projection
 
 val signed_char__havoc #"i-c.ads" 40 0 0# 
   (x : signed_char__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "signed_char" defined at i-c.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__signed_char__rep
 use        Interfaces__c__signed_char
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__signed_char.signed_char, 
 predicate in_range = Interfaces__c__signed_char.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned" defined at i-c.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned #"i-c.ads" 43 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 43 0 0# 
   : BV32.t
 
 function first #"i-c.ads" 43 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-c.ads" 43 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-c.ads" 43 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 43 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-c.ads" 43 0 0# 
   (x : BV32.t)  =
  #"i-c.ads" 43 0 0# true
 
 predicate in_range_int #"i-c.ads" 43 0 0# 
   (x : int)  =
  #"i-c.ads" 43 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned__ref #"i-c.ads" 43 0 0# =
  { mutable unsigned__content "model_trace:" : unsigned }
 
 function unsigned__ref___projection #"i-c.ads" 43 0 0# 
   (a : unsigned__ref) : unsigned =
  a.unsigned__content
 
 meta "model_projection" function unsigned__ref___projection
 
 meta "inline : no" function unsigned__ref___projection
 
 val unsigned__havoc #"i-c.ads" 43 0 0# 
   (x : unsigned__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned" defined at i-c.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned__rep
 use        Interfaces__c__unsigned
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = Interfaces__c__unsigned.unsigned, 
 predicate in_range = Interfaces__c__unsigned.in_range, 
 predicate in_range_int = Interfaces__c__unsigned.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_short" defined at i-c.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_short
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV16

 type unsigned_short #"i-c.ads" 44 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 44 0 0# 
   : BV16.t
 
 function first #"i-c.ads" 44 0 0# 
   : BV16.t =
  ( BV16.of_int 0 )
 
 function last #"i-c.ads" 44 0 0# 
   : BV16.t =
  ( BV16.of_int 65535 )
 
 function first_int #"i-c.ads" 44 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 44 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 44 0 0# 
   (x : BV16.t)  =
  #"i-c.ads" 44 0 0# true
 
 predicate in_range_int #"i-c.ads" 44 0 0# 
   (x : int)  =
  #"i-c.ads" 44 0 0# BV16.uint_in_range x
 
 clone export "ada__model".Static_Modular_16 with
 type t = unsigned_short, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned_short__ref #"i-c.ads" 44 0 0# =
  { mutable unsigned_short__content "model_trace:" : unsigned_short }
 
 function unsigned_short__ref___projection #"i-c.ads" 44 0 0# 
   (a : unsigned_short__ref) : unsigned_short =
  a.unsigned_short__content
 
 meta "model_projection" function unsigned_short__ref___projection
 
 meta "inline : no" function unsigned_short__ref___projection
 
 val unsigned_short__havoc #"i-c.ads" 44 0 0# 
   (x : unsigned_short__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_short" defined at i-c.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_short__rep
 use        Interfaces__c__unsigned_short
 use        "_gnatprove_standard".BV16
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV16 with
 type t = Interfaces__c__unsigned_short.unsigned_short, 
 predicate in_range = Interfaces__c__unsigned_short.in_range, 
 predicate in_range_int = Interfaces__c__unsigned_short.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_long" defined at i-c.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_long
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type unsigned_long #"i-c.ads" 45 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 45 0 0# 
   : BV32.t
 
 function first #"i-c.ads" 45 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-c.ads" 45 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-c.ads" 45 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 45 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-c.ads" 45 0 0# 
   (x : BV32.t)  =
  #"i-c.ads" 45 0 0# true
 
 predicate in_range_int #"i-c.ads" 45 0 0# 
   (x : int)  =
  #"i-c.ads" 45 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = unsigned_long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned_long__ref #"i-c.ads" 45 0 0# =
  { mutable unsigned_long__content "model_trace:" : unsigned_long }
 
 function unsigned_long__ref___projection #"i-c.ads" 45 0 0# 
   (a : unsigned_long__ref) : unsigned_long =
  a.unsigned_long__content
 
 meta "model_projection" function unsigned_long__ref___projection
 
 meta "inline : no" function unsigned_long__ref___projection
 
 val unsigned_long__havoc #"i-c.ads" 45 0 0# 
   (x : unsigned_long__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_long" defined at i-c.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_long__rep
 use        Interfaces__c__unsigned_long
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = Interfaces__c__unsigned_long.unsigned_long, 
 predicate in_range = Interfaces__c__unsigned_long.in_range, 
 predicate in_range_int = Interfaces__c__unsigned_long.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "unsigned_char" defined at i-c.ads:47, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_char
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type unsigned_char #"i-c.ads" 47 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 47 0 0# 
   : BV8.t
 
 function first #"i-c.ads" 47 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"i-c.ads" 47 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"i-c.ads" 47 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 47 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 47 0 0# 
   (x : BV8.t)  =
  #"i-c.ads" 47 0 0# true
 
 predicate in_range_int #"i-c.ads" 47 0 0# 
   (x : int)  =
  #"i-c.ads" 47 0 0# BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = unsigned_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type unsigned_char__ref #"i-c.ads" 47 0 0# =
  { mutable unsigned_char__content "model_trace:" : unsigned_char }
 
 function unsigned_char__ref___projection #"i-c.ads" 47 0 0# 
   (a : unsigned_char__ref) : unsigned_char =
  a.unsigned_char__content
 
 meta "model_projection" function unsigned_char__ref___projection
 
 meta "inline : no" function unsigned_char__ref___projection
 
 val unsigned_char__havoc #"i-c.ads" 47 0 0# 
   (x : unsigned_char__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "unsigned_char" defined at i-c.ads:47, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__unsigned_char__rep
 use        Interfaces__c__unsigned_char
 use        "_gnatprove_standard".BV8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV8 with
 type t = Interfaces__c__unsigned_char.unsigned_char, 
 predicate in_range = Interfaces__c__unsigned_char.in_range, 
 predicate in_range_int = Interfaces__c__unsigned_char.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "plain_char" defined at i-c.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__plain_char
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type plain_char #"i-c.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 50 0 0# 
   : BV8.t
 
 function first #"i-c.ads" 50 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"i-c.ads" 50 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"i-c.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 50 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 50 0 0# 
   (x : BV8.t)  =
  #"i-c.ads" 50 0 0# true
 
 predicate in_range_int #"i-c.ads" 50 0 0# 
   (x : int)  =
  #"i-c.ads" 50 0 0# BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = plain_char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type plain_char__ref #"i-c.ads" 50 0 0# =
  { mutable plain_char__content "model_trace:" : plain_char }
 
 function plain_char__ref___projection #"i-c.ads" 50 0 0# 
   (a : plain_char__ref) : plain_char =
  a.plain_char__content
 
 meta "model_projection" function plain_char__ref___projection
 
 meta "inline : no" function plain_char__ref___projection
 
 val plain_char__havoc #"i-c.ads" 50 0 0# 
   (x : plain_char__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "plain_char" defined at i-c.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__plain_char__rep
 use        Interfaces__c__plain_char
 use        "_gnatprove_standard".BV8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV8 with
 type t = Interfaces__c__plain_char.plain_char, 
 predicate in_range = Interfaces__c__plain_char.in_range, 
 predicate in_range_int = Interfaces__c__plain_char.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tptrdiff_tB" defined at i-c.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tptrdiff_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tptrdiff_tB #"i-c.ads" 56 0 0# 
 
 function first #"i-c.ads" 56 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 56 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 56 0 0# 
   (x : int)  =
  #"i-c.ads" 56 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tptrdiff_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tptrdiff_tB__ref #"i-c.ads" 56 0 0# =
  { mutable tptrdiff_tB__content "model_trace:" : tptrdiff_tB }
 
 function tptrdiff_tB__ref___projection #"i-c.ads" 56 0 0# 
   (a : tptrdiff_tB__ref) : tptrdiff_tB =
  a.tptrdiff_tB__content
 
 meta "model_projection" function tptrdiff_tB__ref___projection
 
 meta "inline : no" function tptrdiff_tB__ref___projection
 
 val tptrdiff_tB__havoc #"i-c.ads" 56 0 0# 
   (x : tptrdiff_tB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tptrdiff_tB" defined at i-c.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tptrdiff_tB__rep
 use        Interfaces__c__Tptrdiff_tB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__Tptrdiff_tB.tptrdiff_tB, 
 predicate in_range = Interfaces__c__Tptrdiff_tB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "ptrdiff_t" defined at i-c.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__ptrdiff_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ptrdiff_t #"i-c.ads" 56 0 0# 
 
 function first #"i-c.ads" 56 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-c.ads" 56 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 56 0 0# 
   (x : int)  =
  #"i-c.ads" 56 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ptrdiff_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ptrdiff_t__ref #"i-c.ads" 56 0 0# =
  { mutable ptrdiff_t__content "model_trace:" : ptrdiff_t }
 
 function ptrdiff_t__ref___projection #"i-c.ads" 56 0 0# 
   (a : ptrdiff_t__ref) : ptrdiff_t =
  a.ptrdiff_t__content
 
 meta "model_projection" function ptrdiff_t__ref___projection
 
 meta "inline : no" function ptrdiff_t__ref___projection
 
 val ptrdiff_t__havoc #"i-c.ads" 56 0 0# 
   (x : ptrdiff_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ptrdiff_t" defined at i-c.ads:56, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__ptrdiff_t__rep
 use        Interfaces__c__ptrdiff_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__ptrdiff_t.ptrdiff_t, 
 predicate in_range = Interfaces__c__ptrdiff_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "size_t" defined at i-c.ads:60, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type size_t #"i-c.ads" 60 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-c.ads" 60 0 0# 
   : BV32.t
 
 function first #"i-c.ads" 60 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-c.ads" 60 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-c.ads" 60 0 0# 
   : int =
  0
 
 function last_int #"i-c.ads" 60 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-c.ads" 60 0 0# 
   (x : BV32.t)  =
  #"i-c.ads" 60 0 0# true
 
 predicate in_range_int #"i-c.ads" 60 0 0# 
   (x : int)  =
  #"i-c.ads" 60 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type size_t__ref #"i-c.ads" 60 0 0# =
  { mutable size_t__content "model_trace:" : size_t }
 
 function size_t__ref___projection #"i-c.ads" 60 0 0# 
   (a : size_t__ref) : size_t =
  a.size_t__content
 
 meta "model_projection" function size_t__ref___projection
 
 meta "inline : no" function size_t__ref___projection
 
 val size_t__havoc #"i-c.ads" 60 0 0# 
   (x : size_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "size_t" defined at i-c.ads:60, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__size_t__rep
 use        Interfaces__c__size_t
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = Interfaces__c__size_t.size_t, 
 predicate in_range = Interfaces__c__size_t.in_range, 
 predicate in_range_int = Interfaces__c__size_t.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tc_floatB" defined at i-c.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tc_floatB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type tc_floatB #"i-c.ads" 64 0 0# 
 
 function first #"i-c.ads" 64 0 0# 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last #"i-c.ads" 64 0 0# 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range #"i-c.ads" 64 0 0# 
   (x : Float32.t)  =
  #"i-c.ads" 64 0 0# (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = tc_floatB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tc_floatB__ref #"i-c.ads" 64 0 0# =
  { mutable tc_floatB__content "model_trace:" : tc_floatB }
 
 function tc_floatB__ref___projection #"i-c.ads" 64 0 0# 
   (a : tc_floatB__ref) : tc_floatB =
  a.tc_floatB__content
 
 meta "model_projection" function tc_floatB__ref___projection
 
 meta "inline : no" function tc_floatB__ref___projection
 
 val tc_floatB__havoc #"i-c.ads" 64 0 0# 
   (x : tc_floatB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tc_floatB" defined at i-c.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tc_floatB__rep
 use        Interfaces__c__Tc_floatB
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Interfaces__c__Tc_floatB.tc_floatB, 
 predicate in_range = Interfaces__c__Tc_floatB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "c_float" defined at i-c.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__c_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32

 type c_float #"i-c.ads" 64 0 0# 
 
 function first #"i-c.ads" 64 0 0# 
   : Float32.t =
  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t))
 
 function last #"i-c.ads" 64 0 0# 
   : Float32.t =
  (340282346638528859811704183484516925440.0:Float32.t)
 
 predicate in_range #"i-c.ads" 64 0 0# 
   (x : Float32.t)  =
  #"i-c.ads" 64 0 0# (Float32.t'isFinite x)
 
 clone export "ada__model".Static_Float32 with
 type t = c_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type c_float__ref #"i-c.ads" 64 0 0# =
  { mutable c_float__content "model_trace:" : c_float }
 
 function c_float__ref___projection #"i-c.ads" 64 0 0# 
   (a : c_float__ref) : c_float =
  a.c_float__content
 
 meta "model_projection" function c_float__ref___projection
 
 meta "inline : no" function c_float__ref___projection
 
 val c_float__havoc #"i-c.ads" 64 0 0# 
   (x : c_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "c_float" defined at i-c.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__c_float__rep
 use        Interfaces__c__c_float
 use        "_gnatprove_standard".Float32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float32 with
 type t = Interfaces__c__c_float.c_float, 
 predicate in_range = Interfaces__c__c_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "TdoubleB" defined at i-c.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TdoubleB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64

 type tdoubleB #"i-c.ads" 65 0 0# 
 
 function first #"i-c.ads" 65 0 0# 
   : Float64.t =
  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t))
 
 function last #"i-c.ads" 65 0 0# 
   : Float64.t =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)
 
 predicate in_range #"i-c.ads" 65 0 0# 
   (x : Float64.t)  =
  #"i-c.ads" 65 0 0# (Float64.t'isFinite x)
 
 clone export "ada__model".Static_Float64 with
 type t = tdoubleB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tdoubleB__ref #"i-c.ads" 65 0 0# =
  { mutable tdoubleB__content "model_trace:" : tdoubleB }
 
 function tdoubleB__ref___projection #"i-c.ads" 65 0 0# 
   (a : tdoubleB__ref) : tdoubleB =
  a.tdoubleB__content
 
 meta "model_projection" function tdoubleB__ref___projection
 
 meta "inline : no" function tdoubleB__ref___projection
 
 val tdoubleB__havoc #"i-c.ads" 65 0 0# 
   (x : tdoubleB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TdoubleB" defined at i-c.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TdoubleB__rep
 use        Interfaces__c__TdoubleB
 use        "_gnatprove_standard".Float64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float64 with
 type t = Interfaces__c__TdoubleB.tdoubleB, 
 predicate in_range = Interfaces__c__TdoubleB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "double" defined at i-c.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__double
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64

 type double #"i-c.ads" 65 0 0# 
 
 function first #"i-c.ads" 65 0 0# 
   : Float64.t =
  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t))
 
 function last #"i-c.ads" 65 0 0# 
   : Float64.t =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)
 
 predicate in_range #"i-c.ads" 65 0 0# 
   (x : Float64.t)  =
  #"i-c.ads" 65 0 0# (Float64.t'isFinite x)
 
 clone export "ada__model".Static_Float64 with
 type t = double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type double__ref #"i-c.ads" 65 0 0# =
  { mutable double__content "model_trace:" : double }
 
 function double__ref___projection #"i-c.ads" 65 0 0# 
   (a : double__ref) : double =
  a.double__content
 
 meta "model_projection" function double__ref___projection
 
 meta "inline : no" function double__ref___projection
 
 val double__havoc #"i-c.ads" 65 0 0# 
   (x : double__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "double" defined at i-c.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__double__rep
 use        Interfaces__c__double
 use        "_gnatprove_standard".Float64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Float64 with
 type t = Interfaces__c__double.double, 
 predicate in_range = Interfaces__c__double.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "TcharB" defined at i-c.ads:72, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TcharB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcharB #"i-c.ads" 72 0 0# 
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 72 0 0# 
   (x : int)  =
  #"i-c.ads" 72 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcharB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tcharB__ref #"i-c.ads" 72 0 0# =
  { mutable tcharB__content "model_trace:" : tcharB }
 
 function tcharB__ref___projection #"i-c.ads" 72 0 0# 
   (a : tcharB__ref) : tcharB =
  a.tcharB__content
 
 meta "model_projection" function tcharB__ref___projection
 
 meta "inline : no" function tcharB__ref___projection
 
 val tcharB__havoc #"i-c.ads" 72 0 0# 
   (x : tcharB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TcharB" defined at i-c.ads:72, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__TcharB__rep
 use        Interfaces__c__TcharB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__TcharB.tcharB, 
 predicate in_range = Interfaces__c__TcharB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "char" defined at i-c.ads:72, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char
 use import "_gnatprove_standard".Main
 use import "int".Int

 type char #"i-c.ads" 72 0 0# 
 
 function first #"i-c.ads" 72 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 72 0 0# 
   : int =
  255
 
 predicate in_range #"i-c.ads" 72 0 0# 
   (x : int)  =
  #"i-c.ads" 72 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = char, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type char__ref #"i-c.ads" 72 0 0# =
  { mutable char__content "model_trace:" : char }
 
 function char__ref___projection #"i-c.ads" 72 0 0# 
   (a : char__ref) : char =
  a.char__content
 
 meta "model_projection" function char__ref___projection
 
 meta "inline : no" function char__ref___projection
 
 val char__havoc #"i-c.ads" 72 0 0# 
   (x : char__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "char" defined at i-c.ads:72, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char__rep
 use        Interfaces__c__char
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__char.char, 
 predicate in_range = Interfaces__c__char.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "nul" defined at i-c.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__nul
 use import "_gnatprove_standard".Main

 function nul #"i-c.ads" 74 0 0# "model" "model_trace:10926" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 72 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 76 0 0# "model" "model_trace:10945" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c" defined at i-c.ads:76, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c
 use import "_gnatprove_standard".Main

 function to_c #"i-c.ads" 76 0 0# 
   (item : int) : int
 
 predicate to_c__function_guard #"i-c.ads" 72 0 0# 
   (result : int) (item : int) 

end

(* Module for defining the constant "item" defined at i-c.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 77 0 0# "model" "model_trace:10964" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada" defined at i-c.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada
 use import "_gnatprove_standard".Main

 function to_ada #"i-c.ads" 77 0 0# 
   (item : int) : int
 
 predicate to_ada__function_guard #"system.ads" 1 0 0# 
   (result : int) (item : int) 

end

(* Module for axiomatizing the array theory associated to type "char_array" defined at i-c.ads:79, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV32__Interfaces__c__char
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__char
 use        Interfaces__c__char__rep

 function index_I1_one #"i-c.ads" 72 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 type component_type #"i-c.ads" 72 0 0# =
  Interfaces__c__char.char
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV32.t, 
 predicate I1.le = BV32.ule, 
 predicate I1.lt = BV32.ult, 
 predicate I1.gt = BV32.ugt, 
 function I1.add = BV32.add, 
 function I1.sub = BV32.sub, 
 function I1.one = BV32.one, 
 type component_type = component_type
 
 function bool_eq #"i-c.ads" 72 0 0# 
   (a : map) (a__first : BV32.t) (a__last : BV32.t) (b : map) (b__first : BV32.t) (b__last : BV32.t) : bool =
  ( (if ((BV32.ule a__first a__last)) then (
   ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
   (BV32.ugt b__first b__last))) /\ (forall temp___idx_160 #"i-c.ads" 72 0 0#  : BV32.t.
   (if (( (BV32.ule a__first temp___idx_160) /\ (BV32.ule temp___idx_160 a__last) )) then (
    ((Interfaces__c__char__rep.to_rep (get a temp___idx_160)) = (Interfaces__c__char__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_160))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"i-c.ads" 72 0 0#  b #"i-c.ads" 72 0 0#  : map.
  (forall a__first #"i-c.ads" 72 0 0#  a__last #"i-c.ads" 72 0 0#  b__first #"i-c.ads" 72 0 0#  b__last #"i-c.ads" 72 0 0#  : BV32.t.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((BV32.ule a__first a__last)) then (
    ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
    (BV32.ugt b__first b__last))) /\ (forall temp___idx_160 #"i-c.ads" 72 0 0#  : BV32.t.
    (if (( (BV32.ule a__first temp___idx_160) /\ (BV32.ule temp___idx_160 a__last) )) then (
     ((Interfaces__c__char__rep.to_rep (get a temp___idx_160)) = (Interfaces__c__char__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_160))))) else true)) ) )))
 
 function index_Index_one #"i-c.ads" 72 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__char__rep.to_rep, 
 type map = map, 
 type Index.t = BV32.t, 
 predicate Index.le = BV32.ule, 
 predicate Index.lt = BV32.ult, 
 predicate Index.gt = BV32.ugt, 
 function Index.add = BV32.add, 
 function Index.sub = BV32.sub, 
 function Index.one = BV32.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "char_array" defined at i-c.ads:79, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__char
 use        Array__BV32__Interfaces__c__char

 type component_type #"i-c.ads" 72 0 0# =
  Interfaces__c__char.char
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV32__Interfaces__c__char.map, 
 function array_bool_eq = Array__BV32__Interfaces__c__char.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV32.t, 
 function to_rep = Interfaces__c__size_t__rep.to_rep, 
 function rep_to_int = BV32.t'int, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV32.ule
 
 type char_array #"i-c.ads" 79 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type char_array__ref #"i-c.ads" 79 0 0# =
  { mutable char_array__content "model_trace:" : char_array }
 
 function char_array__ref___projection #"i-c.ads" 79 0 0# 
   (a : char_array__ref) : char_array =
  a.char_array__content
 
 meta "model_projection" function char_array__ref___projection
 
 meta "inline : no" function char_array__ref___projection
 
 val char_array__havoc #"i-c.ads" 79 0 0# 
   (x : char_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function item #"i-c.ads" 82 0 0# "model_projected" "model_trace:11001" 
   : Interfaces__c__char_array.char_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 79 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated" defined at i-c.ads:82, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function is_nul_terminated #"i-c.ads" 82 0 0# 
   (item : Interfaces__c__char_array.char_array) : bool
 
 predicate is_nul_terminated__function_guard #"i-c.ads" 79 0 0# 
   (result : bool) (item : Interfaces__c__char_array.char_array) 

end

(* Module for defining the constant "item" defined at i-c.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"i-c.ads" 85 0 0# "model_projected" "model_trace:11020" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__2__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 86 0 0# "model" "model_trace:11029" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 86 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__2__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__2" defined at i-c.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Interfaces__c__char_array

 function to_c__2 #"i-c.ads" 84 0 0# 
   (item : Standard__string.string) (append_nul : bool) : Interfaces__c__char_array.char_array
 
 predicate to_c__2__function_guard #"i-c.ads" 79 0 0# 
   (result : Interfaces__c__char_array.char_array) (item : Standard__string.string) (append_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__2__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function item #"i-c.ads" 89 0 0# "model_projected" "model_trace:11049" 
   : Interfaces__c__char_array.char_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 79 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__2__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 90 0 0# "model" "model_trace:11058" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 90 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__2__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__2" defined at i-c.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Interfaces__c__char_array

 function to_ada__2 #"i-c.ads" 88 0 0# 
   (item : Interfaces__c__char_array.char_array) (trim_nul : bool) : Standard__string.string
 
 predicate to_ada__2__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (item : Interfaces__c__char_array.char_array) (trim_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:93, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"i-c.ads" 93 0 0# "model_projected" "model_trace:11078" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__3__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 96 0 0# "model" "model_trace:11105" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 96 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__3__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array

 function item #"i-c.ads" 99 0 0# "model_projected" "model_trace:11124" 
   : Interfaces__c__char_array.char_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 79 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__3__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 102 0 0# "model" "model_trace:11151" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 102 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Twchar_tB" defined at i-c.ads:108, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Twchar_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type twchar_tB #"i-c.ads" 108 0 0# 
 
 function first #"i-c.ads" 108 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 108 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 108 0 0# 
   (x : int)  =
  #"i-c.ads" 108 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = twchar_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type twchar_tB__ref #"i-c.ads" 108 0 0# =
  { mutable twchar_tB__content "model_trace:" : twchar_tB }
 
 function twchar_tB__ref___projection #"i-c.ads" 108 0 0# 
   (a : twchar_tB__ref) : twchar_tB =
  a.twchar_tB__content
 
 meta "model_projection" function twchar_tB__ref___projection
 
 meta "inline : no" function twchar_tB__ref___projection
 
 val twchar_tB__havoc #"i-c.ads" 108 0 0# 
   (x : twchar_tB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Twchar_tB" defined at i-c.ads:108, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Twchar_tB__rep
 use        Interfaces__c__Twchar_tB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__Twchar_tB.twchar_tB, 
 predicate in_range = Interfaces__c__Twchar_tB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wchar_t" defined at i-c.ads:108, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__wchar_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wchar_t #"i-c.ads" 108 0 0# 
 
 function first #"i-c.ads" 108 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 108 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 108 0 0# 
   (x : int)  =
  #"i-c.ads" 108 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wchar_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wchar_t__ref #"i-c.ads" 108 0 0# =
  { mutable wchar_t__content "model_trace:" : wchar_t }
 
 function wchar_t__ref___projection #"i-c.ads" 108 0 0# 
   (a : wchar_t__ref) : wchar_t =
  a.wchar_t__content
 
 meta "model_projection" function wchar_t__ref___projection
 
 meta "inline : no" function wchar_t__ref___projection
 
 val wchar_t__havoc #"i-c.ads" 108 0 0# 
   (x : wchar_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wchar_t" defined at i-c.ads:108, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__wchar_t__rep
 use        Interfaces__c__wchar_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__wchar_t.wchar_t, 
 predicate in_range = Interfaces__c__wchar_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "wide_nul" defined at i-c.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__wide_nul
 use import "_gnatprove_standard".Main

 function wide_nul #"i-c.ads" 111 0 0# "model" "model_trace:11181" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 108 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__4__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 113 0 0# "model" "model_trace:11200" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__4" defined at i-c.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__4
 use import "_gnatprove_standard".Main

 function to_c__4 #"i-c.ads" 113 0 0# 
   (item : int) : int
 
 predicate to_c__4__function_guard #"i-c.ads" 108 0 0# 
   (result : int) (item : int) 

end

(* Module for defining the constant "item" defined at i-c.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__4__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 114 0 0# "model" "model_trace:11219" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__4" defined at i-c.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__4
 use import "_gnatprove_standard".Main

 function to_ada__4 #"i-c.ads" 114 0 0# 
   (item : int) : int
 
 predicate to_ada__4__function_guard #"system.ads" 1 0 0# 
   (result : int) (item : int) 

end

(* Module for axiomatizing the array theory associated to type "wchar_array" defined at i-c.ads:116, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV32__Interfaces__c__wchar_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__wchar_t
 use        Interfaces__c__wchar_t__rep

 function index_I1_one #"i-c.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 type component_type #"i-c.ads" 108 0 0# =
  Interfaces__c__wchar_t.wchar_t
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV32.t, 
 predicate I1.le = BV32.ule, 
 predicate I1.lt = BV32.ult, 
 predicate I1.gt = BV32.ugt, 
 function I1.add = BV32.add, 
 function I1.sub = BV32.sub, 
 function I1.one = BV32.one, 
 type component_type = component_type
 
 function bool_eq #"i-c.ads" 108 0 0# 
   (a : map) (a__first : BV32.t) (a__last : BV32.t) (b : map) (b__first : BV32.t) (b__last : BV32.t) : bool =
  ( (if ((BV32.ule a__first a__last)) then (
   ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
   (BV32.ugt b__first b__last))) /\ (forall temp___idx_161 #"i-c.ads" 108 0 0#  : BV32.t.
   (if (( (BV32.ule a__first temp___idx_161) /\ (BV32.ule temp___idx_161 a__last) )) then (
    ((Interfaces__c__wchar_t__rep.to_rep (get a temp___idx_161)) = (Interfaces__c__wchar_t__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_161))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"i-c.ads" 108 0 0#  b #"i-c.ads" 108 0 0#  : map.
  (forall a__first #"i-c.ads" 108 0 0#  a__last #"i-c.ads" 108 0 0#  b__first #"i-c.ads" 108 0 0#  b__last #"i-c.ads" 108 0 0#  : BV32.t.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((BV32.ule a__first a__last)) then (
    ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
    (BV32.ugt b__first b__last))) /\ (forall temp___idx_161 #"i-c.ads" 108 0 0#  : BV32.t.
    (if (( (BV32.ule a__first temp___idx_161) /\ (BV32.ule temp___idx_161 a__last) )) then (
     ((Interfaces__c__wchar_t__rep.to_rep (get a temp___idx_161)) = (Interfaces__c__wchar_t__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_161))))) else true)) ) )))
 
 function index_Index_one #"i-c.ads" 108 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__wchar_t__rep.to_rep, 
 type map = map, 
 type Index.t = BV32.t, 
 predicate Index.le = BV32.ule, 
 predicate Index.lt = BV32.ult, 
 predicate Index.gt = BV32.ugt, 
 function Index.add = BV32.add, 
 function Index.sub = BV32.sub, 
 function Index.one = BV32.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "wchar_array" defined at i-c.ads:116, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__wchar_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__wchar_t
 use        Array__BV32__Interfaces__c__wchar_t

 type component_type #"i-c.ads" 108 0 0# =
  Interfaces__c__wchar_t.wchar_t
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV32__Interfaces__c__wchar_t.map, 
 function array_bool_eq = Array__BV32__Interfaces__c__wchar_t.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV32.t, 
 function to_rep = Interfaces__c__size_t__rep.to_rep, 
 function rep_to_int = BV32.t'int, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV32.ule
 
 type wchar_array #"i-c.ads" 116 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type wchar_array__ref #"i-c.ads" 116 0 0# =
  { mutable wchar_array__content "model_trace:" : wchar_array }
 
 function wchar_array__ref___projection #"i-c.ads" 116 0 0# 
   (a : wchar_array__ref) : wchar_array =
  a.wchar_array__content
 
 meta "model_projection" function wchar_array__ref___projection
 
 meta "inline : no" function wchar_array__ref___projection
 
 val wchar_array__havoc #"i-c.ads" 116 0 0# 
   (x : wchar_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__2__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function item #"i-c.ads" 118 0 0# "model_projected" "model_trace:11250" 
   : Interfaces__c__wchar_array.wchar_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 116 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated__2" defined at i-c.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated__2
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function is_nul_terminated__2 #"i-c.ads" 118 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) : bool
 
 predicate is_nul_terminated__2__function_guard #"i-c.ads" 116 0 0# 
   (result : bool) (item : Interfaces__c__wchar_array.wchar_array) 

end

(* Module for defining the constant "item" defined at i-c.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__5__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 121 0 0# "model_projected" "model_trace:11269" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__5__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__5__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 122 0 0# "model" "model_trace:11278" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 122 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__5__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__5" defined at i-c.ads:120, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__5
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__wchar_array

 function to_c__5 #"i-c.ads" 120 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__wchar_array.wchar_array
 
 predicate to_c__5__function_guard #"i-c.ads" 116 0 0# 
   (result : Interfaces__c__wchar_array.wchar_array) (item : Standard__wide_string.wide_string) (append_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__5__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function item #"i-c.ads" 125 0 0# "model_projected" "model_trace:11298" 
   : Interfaces__c__wchar_array.wchar_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 116 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__5__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__5__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 126 0 0# "model" "model_trace:11307" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 126 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__5__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__5" defined at i-c.ads:124, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__5
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__wchar_array

 function to_ada__5 #"i-c.ads" 124 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) (trim_nul : bool) : Standard__wide_string.wide_string
 
 predicate to_ada__5__function_guard #"system.ads" 1 0 0# 
   (result : Standard__wide_string.wide_string) (item : Interfaces__c__wchar_array.wchar_array) (trim_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__6__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 129 0 0# "model_projected" "model_trace:11327" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__6__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 132 0 0# "model" "model_trace:11354" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 132 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__6__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array

 function item #"i-c.ads" 135 0 0# "model_projected" "model_trace:11373" 
   : Interfaces__c__wchar_array.wchar_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 116 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__6__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 138 0 0# "model" "model_trace:11400" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 138 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tchar16_tB" defined at i-c.ads:146, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tchar16_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tchar16_tB #"i-c.ads" 146 0 0# 
 
 function first #"i-c.ads" 146 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 146 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 146 0 0# 
   (x : int)  =
  #"i-c.ads" 146 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tchar16_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tchar16_tB__ref #"i-c.ads" 146 0 0# =
  { mutable tchar16_tB__content "model_trace:" : tchar16_tB }
 
 function tchar16_tB__ref___projection #"i-c.ads" 146 0 0# 
   (a : tchar16_tB__ref) : tchar16_tB =
  a.tchar16_tB__content
 
 meta "model_projection" function tchar16_tB__ref___projection
 
 meta "inline : no" function tchar16_tB__ref___projection
 
 val tchar16_tB__havoc #"i-c.ads" 146 0 0# 
   (x : tchar16_tB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tchar16_tB" defined at i-c.ads:146, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tchar16_tB__rep
 use        Interfaces__c__Tchar16_tB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__Tchar16_tB.tchar16_tB, 
 predicate in_range = Interfaces__c__Tchar16_tB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "char16_t" defined at i-c.ads:146, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char16_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type char16_t #"i-c.ads" 146 0 0# 
 
 function first #"i-c.ads" 146 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 146 0 0# 
   : int =
  65535
 
 predicate in_range #"i-c.ads" 146 0 0# 
   (x : int)  =
  #"i-c.ads" 146 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = char16_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type char16_t__ref #"i-c.ads" 146 0 0# =
  { mutable char16_t__content "model_trace:" : char16_t }
 
 function char16_t__ref___projection #"i-c.ads" 146 0 0# 
   (a : char16_t__ref) : char16_t =
  a.char16_t__content
 
 meta "model_projection" function char16_t__ref___projection
 
 meta "inline : no" function char16_t__ref___projection
 
 val char16_t__havoc #"i-c.ads" 146 0 0# 
   (x : char16_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "char16_t" defined at i-c.ads:146, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char16_t__rep
 use        Interfaces__c__char16_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__char16_t.char16_t, 
 predicate in_range = Interfaces__c__char16_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "char16_nul" defined at i-c.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__char16_nul
 use import "_gnatprove_standard".Main

 function char16_nul #"i-c.ads" 149 0 0# "model" "model_trace:11437" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 146 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__7__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 152 0 0# "model" "model_trace:11461" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__7__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__7" defined at i-c.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__7
 use import "_gnatprove_standard".Main

 function to_c__7 #"i-c.ads" 152 0 0# 
   (item : int) : int
 
 predicate to_c__7__function_guard #"i-c.ads" 146 0 0# 
   (result : int) (item : int) 

end

(* Module for defining the constant "item" defined at i-c.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__7__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 155 0 0# "model" "model_trace:11484" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 146 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__7__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__7" defined at i-c.ads:155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__7
 use import "_gnatprove_standard".Main

 function to_ada__7 #"i-c.ads" 155 0 0# 
   (item : int) : int
 
 predicate to_ada__7__function_guard #"system.ads" 1 0 0# 
   (result : int) (item : int) 

end

(* Module for axiomatizing the array theory associated to type "char16_array" defined at i-c.ads:158, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV32__Interfaces__c__char16_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__char16_t
 use        Interfaces__c__char16_t__rep

 function index_I1_one #"i-c.ads" 146 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 type component_type #"i-c.ads" 146 0 0# =
  Interfaces__c__char16_t.char16_t
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV32.t, 
 predicate I1.le = BV32.ule, 
 predicate I1.lt = BV32.ult, 
 predicate I1.gt = BV32.ugt, 
 function I1.add = BV32.add, 
 function I1.sub = BV32.sub, 
 function I1.one = BV32.one, 
 type component_type = component_type
 
 function bool_eq #"i-c.ads" 146 0 0# 
   (a : map) (a__first : BV32.t) (a__last : BV32.t) (b : map) (b__first : BV32.t) (b__last : BV32.t) : bool =
  ( (if ((BV32.ule a__first a__last)) then (
   ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
   (BV32.ugt b__first b__last))) /\ (forall temp___idx_162 #"i-c.ads" 146 0 0#  : BV32.t.
   (if (( (BV32.ule a__first temp___idx_162) /\ (BV32.ule temp___idx_162 a__last) )) then (
    ((Interfaces__c__char16_t__rep.to_rep (get a temp___idx_162)) = (Interfaces__c__char16_t__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_162))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"i-c.ads" 146 0 0#  b #"i-c.ads" 146 0 0#  : map.
  (forall a__first #"i-c.ads" 146 0 0#  a__last #"i-c.ads" 146 0 0#  b__first #"i-c.ads" 146 0 0#  b__last #"i-c.ads" 146 0 0#  : BV32.t.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((BV32.ule a__first a__last)) then (
    ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
    (BV32.ugt b__first b__last))) /\ (forall temp___idx_162 #"i-c.ads" 146 0 0#  : BV32.t.
    (if (( (BV32.ule a__first temp___idx_162) /\ (BV32.ule temp___idx_162 a__last) )) then (
     ((Interfaces__c__char16_t__rep.to_rep (get a temp___idx_162)) = (Interfaces__c__char16_t__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_162))))) else true)) ) )))
 
 function index_Index_one #"i-c.ads" 146 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__char16_t__rep.to_rep, 
 type map = map, 
 type Index.t = BV32.t, 
 predicate Index.le = BV32.ule, 
 predicate Index.lt = BV32.ult, 
 predicate Index.gt = BV32.ugt, 
 function Index.add = BV32.add, 
 function Index.sub = BV32.sub, 
 function Index.one = BV32.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "char16_array" defined at i-c.ads:158, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char16_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__char16_t
 use        Array__BV32__Interfaces__c__char16_t

 type component_type #"i-c.ads" 146 0 0# =
  Interfaces__c__char16_t.char16_t
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV32__Interfaces__c__char16_t.map, 
 function array_bool_eq = Array__BV32__Interfaces__c__char16_t.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV32.t, 
 function to_rep = Interfaces__c__size_t__rep.to_rep, 
 function rep_to_int = BV32.t'int, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV32.ule
 
 type char16_array #"i-c.ads" 158 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type char16_array__ref #"i-c.ads" 158 0 0# =
  { mutable char16_array__content "model_trace:" : char16_array }
 
 function char16_array__ref___projection #"i-c.ads" 158 0 0# 
   (a : char16_array__ref) : char16_array =
  a.char16_array__content
 
 meta "model_projection" function char16_array__ref___projection
 
 meta "inline : no" function char16_array__ref___projection
 
 val char16_array__havoc #"i-c.ads" 158 0 0# 
   (x : char16_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:161, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__3__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function item #"i-c.ads" 161 0 0# "model_projected" "model_trace:11523" 
   : Interfaces__c__char16_array.char16_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 158 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:161, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated__3" defined at i-c.ads:161, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated__3
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function is_nul_terminated__3 #"i-c.ads" 161 0 0# 
   (item : Interfaces__c__char16_array.char16_array) : bool
 
 predicate is_nul_terminated__3__function_guard #"i-c.ads" 158 0 0# 
   (result : bool) (item : Interfaces__c__char16_array.char16_array) 

end

(* Module for defining the constant "item" defined at i-c.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__8__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 165 0 0# "model_projected" "model_trace:11546" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__8__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__8__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 166 0 0# "model" "model_trace:11555" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 166 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__8__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__8" defined at i-c.ads:164, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__8
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__char16_array

 function to_c__8 #"i-c.ads" 164 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__char16_array.char16_array
 
 predicate to_c__8__function_guard #"i-c.ads" 158 0 0# 
   (result : Interfaces__c__char16_array.char16_array) (item : Standard__wide_string.wide_string) (append_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:170, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__8__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function item #"i-c.ads" 170 0 0# "model_projected" "model_trace:11579" 
   : Interfaces__c__char16_array.char16_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 158 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:170, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__8__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__8__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 171 0 0# "model" "model_trace:11588" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 171 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__8__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__8" defined at i-c.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__8
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Interfaces__c__char16_array

 function to_ada__8 #"i-c.ads" 169 0 0# 
   (item : Interfaces__c__char16_array.char16_array) (trim_nul : bool) : Standard__wide_string.wide_string
 
 predicate to_ada__8__function_guard #"system.ads" 1 0 0# 
   (result : Standard__wide_string.wide_string) (item : Interfaces__c__char16_array.char16_array) (trim_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__9__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_string

 function item #"i-c.ads" 175 0 0# "model_projected" "model_trace:11612" 
   : Standard__wide_string.wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:178, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__9__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 178 0 0# "model" "model_trace:11639" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 178 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:182, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__9__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array

 function item #"i-c.ads" 182 0 0# "model_projected" "model_trace:11662" 
   : Interfaces__c__char16_array.char16_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 158 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:182, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__9__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 185 0 0# "model" "model_trace:11689" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 185 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:185, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tchar32_tB" defined at i-c.ads:188, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tchar32_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tchar32_tB #"i-c.ads" 188 0 0# 
 
 function first #"i-c.ads" 188 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 188 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 188 0 0# 
   (x : int)  =
  #"i-c.ads" 188 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tchar32_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tchar32_tB__ref #"i-c.ads" 188 0 0# =
  { mutable tchar32_tB__content "model_trace:" : tchar32_tB }
 
 function tchar32_tB__ref___projection #"i-c.ads" 188 0 0# 
   (a : tchar32_tB__ref) : tchar32_tB =
  a.tchar32_tB__content
 
 meta "model_projection" function tchar32_tB__ref___projection
 
 meta "inline : no" function tchar32_tB__ref___projection
 
 val tchar32_tB__havoc #"i-c.ads" 188 0 0# 
   (x : tchar32_tB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tchar32_tB" defined at i-c.ads:188, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__Tchar32_tB__rep
 use        Interfaces__c__Tchar32_tB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__Tchar32_tB.tchar32_tB, 
 predicate in_range = Interfaces__c__Tchar32_tB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "char32_t" defined at i-c.ads:188, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char32_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type char32_t #"i-c.ads" 188 0 0# 
 
 function first #"i-c.ads" 188 0 0# 
   : int =
  0
 
 function last #"i-c.ads" 188 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-c.ads" 188 0 0# 
   (x : int)  =
  #"i-c.ads" 188 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = char32_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type char32_t__ref #"i-c.ads" 188 0 0# =
  { mutable char32_t__content "model_trace:" : char32_t }
 
 function char32_t__ref___projection #"i-c.ads" 188 0 0# 
   (a : char32_t__ref) : char32_t =
  a.char32_t__content
 
 meta "model_projection" function char32_t__ref___projection
 
 meta "inline : no" function char32_t__ref___projection
 
 val char32_t__havoc #"i-c.ads" 188 0 0# 
   (x : char32_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "char32_t" defined at i-c.ads:188, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char32_t__rep
 use        Interfaces__c__char32_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c__char32_t.char32_t, 
 predicate in_range = Interfaces__c__char32_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "char32_nul" defined at i-c.ads:191, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__char32_nul
 use import "_gnatprove_standard".Main

 function char32_nul #"i-c.ads" 191 0 0# "model" "model_trace:11719" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 188 0 0# 
   : int

end

(* Module for defining the constant "item" defined at i-c.ads:194, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__10__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 194 0 0# "model" "model_trace:11743" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:194, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__10__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__10" defined at i-c.ads:194, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__10
 use import "_gnatprove_standard".Main

 function to_c__10 #"i-c.ads" 194 0 0# 
   (item : int) : int
 
 predicate to_c__10__function_guard #"i-c.ads" 188 0 0# 
   (result : int) (item : int) 

end

(* Module for defining the constant "item" defined at i-c.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__10__item
 use import "_gnatprove_standard".Main

 function item #"i-c.ads" 197 0 0# "model" "model_trace:11766" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 188 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:197, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__10__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__10" defined at i-c.ads:197, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__10
 use import "_gnatprove_standard".Main

 function to_ada__10 #"i-c.ads" 197 0 0# 
   (item : int) : int
 
 predicate to_ada__10__function_guard #"system.ads" 1 0 0# 
   (result : int) (item : int) 

end

(* Module for axiomatizing the array theory associated to type "char32_array" defined at i-c.ads:200, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__BV32__Interfaces__c__char32_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__char32_t
 use        Interfaces__c__char32_t__rep

 function index_I1_one #"i-c.ads" 188 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 type component_type #"i-c.ads" 188 0 0# =
  Interfaces__c__char32_t.char32_t
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = BV32.t, 
 predicate I1.le = BV32.ule, 
 predicate I1.lt = BV32.ult, 
 predicate I1.gt = BV32.ugt, 
 function I1.add = BV32.add, 
 function I1.sub = BV32.sub, 
 function I1.one = BV32.one, 
 type component_type = component_type
 
 function bool_eq #"i-c.ads" 188 0 0# 
   (a : map) (a__first : BV32.t) (a__last : BV32.t) (b : map) (b__first : BV32.t) (b__last : BV32.t) : bool =
  ( (if ((BV32.ule a__first a__last)) then (
   ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
   (BV32.ugt b__first b__last))) /\ (forall temp___idx_163 #"i-c.ads" 188 0 0#  : BV32.t.
   (if (( (BV32.ule a__first temp___idx_163) /\ (BV32.ule temp___idx_163 a__last) )) then (
    ((Interfaces__c__char32_t__rep.to_rep (get a temp___idx_163)) = (Interfaces__c__char32_t__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_163))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"i-c.ads" 188 0 0#  b #"i-c.ads" 188 0 0#  : map.
  (forall a__first #"i-c.ads" 188 0 0#  a__last #"i-c.ads" 188 0 0#  b__first #"i-c.ads" 188 0 0#  b__last #"i-c.ads" 188 0 0#  : BV32.t.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((BV32.ule a__first a__last)) then (
    ( (BV32.ule b__first b__last) /\ ((BV32.sub a__last a__first) = (BV32.sub b__last b__first)) )) else (
    (BV32.ugt b__first b__last))) /\ (forall temp___idx_163 #"i-c.ads" 188 0 0#  : BV32.t.
    (if (( (BV32.ule a__first temp___idx_163) /\ (BV32.ule temp___idx_163 a__last) )) then (
     ((Interfaces__c__char32_t__rep.to_rep (get a temp___idx_163)) = (Interfaces__c__char32_t__rep.to_rep (get b (BV32.add (BV32.sub b__first a__first) temp___idx_163))))) else true)) ) )))
 
 function index_Index_one #"i-c.ads" 188 0 0# 
   : BV32.t =
  ( BV32.of_int 1 )
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Interfaces__c__char32_t__rep.to_rep, 
 type map = map, 
 type Index.t = BV32.t, 
 predicate Index.le = BV32.ule, 
 predicate Index.lt = BV32.ult, 
 predicate Index.gt = BV32.ugt, 
 function Index.add = BV32.add, 
 function Index.sub = BV32.sub, 
 function Index.one = BV32.one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "char32_array" defined at i-c.ads:200, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c__char32_array
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__char32_t
 use        Array__BV32__Interfaces__c__char32_t

 type component_type #"i-c.ads" 188 0 0# =
  Interfaces__c__char32_t.char32_t
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__BV32__Interfaces__c__char32_t.map, 
 function array_bool_eq = Array__BV32__Interfaces__c__char32_t.bool_eq, 
 type index_base_type = Interfaces__c__size_t.size_t, 
 type index_rep_type = BV32.t, 
 function to_rep = Interfaces__c__size_t__rep.to_rep, 
 function rep_to_int = BV32.t'int, 
 predicate in_range_base = Interfaces__c__size_t.in_range, 
 predicate index_dynamic_property = Interfaces__c__size_t.dynamic_property, 
 predicate index_rep_le = BV32.ule
 
 type char32_array #"i-c.ads" 200 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type char32_array__ref #"i-c.ads" 200 0 0# =
  { mutable char32_array__content "model_trace:" : char32_array }
 
 function char32_array__ref___projection #"i-c.ads" 200 0 0# 
   (a : char32_array__ref) : char32_array =
  a.char32_array__content
 
 meta "model_projection" function char32_array__ref___projection
 
 meta "inline : no" function char32_array__ref___projection
 
 val char32_array__havoc #"i-c.ads" 200 0 0# 
   (x : char32_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "item" defined at i-c.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__is_nul_terminated__4__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function item #"i-c.ads" 203 0 0# "model_projected" "model_trace:11805" 
   : Interfaces__c__char32_array.char32_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 200 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__is_nul_terminated__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_nul_terminated__4" defined at i-c.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__is_nul_terminated__4
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function is_nul_terminated__4 #"i-c.ads" 203 0 0# 
   (item : Interfaces__c__char32_array.char32_array) : bool
 
 predicate is_nul_terminated__4__function_guard #"i-c.ads" 200 0 0# 
   (result : bool) (item : Interfaces__c__char32_array.char32_array) 

end

(* Module for defining the constant "item" defined at i-c.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__11__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string

 function item #"i-c.ads" 207 0 0# "model_projected" "model_trace:11828" 
   : Standard__wide_wide_string.wide_wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__11__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__11__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 208 0 0# "model" "model_trace:11837" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 208 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__11__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__11" defined at i-c.ads:206, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__11
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Interfaces__c__char32_array

 function to_c__11 #"i-c.ads" 206 0 0# 
   (item : Standard__wide_wide_string.wide_wide_string) (append_nul : bool) : Interfaces__c__char32_array.char32_array
 
 predicate to_c__11__function_guard #"i-c.ads" 200 0 0# 
   (result : Interfaces__c__char32_array.char32_array) (item : Standard__wide_wide_string.wide_wide_string) (append_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__11__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function item #"i-c.ads" 212 0 0# "model_projected" "model_trace:11861" 
   : Interfaces__c__char32_array.char32_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 200 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__11__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__11__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 213 0 0# "model" "model_trace:11870" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 213 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__11__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__11" defined at i-c.ads:211, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__11
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Interfaces__c__char32_array

 function to_ada__11 #"i-c.ads" 211 0 0# 
   (item : Interfaces__c__char32_array.char32_array) (trim_nul : bool) : Standard__wide_wide_string.wide_wide_string
 
 predicate to_ada__11__function_guard #"system.ads" 1 0 0# 
   (result : Standard__wide_wide_string.wide_wide_string) (item : Interfaces__c__char32_array.char32_array) (trim_nul : bool) 

end

(* Module for defining the constant "item" defined at i-c.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__12__item
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string

 function item #"i-c.ads" 217 0 0# "model_projected" "model_trace:11894" 
   : Standard__wide_wide_string.wide_wide_string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "append_nul" defined at i-c.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_c__12__append_nul
 use import "_gnatprove_standard".Main

 function append_nul #"i-c.ads" 220 0 0# "model" "model_trace:11921" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 220 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "append_nul" defined at i-c.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__append_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at i-c.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__12__item
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array

 function item #"i-c.ads" 224 0 0# "model_projected" "model_trace:11944" 
   : Interfaces__c__char32_array.char32_array
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 200 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at i-c.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "trim_nul" defined at i-c.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c__to_ada__12__trim_nul
 use import "_gnatprove_standard".Main

 function trim_nul #"i-c.ads" 227 0 0# "model" "model_trace:11971" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 227 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "trim_nul" defined at i-c.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__trim_nul___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "os_type" defined at s-oscons.ads:52, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__os_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type os_type #"s-oscons.ads" 52 0 0# 
 
 function first #"s-oscons.ads" 52 0 0# 
   : int =
  0
 
 function last #"s-oscons.ads" 52 0 0# 
   : int =
  1
 
 predicate in_range #"s-oscons.ads" 52 0 0# 
   (x : int)  =
  #"s-oscons.ads" 52 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = os_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type os_type__ref #"s-oscons.ads" 52 0 0# =
  { mutable os_type__content "model_trace:" : os_type }
 
 function os_type__ref___projection #"s-oscons.ads" 52 0 0# 
   (a : os_type__ref) : os_type =
  a.os_type__content
 
 meta "model_projection" function os_type__ref___projection
 
 meta "inline : no" function os_type__ref___projection
 
 val os_type__havoc #"s-oscons.ads" 52 0 0# 
   (x : os_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "os_type" defined at s-oscons.ads:52, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__os_type__rep
 use        System__os_constants__os_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__os_constants__os_type.os_type, 
 predicate in_range = System__os_constants__os_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "target_os" defined at s-oscons.ads:53, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__target_os
 use import "_gnatprove_standard".Main

 function target_os #"s-oscons.ads" 53 0 0# "model" "model_trace:12044" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-oscons.ads" 52 0 0# 
   : int

end

(* Module for axiomatizing type "T1s" defined at s-oscons.ads:59, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__T1s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-oscons.ads" 52 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  15
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "target_name" defined at s-oscons.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__target_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function target_name #"s-oscons.ads" 59 0 0# "model_projected" "model_trace:12060" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "ioctl_req_t" defined at s-oscons.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__ioctl_req_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ioctl_req_t #"s-oscons.ads" 94 0 0# 
 
 function first #"s-oscons.ads" 94 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-oscons.ads" 94 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-oscons.ads" 94 0 0# 
   (x : int)  =
  #"s-oscons.ads" 94 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ioctl_req_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ioctl_req_t__ref #"s-oscons.ads" 94 0 0# =
  { mutable ioctl_req_t__content "model_trace:" : ioctl_req_t }
 
 function ioctl_req_t__ref___projection #"s-oscons.ads" 94 0 0# 
   (a : ioctl_req_t__ref) : ioctl_req_t =
  a.ioctl_req_t__content
 
 meta "model_projection" function ioctl_req_t__ref___projection
 
 meta "inline : no" function ioctl_req_t__ref___projection
 
 val ioctl_req_t__havoc #"s-oscons.ads" 94 0 0# 
   (x : ioctl_req_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ioctl_req_t" defined at s-oscons.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__ioctl_req_t__rep
 use        System__os_constants__ioctl_req_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__os_constants__ioctl_req_t.ioctl_req_t, 
 predicate in_range = System__os_constants__ioctl_req_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T2s" defined at s-oscons.ads:164, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__T2s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-oscons.ads" 94 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  0
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "pty_library" defined at s-oscons.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__pty_library
 use import "_gnatprove_standard".Main
 use        Standard__string

 function pty_library #"s-oscons.ads" 164 0 0# "model_projected" "model_trace:12611" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "msg_iovlen_t" defined at s-oscons.ads:261, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__msg_iovlen_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type msg_iovlen_t #"s-oscons.ads" 261 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-oscons.ads" 261 0 0# 
   : BV32.t
 
 function first #"s-oscons.ads" 261 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-oscons.ads" 261 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-oscons.ads" 261 0 0# 
   : int =
  0
 
 function last_int #"s-oscons.ads" 261 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-oscons.ads" 261 0 0# 
   (x : BV32.t)  =
  #"s-oscons.ads" 261 0 0# true
 
 predicate in_range_int #"s-oscons.ads" 261 0 0# 
   (x : int)  =
  #"s-oscons.ads" 261 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = msg_iovlen_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type msg_iovlen_t__ref #"s-oscons.ads" 261 0 0# =
  { mutable msg_iovlen_t__content "model_trace:" : msg_iovlen_t }
 
 function msg_iovlen_t__ref___projection #"s-oscons.ads" 261 0 0# 
   (a : msg_iovlen_t__ref) : msg_iovlen_t =
  a.msg_iovlen_t__content
 
 meta "model_projection" function msg_iovlen_t__ref___projection
 
 meta "inline : no" function msg_iovlen_t__ref___projection
 
 val msg_iovlen_t__havoc #"s-oscons.ads" 261 0 0# 
   (x : msg_iovlen_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "msg_iovlen_t" defined at s-oscons.ads:261, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__msg_iovlen_t__rep
 use        System__os_constants__msg_iovlen_t
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = System__os_constants__msg_iovlen_t.msg_iovlen_t, 
 predicate in_range = System__os_constants__msg_iovlen_t.in_range, 
 predicate in_range_int = System__os_constants__msg_iovlen_t.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "thread_blocking_io" defined at s-oscons.ads:270, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__thread_blocking_io
 use import "_gnatprove_standard".Main

 function thread_blocking_io #"s-oscons.ads" 270 0 0# "model" "model_trace:13105" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"s-oscons.ads" 270 0 0# 
   : int

end

(* Module for axiomatizing type "T3s" defined at s-oscons.ads:273, created in Gnat2Why.Types.Translate_Type *)
module System__os_constants__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-oscons.ads" 270 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  16
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "inet_pton_linkname" defined at s-oscons.ads:273, created in Gnat2Why.Decls.Translate_Constant *)
module System__os_constants__inet_pton_linkname
 use import "_gnatprove_standard".Main
 use        Standard__string

 function inet_pton_linkname #"s-oscons.ads" 273 0 0# "model_projected" "model_trace:13115" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "Tstorage_offsetB" defined at s-stoele.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__Tstorage_offsetB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tstorage_offsetB #"s-stoele.ads" 54 0 0# 
 
 function first #"s-stoele.ads" 54 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-stoele.ads" 54 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-stoele.ads" 54 0 0# 
   (x : int)  =
  #"s-stoele.ads" 54 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tstorage_offsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tstorage_offsetB__ref #"s-stoele.ads" 54 0 0# =
  { mutable tstorage_offsetB__content "model_trace:" : tstorage_offsetB }
 
 function tstorage_offsetB__ref___projection #"s-stoele.ads" 54 0 0# 
   (a : tstorage_offsetB__ref) : tstorage_offsetB =
  a.tstorage_offsetB__content
 
 meta "model_projection" function tstorage_offsetB__ref___projection
 
 meta "inline : no" function tstorage_offsetB__ref___projection
 
 val tstorage_offsetB__havoc #"s-stoele.ads" 54 0 0# 
   (x : tstorage_offsetB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tstorage_offsetB" defined at s-stoele.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__Tstorage_offsetB__rep
 use        System__storage_elements__Tstorage_offsetB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__storage_elements__Tstorage_offsetB.tstorage_offsetB, 
 predicate in_range = System__storage_elements__Tstorage_offsetB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "storage_offset" defined at s-stoele.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_offset
 use import "_gnatprove_standard".Main
 use import "int".Int

 type storage_offset #"s-stoele.ads" 54 0 0# 
 
 function first #"s-stoele.ads" 54 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-stoele.ads" 54 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-stoele.ads" 54 0 0# 
   (x : int)  =
  #"s-stoele.ads" 54 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = storage_offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type storage_offset__ref #"s-stoele.ads" 54 0 0# =
  { mutable storage_offset__content "model_trace:" : storage_offset }
 
 function storage_offset__ref___projection #"s-stoele.ads" 54 0 0# 
   (a : storage_offset__ref) : storage_offset =
  a.storage_offset__content
 
 meta "model_projection" function storage_offset__ref___projection
 
 meta "inline : no" function storage_offset__ref___projection
 
 val storage_offset__havoc #"s-stoele.ads" 54 0 0# 
   (x : storage_offset__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "storage_offset" defined at s-stoele.ads:54, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_offset__rep
 use        System__storage_elements__storage_offset
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__storage_elements__storage_offset.storage_offset, 
 predicate in_range = System__storage_elements__storage_offset.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "storage_count" defined at s-stoele.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type storage_count #"s-stoele.ads" 62 0 0# 
 
 function first #"s-stoele.ads" 62 0 0# 
   : int =
  0
 
 function last #"s-stoele.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-stoele.ads" 62 0 0# 
   (x : int)  =
  #"s-stoele.ads" 62 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = storage_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type storage_count__ref #"s-stoele.ads" 62 0 0# =
  { mutable storage_count__content "model_trace:" : storage_count }
 
 function storage_count__ref___projection #"s-stoele.ads" 62 0 0# 
   (a : storage_count__ref) : storage_count =
  a.storage_count__content
 
 meta "model_projection" function storage_count__ref___projection
 
 meta "inline : no" function storage_count__ref___projection
 
 val storage_count__havoc #"s-stoele.ads" 62 0 0# 
   (x : storage_count__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "storage_count" defined at s-stoele.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_count__rep
 use        System__storage_elements__storage_count
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__storage_elements__storage_count.storage_count, 
 predicate in_range = System__storage_elements__storage_count.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "storage_element" defined at s-stoele.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type storage_element #"s-stoele.ads" 64 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-stoele.ads" 64 0 0# 
   : BV8.t
 
 function first #"s-stoele.ads" 64 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"s-stoele.ads" 64 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"s-stoele.ads" 64 0 0# 
   : int =
  0
 
 function last_int #"s-stoele.ads" 64 0 0# 
   : int =
  255
 
 predicate in_range #"s-stoele.ads" 64 0 0# 
   (x : BV8.t)  =
  #"s-stoele.ads" 64 0 0# true
 
 predicate in_range_int #"s-stoele.ads" 64 0 0# 
   (x : int)  =
  #"s-stoele.ads" 64 0 0# BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = storage_element, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type storage_element__ref #"s-stoele.ads" 64 0 0# =
  { mutable storage_element__content "model_trace:" : storage_element }
 
 function storage_element__ref___projection #"s-stoele.ads" 64 0 0# 
   (a : storage_element__ref) : storage_element =
  a.storage_element__content
 
 meta "model_projection" function storage_element__ref___projection
 
 meta "inline : no" function storage_element__ref___projection
 
 val storage_element__havoc #"s-stoele.ads" 64 0 0# 
   (x : storage_element__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "storage_element" defined at s-stoele.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_element__rep
 use        System__storage_elements__storage_element
 use        "_gnatprove_standard".BV8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV8 with
 type t = System__storage_elements__storage_element.storage_element, 
 predicate in_range = System__storage_elements__storage_element.in_range, 
 predicate in_range_int = System__storage_elements__storage_element.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "storage_array" defined at s-stoele.ads:70, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__System__storage_elements__storage_element
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8
 use        System__storage_elements__storage_element
 use        System__storage_elements__storage_element__rep

 function index_I1_one #"s-stoele.ads" 64 0 0# 
   : int =
  1
 
 type component_type #"s-stoele.ads" 64 0 0# =
  System__storage_elements__storage_element.storage_element
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"s-stoele.ads" 64 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_167 #"s-stoele.ads" 64 0 0#  : int.
   (if (( (a__first <= temp___idx_167) /\ (temp___idx_167 <= a__last) )) then (
    ((System__storage_elements__storage_element__rep.to_rep (get a temp___idx_167)) = (System__storage_elements__storage_element__rep.to_rep (get b ((b__first - a__first) + temp___idx_167))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"s-stoele.ads" 64 0 0#  b #"s-stoele.ads" 64 0 0#  : map.
  (forall a__first #"s-stoele.ads" 64 0 0#  a__last #"s-stoele.ads" 64 0 0#  b__first #"s-stoele.ads" 64 0 0#  b__last #"s-stoele.ads" 64 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_167 #"s-stoele.ads" 64 0 0#  : int.
    (if (( (a__first <= temp___idx_167) /\ (temp___idx_167 <= a__last) )) then (
     ((System__storage_elements__storage_element__rep.to_rep (get a temp___idx_167)) = (System__storage_elements__storage_element__rep.to_rep (get b ((b__first - a__first) + temp___idx_167))))) else true)) ) )))
 
 function index_Index_one #"s-stoele.ads" 64 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_BV8_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = System__storage_elements__storage_element__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "storage_array" defined at s-stoele.ads:70, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__storage_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__Tstorage_offsetB
 use        System__storage_elements__Tstorage_offsetB__rep
 use        System__storage_elements__storage_offset
 use        System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element

 type component_type #"s-stoele.ads" 64 0 0# =
  System__storage_elements__storage_element.storage_element
 
 function index_1_id #"s-stoele.ads" 64 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__storage_elements__storage_element.map, 
 function array_bool_eq = Array__Int__System__storage_elements__storage_element.bool_eq, 
 type index_base_type = System__storage_elements__Tstorage_offsetB.tstorage_offsetB, 
 type index_rep_type = int, 
 function to_rep = System__storage_elements__Tstorage_offsetB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__storage_elements__Tstorage_offsetB.in_range, 
 predicate index_dynamic_property = System__storage_elements__storage_offset.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type storage_array #"s-stoele.ads" 70 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type storage_array__ref #"s-stoele.ads" 70 0 0# =
  { mutable storage_array__content "model_trace:" : storage_array }
 
 function storage_array__ref___projection #"s-stoele.ads" 70 0 0# 
   (a : storage_array__ref) : storage_array =
  a.storage_array__content
 
 meta "model_projection" function storage_array__ref___projection
 
 meta "inline : no" function storage_array__ref___projection
 
 val storage_array__havoc #"s-stoele.ads" 70 0 0# 
   (x : storage_array__ref) : unit
  writes {x}

end

(* Module for defining the constant "left" defined at s-stoele.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"s-stoele.ads" 76 0 0# "model" "model_trace:13329" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__right
 use import "_gnatprove_standard".Main

 function right #"s-stoele.ads" 76 0 0# "model" "model_trace:13338" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at s-stoele.ads:76, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Oadd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oadd #"s-stoele.ads" 76 0 0# 
   (left : BV32.t) (right : int) : BV32.t
 
 predicate oadd__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (left : BV32.t) (right : int) 

end

(* Module for defining the constant "left" defined at s-stoele.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__2__left
 use import "_gnatprove_standard".Main

 function left #"s-stoele.ads" 81 0 0# "model" "model_trace:13371" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Oadd__2__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"s-stoele.ads" 81 0 0# "model" "model_trace:13380" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Oadd__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd__2" defined at s-stoele.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Oadd__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function oadd__2 #"s-stoele.ads" 81 0 0# 
   (left : int) (right : BV32.t) : BV32.t
 
 predicate oadd__2__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (left : int) (right : BV32.t) 

end

(* Module for defining the constant "left" defined at s-stoele.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"s-stoele.ads" 86 0 0# "model" "model_trace:13413" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__right
 use import "_gnatprove_standard".Main

 function right #"s-stoele.ads" 86 0 0# "model" "model_trace:13422" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract" defined at s-stoele.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Osubtract
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function osubtract #"s-stoele.ads" 86 0 0# 
   (left : BV32.t) (right : int) : BV32.t
 
 predicate osubtract__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (left : BV32.t) (right : int) 

end

(* Module for defining the constant "left" defined at s-stoele.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__2__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"s-stoele.ads" 91 0 0# "model" "model_trace:13455" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__2__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Osubtract__2__right
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function right #"s-stoele.ads" 91 0 0# "model" "model_trace:13462" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Osubtract__2__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Osubtract__2" defined at s-stoele.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Osubtract__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function osubtract__2 #"s-stoele.ads" 91 0 0# 
   (left : BV32.t) (right : BV32.t) : int
 
 predicate osubtract__2__function_guard #"s-stoele.ads" 54 0 0# 
   (result : int) (left : BV32.t) (right : BV32.t) 

end

(* Module for defining the constant "left" defined at s-stoele.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Omod__left
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function left #"s-stoele.ads" 97 0 0# "model" "model_trace:13496" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "left" defined at s-stoele.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Omod__left___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at s-stoele.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__Omod__right
 use import "_gnatprove_standard".Main

 function right #"s-stoele.ads" 98 0 0# "model" "model_trace:13505" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "right" defined at s-stoele.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__Omod__right___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Omod" defined at s-stoele.ads:96, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__Omod
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function omod #"s-stoele.ads" 96 0 0# 
   (left : BV32.t) (right : int) : int
 
 predicate omod__function_guard #"s-stoele.ads" 54 0 0# 
   (result : int) (left : BV32.t) (right : int) 

end

(* Module for axiomatizing type "integer_address" defined at s-stoele.ads:105, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__integer_address
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type integer_address #"s-stoele.ads" 105 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-stoele.ads" 105 0 0# 
   : BV32.t
 
 function first #"s-stoele.ads" 105 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-stoele.ads" 105 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-stoele.ads" 105 0 0# 
   : int =
  0
 
 function last_int #"s-stoele.ads" 105 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-stoele.ads" 105 0 0# 
   (x : BV32.t)  =
  #"s-stoele.ads" 105 0 0# true
 
 predicate in_range_int #"s-stoele.ads" 105 0 0# 
   (x : int)  =
  #"s-stoele.ads" 105 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = integer_address, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type integer_address__ref #"s-stoele.ads" 105 0 0# =
  { mutable integer_address__content "model_trace:" : integer_address }
 
 function integer_address__ref___projection #"s-stoele.ads" 105 0 0# 
   (a : integer_address__ref) : integer_address =
  a.integer_address__content
 
 meta "model_projection" function integer_address__ref___projection
 
 meta "inline : no" function integer_address__ref___projection
 
 val integer_address__havoc #"s-stoele.ads" 105 0 0# 
   (x : integer_address__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_address" defined at s-stoele.ads:105, created in Gnat2Why.Types.Translate_Type *)
module System__storage_elements__integer_address__rep
 use        System__storage_elements__integer_address
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = System__storage_elements__integer_address.integer_address, 
 predicate in_range = System__storage_elements__integer_address.in_range, 
 predicate in_range_int = System__storage_elements__integer_address.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "value" defined at s-stoele.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__to_address__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"s-stoele.ads" 107 0 0# "model" "model_trace:13548" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-stoele.ads" 105 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-stoele.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__to_address__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_address" defined at s-stoele.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__to_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function to_address #"s-stoele.ads" 107 0 0# 
   (value : BV32.t) : BV32.t
 
 predicate to_address__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (value : BV32.t) 

end

(* Module for defining the constant "value" defined at s-stoele.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_elements__to_integer__value
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function value #"s-stoele.ads" 112 0 0# "model" "model_trace:13581" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at s-stoele.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__storage_elements__to_integer__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_integer" defined at s-stoele.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__storage_elements__to_integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function to_integer #"s-stoele.ads" 112 0 0# 
   (value : BV32.t) : BV32.t
 
 predicate to_integer__function_guard #"s-stoele.ads" 105 0 0# 
   (result : BV32.t) (value : BV32.t) 

end

(* Module for defining the constant "process_blocking_io" defined at g-socket.ads:390, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__initialize__2__process_blocking_io
 use import "_gnatprove_standard".Main

 function process_blocking_io #"g-socket.ads" 390 0 0# "model" "model_trace:2493" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 390 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "process_blocking_io" defined at g-socket.ads:390, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__initialize__2__process_blocking_io___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tsocket_typeB" defined at g-socket.ads:1167, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tsocket_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tsocket_typeB #"g-socket.ads" 1167 0 0# 
 
 function first #"g-socket.ads" 1167 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"g-socket.ads" 1167 0 0# 
   : int =
  2147483647
 
 predicate in_range #"g-socket.ads" 1167 0 0# 
   (x : int)  =
  #"g-socket.ads" 1167 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsocket_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tsocket_typeB__ref #"g-socket.ads" 1167 0 0# =
  { mutable tsocket_typeB__content "model_trace:" : tsocket_typeB }
 
 function tsocket_typeB__ref___projection #"g-socket.ads" 1167 0 0# 
   (a : tsocket_typeB__ref) : tsocket_typeB =
  a.tsocket_typeB__content
 
 meta "model_projection" function tsocket_typeB__ref___projection
 
 meta "inline : no" function tsocket_typeB__ref___projection
 
 val tsocket_typeB__havoc #"g-socket.ads" 1167 0 0# 
   (x : tsocket_typeB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tsocket_typeB" defined at g-socket.ads:1167, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tsocket_typeB__rep
 use        Gnat__sockets__Tsocket_typeB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__Tsocket_typeB.tsocket_typeB, 
 predicate in_range = Gnat__sockets__Tsocket_typeB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "socket_type" defined at g-socket.ads:1167, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__socket_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type socket_type #"g-socket.ads" 1167 0 0# 
 
 function first #"g-socket.ads" 1167 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"g-socket.ads" 1167 0 0# 
   : int =
  2147483647
 
 predicate in_range #"g-socket.ads" 1167 0 0# 
   (x : int)  =
  #"g-socket.ads" 1167 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = socket_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type socket_type__ref #"g-socket.ads" 1167 0 0# =
  { mutable socket_type__content "model_trace:" : socket_type }
 
 function socket_type__ref___projection #"g-socket.ads" 1167 0 0# 
   (a : socket_type__ref) : socket_type =
  a.socket_type__content
 
 meta "model_projection" function socket_type__ref___projection
 
 meta "inline : no" function socket_type__ref___projection
 
 val socket_type__havoc #"g-socket.ads" 1167 0 0# 
   (x : socket_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "socket_type" defined at g-socket.ads:1167, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__socket_type__rep
 use        Gnat__sockets__socket_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__socket_type.socket_type, 
 predicate in_range = Gnat__sockets__socket_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "no_socket" defined at g-socket.ads:417, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__no_socket
 use import "_gnatprove_standard".Main

 function no_socket #"g-socket.ads" 417 0 0# "model" "model_trace:2537" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module for axiomatizing the record theory associated to type "selector_type" defined at g-socket.ads:1175, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__selector_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Gnat__sockets__socket_type

 type __split_discrs #"g-socket.ads" 1167 0 0# =
  { rec__gnat__sockets__selector_type__is_null "model_trace:.5801" : bool }
 
 function __split_discrs___projection #"g-socket.ads" 1175 0 0# 
   (a : __split_discrs) : bool =
  a.rec__gnat__sockets__selector_type__is_null
 
 meta "model_projection" function __split_discrs___projection
 
 meta "inline : no" function __split_discrs___projection
 
 type __split_discrs__ref #"g-socket.ads" 1175 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref___projection #"g-socket.ads" 1175 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref___projection
 
 meta "inline : no" function __split_discrs__ref___projection
 
 val __split_discrs__havoc #"g-socket.ads" 1175 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 1175 0 0# =
  { rec__gnat__sockets__selector_type__r_sig_socket "model_trace:.5822" : Gnat__sockets__socket_type.socket_type; rec__gnat__sockets__selector_type__w_sig_socket "model_trace:.5833" : Gnat__sockets__socket_type.socket_type }
 
 function __split_fields_R_Sig_Socket__projection #"g-socket.ads" 1167 0 0# "model_trace:.5822" 
   (a : __split_fields) : Gnat__sockets__socket_type.socket_type =
  a.rec__gnat__sockets__selector_type__r_sig_socket
 
 meta "model_projection" function __split_fields_R_Sig_Socket__projection
 
 meta "inline : no" function __split_fields_R_Sig_Socket__projection
 
 function __split_fields_W_Sig_Socket__projection #"g-socket.ads" 1175 0 0# "model_trace:.5833" 
   (a : __split_fields) : Gnat__sockets__socket_type.socket_type =
  a.rec__gnat__sockets__selector_type__w_sig_socket
 
 meta "model_projection" function __split_fields_W_Sig_Socket__projection
 
 meta "inline : no" function __split_fields_W_Sig_Socket__projection
 
 type __split_fields__ref #"g-socket.ads" 1175 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_3__projection #"g-socket.ads" 1175 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_3__projection
 
 meta "inline : no" function __split_fields__ref_3__projection
 
 val __split_fields__havoc #"g-socket.ads" 1175 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 1175 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields; attr__constrained "model_trace:" : bool }
 
 function __rep_4__projection #"g-socket.ads" 1175 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_4__projection
 
 meta "inline : no" function __rep_4__projection
 
 function __rep_5__projection #"g-socket.ads" 1175 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_5__projection
 
 meta "inline : no" function __rep_5__projection
 
 function __rep_6__projection #"g-socket.ads" 1175 0 0# 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_6__projection
 
 meta "inline : no" function __rep_6__projection
 
 function to_base #"g-socket.ads" 1175 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 1175 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__selector_type__is_null_ #"g-socket.ads" 1175 0 0# 
   (a : __rep) : bool
  requires { #"g-socket.ads" 1175 0 0# true }
  ensures { #"g-socket.ads" 1175 0 0# (result = a.__split_discrs.rec__gnat__sockets__selector_type__is_null) }
 
 predicate gnat__sockets__selector_type__r_sig_socket__pred #"g-socket.ads" 1175 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1175 0 0# ((Boolean.to_int a.__split_discrs.rec__gnat__sockets__selector_type__is_null) = 0)
 
 val rec__gnat__sockets__selector_type__r_sig_socket_ #"g-socket.ads" 1175 0 0# 
   (a : __rep) : Gnat__sockets__socket_type.socket_type
  requires { #"g-socket.ads" 1167 0 0# (gnat__sockets__selector_type__r_sig_socket__pred a) }
  ensures { #"g-socket.ads" 1167 0 0# (result = a.__split_fields.rec__gnat__sockets__selector_type__r_sig_socket) }
 
 predicate gnat__sockets__selector_type__w_sig_socket__pred #"g-socket.ads" 1175 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1175 0 0# ((Boolean.to_int a.__split_discrs.rec__gnat__sockets__selector_type__is_null) = 0)
 
 val rec__gnat__sockets__selector_type__w_sig_socket_ #"g-socket.ads" 1175 0 0# 
   (a : __rep) : Gnat__sockets__socket_type.socket_type
  requires { #"g-socket.ads" 1167 0 0# (gnat__sockets__selector_type__w_sig_socket__pred a) }
  ensures { #"g-socket.ads" 1167 0 0# (result = a.__split_fields.rec__gnat__sockets__selector_type__w_sig_socket) }
 
 function user_eq #"g-socket.ads" 1175 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "selector_type" defined at g-socket.ads:1175, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__selector_type
 use export Gnat__sockets__selector_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type selector_type #"g-socket.ads" 1175 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 1175 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1175 0 0# 
   (a : selector_type) : int
 
 function value__alignment #"g-socket.ads" 1175 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1175 0 0# 
   (a : selector_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1175 0 0#  : selector_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1175 0 0#  : selector_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__selector_type__is_null__first__bit #"g-socket.ads" 1175 0 0# 
   : int
 
 function gnat__sockets__selector_type__is_null__last__bit #"g-socket.ads" 1175 0 0# 
   : int
 
 function gnat__sockets__selector_type__is_null__position #"g-socket.ads" 1175 0 0# 
   : int
 
 axiom gnat__sockets__selector_type__is_null__first__bit_axiom :
  ((gnat__sockets__selector_type__is_null__first__bit ) >= 0)
 
 axiom gnat__sockets__selector_type__is_null__last__bit_axiom :
  ((gnat__sockets__selector_type__is_null__last__bit ) > (gnat__sockets__selector_type__is_null__first__bit ))
 
 axiom gnat__sockets__selector_type__is_null__position_axiom :
  ((gnat__sockets__selector_type__is_null__position ) >= 0)
 
 function gnat__sockets__selector_type__r_sig_socket__first__bit #"g-socket.ads" 1175 0 0# 
   : int
 
 function gnat__sockets__selector_type__r_sig_socket__last__bit #"g-socket.ads" 1175 0 0# 
   : int
 
 function gnat__sockets__selector_type__r_sig_socket__position #"g-socket.ads" 1175 0 0# 
   : int
 
 axiom gnat__sockets__selector_type__r_sig_socket__first__bit_axiom :
  ((gnat__sockets__selector_type__r_sig_socket__first__bit ) >= 0)
 
 axiom gnat__sockets__selector_type__r_sig_socket__last__bit_axiom :
  ((gnat__sockets__selector_type__r_sig_socket__last__bit ) > (gnat__sockets__selector_type__r_sig_socket__first__bit ))
 
 axiom gnat__sockets__selector_type__r_sig_socket__position_axiom :
  ((gnat__sockets__selector_type__r_sig_socket__position ) >= 0)
 
 function gnat__sockets__selector_type__w_sig_socket__first__bit #"g-socket.ads" 1181 0 0# 
   : int
 
 function gnat__sockets__selector_type__w_sig_socket__last__bit #"g-socket.ads" 1181 0 0# 
   : int
 
 function gnat__sockets__selector_type__w_sig_socket__position #"g-socket.ads" 1181 0 0# 
   : int
 
 axiom gnat__sockets__selector_type__w_sig_socket__first__bit_axiom :
  ((gnat__sockets__selector_type__w_sig_socket__first__bit ) >= 0)
 
 axiom gnat__sockets__selector_type__w_sig_socket__last__bit_axiom :
  ((gnat__sockets__selector_type__w_sig_socket__last__bit ) > (gnat__sockets__selector_type__w_sig_socket__first__bit ))
 
 axiom gnat__sockets__selector_type__w_sig_socket__position_axiom :
  ((gnat__sockets__selector_type__w_sig_socket__position ) >= 0)
 
 function dummy #"g-socket.ads" 1182 0 0# 
   : selector_type
 
 type selector_type__ref #"g-socket.ads" 1175 0 0# =
  { mutable selector_type__content "model_trace:" : selector_type }
 
 function selector_type__ref___projection #"g-socket.ads" 1175 0 0# 
   (a : selector_type__ref) : selector_type =
  a.selector_type__content
 
 meta "model_projection" function selector_type__ref___projection
 
 meta "inline : no" function selector_type__ref___projection
 
 val selector_type__havoc #"g-socket.ads" 1175 0 0# 
   (x : selector_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "immediate" defined at g-socket.ads:433, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__immediate
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function immediate #"g-socket.ads" 433 0 0# "model_projected" "model_trace:2573" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "forever" defined at g-socket.ads:435, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__forever
 use import "_gnatprove_standard".Main
 use        Standard__duration

 function forever #"g-socket.ads" 435 0 0# "model_projected" "model_trace:2583" 
   : Standard__duration.duration
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "timeval_duration" defined at g-socket.ads:439, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__timeval_duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type timeval_duration #"g-socket.ads" 439 0 0# 
 
 function inv_small #"g-socket.ads" 439 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"g-socket.ads" 439 0 0# 
   : Main.__fixed =
  0
 
 function last #"g-socket.ads" 439 0 0# 
   : Main.__fixed =
  2147483647000000000
 
 predicate in_range #"g-socket.ads" 439 0 0# 
   (x : Main.__fixed)  =
  #"g-socket.ads" 439 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = timeval_duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type timeval_duration__ref #"g-socket.ads" 439 0 0# =
  { mutable timeval_duration__content "model_trace:" : timeval_duration }
 
 function timeval_duration__ref___projection #"g-socket.ads" 439 0 0# 
   (a : timeval_duration__ref) : timeval_duration =
  a.timeval_duration__content
 
 meta "model_projection" function timeval_duration__ref___projection
 
 meta "inline : no" function timeval_duration__ref___projection
 
 val timeval_duration__havoc #"g-socket.ads" 439 0 0# 
   (x : timeval_duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "selector_duration" defined at g-socket.ads:441, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__selector_duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type selector_duration #"g-socket.ads" 441 0 0# 
 
 function inv_small #"g-socket.ads" 441 0 0# 
   : Main.__fixed =
  1000000000
 
 function first #"g-socket.ads" 441 0 0# 
   : Main.__fixed =
  0
 
 function last #"g-socket.ads" 441 0 0# 
   : Main.__fixed =
  2147483647000000000
 
 predicate in_range #"g-socket.ads" 441 0 0# 
   (x : Main.__fixed)  =
  #"g-socket.ads" 441 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = selector_duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small
 
 type selector_duration__ref #"g-socket.ads" 441 0 0# =
  { mutable selector_duration__content "model_trace:" : selector_duration }
 
 function selector_duration__ref___projection #"g-socket.ads" 441 0 0# 
   (a : selector_duration__ref) : selector_duration =
  a.selector_duration__content
 
 meta "model_projection" function selector_duration__ref___projection
 
 meta "inline : no" function selector_duration__ref___projection
 
 val selector_duration__havoc #"g-socket.ads" 441 0 0# 
   (x : selector_duration__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "selector_status" defined at g-socket.ads:444, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__selector_status
 use import "_gnatprove_standard".Main
 use import "int".Int

 type selector_status #"g-socket.ads" 444 0 0# 
 
 function first #"g-socket.ads" 444 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 444 0 0# 
   : int =
  2
 
 predicate in_range #"g-socket.ads" 444 0 0# 
   (x : int)  =
  #"g-socket.ads" 444 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = selector_status, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type selector_status__ref #"g-socket.ads" 444 0 0# =
  { mutable selector_status__content "model_trace:" : selector_status }
 
 function selector_status__ref___projection #"g-socket.ads" 444 0 0# 
   (a : selector_status__ref) : selector_status =
  a.selector_status__content
 
 meta "model_projection" function selector_status__ref___projection
 
 meta "inline : no" function selector_status__ref___projection
 
 val selector_status__havoc #"g-socket.ads" 444 0 0# 
   (x : selector_status__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "selector_status" defined at g-socket.ads:444, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__selector_status__rep
 use        Gnat__sockets__selector_status
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__selector_status.selector_status, 
 predicate in_range = Gnat__sockets__selector_status.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "socket" defined at g-socket.ads:456, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__image__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 456 0 0# "model" "model_trace:2672" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:456, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__image__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "image" defined at g-socket.ads:456, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__image
 use import "_gnatprove_standard".Main
 use        Standard__string

 function image #"g-socket.ads" 456 0 0# 
   (socket : int) : Standard__string.string
 
 predicate image__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (socket : int) 

end

(* Module for defining the constant "socket" defined at g-socket.ads:459, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__to_c__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 459 0 0# "model" "model_trace:2691" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:459, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__to_c__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c" defined at g-socket.ads:459, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__to_c
 use import "_gnatprove_standard".Main

 function to_c #"g-socket.ads" 459 0 0# 
   (socket : int) : int
 
 predicate to_c__function_guard #"system.ads" 1 0 0# 
   (result : int) (socket : int) 

end

(* Module for axiomatizing type "family_type" defined at g-socket.ads:463, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__family_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type family_type #"g-socket.ads" 463 0 0# 
 
 function first #"g-socket.ads" 463 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 463 0 0# 
   : int =
  1
 
 predicate in_range #"g-socket.ads" 463 0 0# 
   (x : int)  =
  #"g-socket.ads" 463 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = family_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type family_type__ref #"g-socket.ads" 463 0 0# =
  { mutable family_type__content "model_trace:" : family_type }
 
 function family_type__ref___projection #"g-socket.ads" 463 0 0# 
   (a : family_type__ref) : family_type =
  a.family_type__content
 
 meta "model_projection" function family_type__ref___projection
 
 meta "inline : no" function family_type__ref___projection
 
 val family_type__havoc #"g-socket.ads" 463 0 0# 
   (x : family_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "family_type" defined at g-socket.ads:463, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__family_type__rep
 use        Gnat__sockets__family_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__family_type.family_type, 
 predicate in_range = Gnat__sockets__family_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "mode_type" defined at g-socket.ads:467, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__mode_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type mode_type #"g-socket.ads" 467 0 0# 
 
 function first #"g-socket.ads" 467 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 467 0 0# 
   : int =
  1
 
 predicate in_range #"g-socket.ads" 467 0 0# 
   (x : int)  =
  #"g-socket.ads" 467 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = mode_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type mode_type__ref #"g-socket.ads" 467 0 0# =
  { mutable mode_type__content "model_trace:" : mode_type }
 
 function mode_type__ref___projection #"g-socket.ads" 467 0 0# 
   (a : mode_type__ref) : mode_type =
  a.mode_type__content
 
 meta "model_projection" function mode_type__ref___projection
 
 meta "inline : no" function mode_type__ref___projection
 
 val mode_type__havoc #"g-socket.ads" 467 0 0# 
   (x : mode_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "mode_type" defined at g-socket.ads:467, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__mode_type__rep
 use        Gnat__sockets__mode_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__mode_type.mode_type, 
 predicate in_range = Gnat__sockets__mode_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "shutmode_type" defined at g-socket.ads:471, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__shutmode_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type shutmode_type #"g-socket.ads" 471 0 0# 
 
 function first #"g-socket.ads" 471 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 471 0 0# 
   : int =
  2
 
 predicate in_range #"g-socket.ads" 471 0 0# 
   (x : int)  =
  #"g-socket.ads" 471 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = shutmode_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type shutmode_type__ref #"g-socket.ads" 471 0 0# =
  { mutable shutmode_type__content "model_trace:" : shutmode_type }
 
 function shutmode_type__ref___projection #"g-socket.ads" 471 0 0# 
   (a : shutmode_type__ref) : shutmode_type =
  a.shutmode_type__content
 
 meta "model_projection" function shutmode_type__ref___projection
 
 meta "inline : no" function shutmode_type__ref___projection
 
 val shutmode_type__havoc #"g-socket.ads" 471 0 0# 
   (x : shutmode_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "shutmode_type" defined at g-socket.ads:471, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__shutmode_type__rep
 use        Gnat__sockets__shutmode_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__shutmode_type.shutmode_type, 
 predicate in_range = Gnat__sockets__shutmode_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tport_typeB" defined at g-socket.ads:479, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tport_typeB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tport_typeB #"g-socket.ads" 479 0 0# 
 
 function first #"g-socket.ads" 479 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"g-socket.ads" 479 0 0# 
   : int =
  2147483647
 
 predicate in_range #"g-socket.ads" 479 0 0# 
   (x : int)  =
  #"g-socket.ads" 479 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tport_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tport_typeB__ref #"g-socket.ads" 479 0 0# =
  { mutable tport_typeB__content "model_trace:" : tport_typeB }
 
 function tport_typeB__ref___projection #"g-socket.ads" 479 0 0# 
   (a : tport_typeB__ref) : tport_typeB =
  a.tport_typeB__content
 
 meta "model_projection" function tport_typeB__ref___projection
 
 meta "inline : no" function tport_typeB__ref___projection
 
 val tport_typeB__havoc #"g-socket.ads" 479 0 0# 
   (x : tport_typeB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tport_typeB" defined at g-socket.ads:479, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tport_typeB__rep
 use        Gnat__sockets__Tport_typeB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__Tport_typeB.tport_typeB, 
 predicate in_range = Gnat__sockets__Tport_typeB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "port_type" defined at g-socket.ads:479, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__port_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type port_type #"g-socket.ads" 479 0 0# 
 
 function first #"g-socket.ads" 479 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 479 0 0# 
   : int =
  65535
 
 predicate in_range #"g-socket.ads" 479 0 0# 
   (x : int)  =
  #"g-socket.ads" 479 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = port_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type port_type__ref #"g-socket.ads" 479 0 0# =
  { mutable port_type__content "model_trace:" : port_type }
 
 function port_type__ref___projection #"g-socket.ads" 479 0 0# 
   (a : port_type__ref) : port_type =
  a.port_type__content
 
 meta "model_projection" function port_type__ref___projection
 
 meta "inline : no" function port_type__ref___projection
 
 val port_type__havoc #"g-socket.ads" 479 0 0# 
   (x : port_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "port_type" defined at g-socket.ads:479, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__port_type__rep
 use        Gnat__sockets__port_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__port_type.port_type, 
 predicate in_range = Gnat__sockets__port_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "any_port" defined at g-socket.ads:482, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__any_port
 use import "_gnatprove_standard".Main

 function any_port #"g-socket.ads" 482 0 0# "model" "model_trace:2793" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 479 0 0# 
   : int

end

(* Module for defining the constant "no_port" defined at g-socket.ads:485, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__no_port
 use import "_gnatprove_standard".Main

 function no_port #"g-socket.ads" 485 0 0# "model" "model_trace:2802" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 479 0 0# 
   : int

end

(* Module for axiomatizing type "inet_addr_comp_type" defined at g-socket.ads:1212, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_comp_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type inet_addr_comp_type #"g-socket.ads" 1212 0 0# 
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  255
 
 predicate in_range #"g-socket.ads" 1212 0 0# 
   (x : int)  =
  #"g-socket.ads" 1212 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = inet_addr_comp_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type inet_addr_comp_type__ref #"g-socket.ads" 1212 0 0# =
  { mutable inet_addr_comp_type__content "model_trace:" : inet_addr_comp_type }
 
 function inet_addr_comp_type__ref___projection #"g-socket.ads" 1212 0 0# 
   (a : inet_addr_comp_type__ref) : inet_addr_comp_type =
  a.inet_addr_comp_type__content
 
 meta "model_projection" function inet_addr_comp_type__ref___projection
 
 meta "inline : no" function inet_addr_comp_type__ref___projection
 
 val inet_addr_comp_type__havoc #"g-socket.ads" 1212 0 0# 
   (x : inet_addr_comp_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "inet_addr_comp_type" defined at g-socket.ads:1212, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_comp_type__rep
 use        Gnat__sockets__inet_addr_comp_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type, 
 predicate in_range = Gnat__sockets__inet_addr_comp_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "inet_addr_vn_type" defined at g-socket.ads:1215, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Gnat__sockets__inet_addr_comp_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep

 function index_I1_one #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 type component_type #"g-socket.ads" 1212 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"g-socket.ads" 1212 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_168 #"g-socket.ads" 1212 0 0#  : int.
   (if (( (a__first <= temp___idx_168) /\ (temp___idx_168 <= a__last) )) then (
    ((Gnat__sockets__inet_addr_comp_type__rep.to_rep (get a temp___idx_168)) = (Gnat__sockets__inet_addr_comp_type__rep.to_rep (get b ((b__first - a__first) + temp___idx_168))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"g-socket.ads" 1212 0 0#  b #"g-socket.ads" 1212 0 0#  : map.
  (forall a__first #"g-socket.ads" 1212 0 0#  a__last #"g-socket.ads" 1212 0 0#  b__first #"g-socket.ads" 1212 0 0#  b__last #"g-socket.ads" 1212 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_168 #"g-socket.ads" 1212 0 0#  : int.
    (if (( (a__first <= temp___idx_168) /\ (temp___idx_168 <= a__last) )) then (
     ((Gnat__sockets__inet_addr_comp_type__rep.to_rep (get a temp___idx_168)) = (Gnat__sockets__inet_addr_comp_type__rep.to_rep (get b ((b__first - a__first) + temp___idx_168))))) else true)) ) )))
 
 function index_Index_one #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Gnat__sockets__inet_addr_comp_type__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "inet_addr_vn_type" defined at g-socket.ads:1215, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_vn_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        Standard__integer__rep
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1212 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function index_1_id #"g-socket.ads" 1212 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type inet_addr_vn_type #"g-socket.ads" 1215 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type inet_addr_vn_type__ref #"g-socket.ads" 1215 0 0# =
  { mutable inet_addr_vn_type__content "model_trace:" : inet_addr_vn_type }
 
 function inet_addr_vn_type__ref___projection #"g-socket.ads" 1215 0 0# 
   (a : inet_addr_vn_type__ref) : inet_addr_vn_type =
  a.inet_addr_vn_type__content
 
 meta "model_projection" function inet_addr_vn_type__ref___projection
 
 meta "inline : no" function inet_addr_vn_type__ref___projection
 
 val inet_addr_vn_type__havoc #"g-socket.ads" 1215 0 0# 
   (x : inet_addr_vn_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tinet_addr_v4_typeP1" defined at g-socket.ads:1217, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tinet_addr_v4_typeP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinet_addr_v4_typeP1 #"g-socket.ads" 1217 0 0# 
 
 function first #"g-socket.ads" 1217 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1217 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1217 0 0# 
   (x : int)  =
  #"g-socket.ads" 1217 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinet_addr_v4_typeP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tinet_addr_v4_typeP1__ref #"g-socket.ads" 1217 0 0# =
  { mutable tinet_addr_v4_typeP1__content "model_trace:" : tinet_addr_v4_typeP1 }
 
 function tinet_addr_v4_typeP1__ref___projection #"g-socket.ads" 1217 0 0# 
   (a : tinet_addr_v4_typeP1__ref) : tinet_addr_v4_typeP1 =
  a.tinet_addr_v4_typeP1__content
 
 meta "model_projection" function tinet_addr_v4_typeP1__ref___projection
 
 meta "inline : no" function tinet_addr_v4_typeP1__ref___projection
 
 val tinet_addr_v4_typeP1__havoc #"g-socket.ads" 1217 0 0# 
   (x : tinet_addr_v4_typeP1__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tinet_addr_v4_typeP1" defined at g-socket.ads:1217, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tinet_addr_v4_typeP1__rep
 use        Gnat__sockets__Tinet_addr_v4_typeP1
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__Tinet_addr_v4_typeP1.tinet_addr_v4_typeP1, 
 predicate in_range = Gnat__sockets__Tinet_addr_v4_typeP1.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "inet_addr_v4_type" defined at g-socket.ads:1217, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_v4_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1217 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T14s" defined at g-socket.ads:1223, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_type__T14s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t14s #"g-socket.ads" 1223 0 0# 
 
 function first #"g-socket.ads" 1223 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1223 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1223 0 0# 
   (x : int)  =
  #"g-socket.ads" 1223 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t14s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t14s__ref #"g-socket.ads" 1223 0 0# =
  { mutable t14s__content "model_trace:" : t14s }
 
 function t14s__ref___projection #"g-socket.ads" 1223 0 0# 
   (a : t14s__ref) : t14s =
  a.t14s__content
 
 meta "model_projection" function t14s__ref___projection
 
 meta "inline : no" function t14s__ref___projection
 
 val t14s__havoc #"g-socket.ads" 1223 0 0# 
   (x : t14s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T14s" defined at g-socket.ads:1223, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_type__T14s__rep
 use        Gnat__sockets__inet_addr_type__T14s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__inet_addr_type__T14s.t14s, 
 predicate in_range = Gnat__sockets__inet_addr_type__T14s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T15s" defined at g-socket.ads:1223, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_type__T15s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1223 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "Tinet_addr_v6_typeP1" defined at g-socket.ads:1218, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tinet_addr_v6_typeP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tinet_addr_v6_typeP1 #"g-socket.ads" 1218 0 0# 
 
 function first #"g-socket.ads" 1218 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1218 0 0# 
   : int =
  16
 
 predicate in_range #"g-socket.ads" 1218 0 0# 
   (x : int)  =
  #"g-socket.ads" 1218 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinet_addr_v6_typeP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tinet_addr_v6_typeP1__ref #"g-socket.ads" 1218 0 0# =
  { mutable tinet_addr_v6_typeP1__content "model_trace:" : tinet_addr_v6_typeP1 }
 
 function tinet_addr_v6_typeP1__ref___projection #"g-socket.ads" 1218 0 0# 
   (a : tinet_addr_v6_typeP1__ref) : tinet_addr_v6_typeP1 =
  a.tinet_addr_v6_typeP1__content
 
 meta "model_projection" function tinet_addr_v6_typeP1__ref___projection
 
 meta "inline : no" function tinet_addr_v6_typeP1__ref___projection
 
 val tinet_addr_v6_typeP1__havoc #"g-socket.ads" 1218 0 0# 
   (x : tinet_addr_v6_typeP1__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tinet_addr_v6_typeP1" defined at g-socket.ads:1218, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tinet_addr_v6_typeP1__rep
 use        Gnat__sockets__Tinet_addr_v6_typeP1
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__Tinet_addr_v6_typeP1.tinet_addr_v6_typeP1, 
 predicate in_range = Gnat__sockets__Tinet_addr_v6_typeP1.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "inet_addr_v6_type" defined at g-socket.ads:1218, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_v6_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1218 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  16
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T16s" defined at g-socket.ads:1226, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_type__T16s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t16s #"g-socket.ads" 1226 0 0# 
 
 function first #"g-socket.ads" 1226 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1226 0 0# 
   : int =
  16
 
 predicate in_range #"g-socket.ads" 1226 0 0# 
   (x : int)  =
  #"g-socket.ads" 1226 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t16s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t16s__ref #"g-socket.ads" 1226 0 0# =
  { mutable t16s__content "model_trace:" : t16s }
 
 function t16s__ref___projection #"g-socket.ads" 1226 0 0# 
   (a : t16s__ref) : t16s =
  a.t16s__content
 
 meta "model_projection" function t16s__ref___projection
 
 meta "inline : no" function t16s__ref___projection
 
 val t16s__havoc #"g-socket.ads" 1226 0 0# 
   (x : t16s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T16s" defined at g-socket.ads:1226, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_type__T16s__rep
 use        Gnat__sockets__inet_addr_type__T16s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__inet_addr_type__T16s.t16s, 
 predicate in_range = Gnat__sockets__inet_addr_type__T16s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T17s" defined at g-socket.ads:1226, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_type__T17s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1226 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  16
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "inet_addr_type" defined at g-socket.ads:1220, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v4_type
 use        Gnat__sockets__inet_addr_v6_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type __split_discrs #"g-socket.ads" 1212 0 0# =
  { rec__gnat__sockets__inet_addr_type__family "model_trace:.2819" : Gnat__sockets__family_type.family_type }
 
 function __split_discrs_2__projection #"g-socket.ads" 463 0 0# 
   (a : __split_discrs) : Gnat__sockets__family_type.family_type =
  a.rec__gnat__sockets__inet_addr_type__family
 
 meta "model_projection" function __split_discrs_2__projection
 
 meta "inline : no" function __split_discrs_2__projection
 
 type __split_discrs__ref #"g-socket.ads" 1220 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_2__projection #"g-socket.ads" 1220 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_2__projection
 
 meta "inline : no" function __split_discrs__ref_2__projection
 
 val __split_discrs__havoc #"g-socket.ads" 1220 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 1220 0 0# =
  { rec__gnat__sockets__inet_addr_type__sin_v4 "model_trace:.6035" : Array__Int__Gnat__sockets__inet_addr_comp_type.map; rec__gnat__sockets__inet_addr_type__sin_v6 "model_trace:.6053" : Array__Int__Gnat__sockets__inet_addr_comp_type.map }
 
 function __split_fields_Sin_V4__projection #"g-socket.ads" 1218 0 0# "model_trace:.6035" 
   (a : __split_fields) : Array__Int__Gnat__sockets__inet_addr_comp_type.map =
  a.rec__gnat__sockets__inet_addr_type__sin_v4
 
 meta "model_projection" function __split_fields_Sin_V4__projection
 
 meta "inline : no" function __split_fields_Sin_V4__projection
 
 function __split_fields_Sin_V6__projection #"g-socket.ads" 1220 0 0# "model_trace:.6053" 
   (a : __split_fields) : Array__Int__Gnat__sockets__inet_addr_comp_type.map =
  a.rec__gnat__sockets__inet_addr_type__sin_v6
 
 meta "model_projection" function __split_fields_Sin_V6__projection
 
 meta "inline : no" function __split_fields_Sin_V6__projection
 
 type __split_fields__ref #"g-socket.ads" 1220 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_4__projection #"g-socket.ads" 1220 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_4__projection
 
 meta "inline : no" function __split_fields__ref_4__projection
 
 val __split_fields__havoc #"g-socket.ads" 1220 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 1220 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields; attr__constrained "model_trace:" : bool }
 
 function __rep_7__projection #"g-socket.ads" 1220 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_7__projection
 
 meta "inline : no" function __rep_7__projection
 
 function __rep_8__projection #"g-socket.ads" 1220 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_8__projection
 
 meta "inline : no" function __rep_8__projection
 
 function __rep_9__projection #"g-socket.ads" 1220 0 0# 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_9__projection
 
 meta "inline : no" function __rep_9__projection
 
 function to_base #"g-socket.ads" 1220 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 1220 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__inet_addr_type__family_ #"g-socket.ads" 1220 0 0# 
   (a : __rep) : Gnat__sockets__family_type.family_type
  requires { #"g-socket.ads" 463 0 0# true }
  ensures { #"g-socket.ads" 463 0 0# (result = a.__split_discrs.rec__gnat__sockets__inet_addr_type__family) }
 
 predicate gnat__sockets__inet_addr_type__sin_v4__pred #"g-socket.ads" 1220 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1220 0 0# ((Gnat__sockets__family_type__rep.to_rep a.__split_discrs.rec__gnat__sockets__inet_addr_type__family) = 0)
 
 val rec__gnat__sockets__inet_addr_type__sin_v4_ #"g-socket.ads" 1220 0 0# 
   (a : __rep) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
  requires { #"g-socket.ads" 1217 0 0# (gnat__sockets__inet_addr_type__sin_v4__pred a) }
  ensures { #"g-socket.ads" 1217 0 0# (result = a.__split_fields.rec__gnat__sockets__inet_addr_type__sin_v4) }
 
 predicate gnat__sockets__inet_addr_type__sin_v6__pred #"g-socket.ads" 1220 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1220 0 0# ((Gnat__sockets__family_type__rep.to_rep a.__split_discrs.rec__gnat__sockets__inet_addr_type__family) = 1)
 
 val rec__gnat__sockets__inet_addr_type__sin_v6_ #"g-socket.ads" 1220 0 0# 
   (a : __rep) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
  requires { #"g-socket.ads" 1218 0 0# (gnat__sockets__inet_addr_type__sin_v6__pred a) }
  ensures { #"g-socket.ads" 1218 0 0# (result = a.__split_fields.rec__gnat__sockets__inet_addr_type__sin_v6) }
 
 function bool_eq #"g-socket.ads" 1220 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Gnat__sockets__family_type__rep.to_rep a.__split_discrs.rec__gnat__sockets__inet_addr_type__family) = (Gnat__sockets__family_type__rep.to_rep b.__split_discrs.rec__gnat__sockets__inet_addr_type__family)) /\ ( (gnat__sockets__inet_addr_type__sin_v4__pred a) -> ((Gnat__sockets__inet_addr_v4_type.bool_eq a.__split_fields.rec__gnat__sockets__inet_addr_type__sin_v4 b.__split_fields.rec__gnat__sockets__inet_addr_type__sin_v4) = True) ) ) /\ ( (gnat__sockets__inet_addr_type__sin_v6__pred a) -> ((Gnat__sockets__inet_addr_v6_type.bool_eq a.__split_fields.rec__gnat__sockets__inet_addr_type__sin_v6 b.__split_fields.rec__gnat__sockets__inet_addr_type__sin_v6) = True) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 1220 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "inet_addr_type" defined at g-socket.ads:1220, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_type
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type inet_addr_type #"g-socket.ads" 1220 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : inet_addr_type) : int
 
 function value__alignment #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1220 0 0# 
   (a : inet_addr_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1220 0 0#  : inet_addr_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1220 0 0#  : inet_addr_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1220 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1220 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1220 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 1223 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 1223 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 1223 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function dummy #"g-socket.ads" 1226 0 0# 
   : inet_addr_type
 
 type inet_addr_type__ref #"g-socket.ads" 1220 0 0# =
  { mutable inet_addr_type__content "model_trace:" : inet_addr_type }
 
 function inet_addr_type__ref___projection #"g-socket.ads" 1220 0 0# 
   (a : inet_addr_type__ref) : inet_addr_type =
  a.inet_addr_type__content
 
 meta "model_projection" function inet_addr_type__ref___projection
 
 meta "inline : no" function inet_addr_type__ref___projection
 
 val inet_addr_type__havoc #"g-socket.ads" 1220 0 0# 
   (x : inet_addr_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "any_inet_addr" defined at g-socket.ads:494, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__any_inet_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function any_inet_addr #"g-socket.ads" 494 0 0# "model_projected" "model_trace:2830" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module for defining the constant "no_inet_addr" defined at g-socket.ads:495, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__no_inet_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function no_inet_addr #"g-socket.ads" 495 0 0# "model_projected" "model_trace:2839" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module for defining the constant "broadcast_inet_addr" defined at g-socket.ads:496, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__broadcast_inet_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function broadcast_inet_addr #"g-socket.ads" 496 0 0# "model_projected" "model_trace:2848" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module for defining the constant "loopback_inet_addr" defined at g-socket.ads:497, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__loopback_inet_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function loopback_inet_addr #"g-socket.ads" 497 0 0# "model_projected" "model_trace:2857" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module for defining the constant "unspecified_group_inet_addr" defined at g-socket.ads:501, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__unspecified_group_inet_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function unspecified_group_inet_addr #"g-socket.ads" 501 0 0# "model_projected" "model_trace:2866" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module for defining the constant "all_hosts_group_inet_addr" defined at g-socket.ads:502, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__all_hosts_group_inet_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function all_hosts_group_inet_addr #"g-socket.ads" 502 0 0# "model_projected" "model_trace:2875" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module for defining the constant "all_routers_group_inet_addr" defined at g-socket.ads:503, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__all_routers_group_inet_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function all_routers_group_inet_addr #"g-socket.ads" 503 0 0# "model_projected" "model_trace:2884" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module for axiomatizing type "T4s" defined at g-socket.ads:506, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__sock_addr_type__T4s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t4s #"g-socket.ads" 506 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 506 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t4s) : int
 
 function value__alignment #"g-socket.ads" 506 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 506 0 0# 
   (a : t4s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 506 0 0#  : t4s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 506 0 0#  : t4s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 506 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 506 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 506 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 1223 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 1223 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 1223 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function dummy #"g-socket.ads" 1226 0 0# 
   : t4s
 
 type t4s__ref #"g-socket.ads" 506 0 0# =
  { mutable t4s__content "model_trace:" : t4s }
 
 function t4s__ref___projection #"g-socket.ads" 506 0 0# 
   (a : t4s__ref) : t4s =
  a.t4s__content
 
 meta "model_projection" function t4s__ref___projection
 
 meta "inline : no" function t4s__ref___projection
 
 val t4s__havoc #"g-socket.ads" 506 0 0# 
   (x : t4s__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "sock_addr_type" defined at g-socket.ads:505, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__sock_addr_type__rep
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__port_type
 use        Gnat__sockets__port_type__rep
 use        Gnat__sockets__sock_addr_type__T4s

 type __split_discrs #"g-socket.ads" 506 0 0# =
  { rec__gnat__sockets__sock_addr_type__family "model_trace:.2901" : Gnat__sockets__family_type.family_type }
 
 function __split_discrs_3__projection #"g-socket.ads" 463 0 0# 
   (a : __split_discrs) : Gnat__sockets__family_type.family_type =
  a.rec__gnat__sockets__sock_addr_type__family
 
 meta "model_projection" function __split_discrs_3__projection
 
 meta "inline : no" function __split_discrs_3__projection
 
 type __split_discrs__ref #"g-socket.ads" 505 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_3__projection #"g-socket.ads" 505 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_3__projection
 
 meta "inline : no" function __split_discrs__ref_3__projection
 
 val __split_discrs__havoc #"g-socket.ads" 505 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 505 0 0# =
  { rec__gnat__sockets__sock_addr_type__addr "model_trace:.2914" : Gnat__sockets__sock_addr_type__T4s.t4s; rec__gnat__sockets__sock_addr_type__port "model_trace:.2927" : Gnat__sockets__port_type.port_type }
 
 function __split_fields_Addr__projection #"g-socket.ads" 479 0 0# "model_trace:.2914" 
   (a : __split_fields) : Gnat__sockets__sock_addr_type__T4s.t4s =
  a.rec__gnat__sockets__sock_addr_type__addr
 
 meta "model_projection" function __split_fields_Addr__projection
 
 meta "inline : no" function __split_fields_Addr__projection
 
 function __split_fields_Port__projection #"g-socket.ads" 505 0 0# "model_trace:.2927" 
   (a : __split_fields) : Gnat__sockets__port_type.port_type =
  a.rec__gnat__sockets__sock_addr_type__port
 
 meta "model_projection" function __split_fields_Port__projection
 
 meta "inline : no" function __split_fields_Port__projection
 
 type __split_fields__ref #"g-socket.ads" 505 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_5__projection #"g-socket.ads" 505 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_5__projection
 
 meta "inline : no" function __split_fields__ref_5__projection
 
 val __split_fields__havoc #"g-socket.ads" 505 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 505 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields; attr__constrained "model_trace:" : bool }
 
 function __rep_10__projection #"g-socket.ads" 505 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_10__projection
 
 meta "inline : no" function __rep_10__projection
 
 function __rep_11__projection #"g-socket.ads" 505 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_11__projection
 
 meta "inline : no" function __rep_11__projection
 
 function __rep_12__projection #"g-socket.ads" 505 0 0# 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_12__projection
 
 meta "inline : no" function __rep_12__projection
 
 function to_base #"g-socket.ads" 505 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 505 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__sock_addr_type__family_ #"g-socket.ads" 505 0 0# 
   (a : __rep) : Gnat__sockets__family_type.family_type
  requires { #"g-socket.ads" 463 0 0# true }
  ensures { #"g-socket.ads" 463 0 0# (result = a.__split_discrs.rec__gnat__sockets__sock_addr_type__family) }
 
 predicate gnat__sockets__sock_addr_type__addr__pred #"g-socket.ads" 505 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 505 0 0# true
 
 val rec__gnat__sockets__sock_addr_type__addr_ #"g-socket.ads" 505 0 0# 
   (a : __rep) : Gnat__sockets__sock_addr_type__T4s.t4s
  requires { #"g-socket.ads" 506 0 0# (gnat__sockets__sock_addr_type__addr__pred a) }
  ensures { #"g-socket.ads" 506 0 0# (result = a.__split_fields.rec__gnat__sockets__sock_addr_type__addr) }
 
 predicate gnat__sockets__sock_addr_type__port__pred #"g-socket.ads" 505 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 505 0 0# true
 
 val rec__gnat__sockets__sock_addr_type__port_ #"g-socket.ads" 505 0 0# 
   (a : __rep) : Gnat__sockets__port_type.port_type
  requires { #"g-socket.ads" 479 0 0# (gnat__sockets__sock_addr_type__port__pred a) }
  ensures { #"g-socket.ads" 479 0 0# (result = a.__split_fields.rec__gnat__sockets__sock_addr_type__port) }
 
 function bool_eq #"g-socket.ads" 505 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Gnat__sockets__family_type__rep.to_rep a.__split_discrs.rec__gnat__sockets__sock_addr_type__family) = (Gnat__sockets__family_type__rep.to_rep b.__split_discrs.rec__gnat__sockets__sock_addr_type__family)) /\ ( (gnat__sockets__sock_addr_type__addr__pred a) -> ((Gnat__sockets__sock_addr_type__T4s.bool_eq a.__split_fields.rec__gnat__sockets__sock_addr_type__addr b.__split_fields.rec__gnat__sockets__sock_addr_type__addr) = True) ) ) /\ ( (gnat__sockets__sock_addr_type__port__pred a) -> ((Gnat__sockets__port_type__rep.to_rep a.__split_fields.rec__gnat__sockets__sock_addr_type__port) = (Gnat__sockets__port_type__rep.to_rep b.__split_fields.rec__gnat__sockets__sock_addr_type__port)) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 505 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "sock_addr_type" defined at g-socket.ads:505, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__sock_addr_type
 use export Gnat__sockets__sock_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type sock_addr_type #"g-socket.ads" 505 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 505 0 0# 
   : int
 
 function object__size #"g-socket.ads" 505 0 0# 
   (a : sock_addr_type) : int
 
 function value__alignment #"g-socket.ads" 505 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 505 0 0# 
   (a : sock_addr_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 505 0 0#  : sock_addr_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 505 0 0#  : sock_addr_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__sock_addr_type__family__first__bit #"g-socket.ads" 505 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__family__last__bit #"g-socket.ads" 505 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__family__position #"g-socket.ads" 505 0 0# 
   : int
 
 axiom gnat__sockets__sock_addr_type__family__first__bit_axiom :
  ((gnat__sockets__sock_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__sock_addr_type__family__last__bit_axiom :
  ((gnat__sockets__sock_addr_type__family__last__bit ) > (gnat__sockets__sock_addr_type__family__first__bit ))
 
 axiom gnat__sockets__sock_addr_type__family__position_axiom :
  ((gnat__sockets__sock_addr_type__family__position ) >= 0)
 
 function gnat__sockets__sock_addr_type__addr__first__bit #"g-socket.ads" 505 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__addr__last__bit #"g-socket.ads" 505 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__addr__position #"g-socket.ads" 505 0 0# 
   : int
 
 axiom gnat__sockets__sock_addr_type__addr__first__bit_axiom :
  ((gnat__sockets__sock_addr_type__addr__first__bit ) >= 0)
 
 axiom gnat__sockets__sock_addr_type__addr__last__bit_axiom :
  ((gnat__sockets__sock_addr_type__addr__last__bit ) > (gnat__sockets__sock_addr_type__addr__first__bit ))
 
 axiom gnat__sockets__sock_addr_type__addr__position_axiom :
  ((gnat__sockets__sock_addr_type__addr__position ) >= 0)
 
 function gnat__sockets__sock_addr_type__port__first__bit #"g-socket.ads" 506 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__port__last__bit #"g-socket.ads" 506 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__port__position #"g-socket.ads" 506 0 0# 
   : int
 
 axiom gnat__sockets__sock_addr_type__port__first__bit_axiom :
  ((gnat__sockets__sock_addr_type__port__first__bit ) >= 0)
 
 axiom gnat__sockets__sock_addr_type__port__last__bit_axiom :
  ((gnat__sockets__sock_addr_type__port__last__bit ) > (gnat__sockets__sock_addr_type__port__first__bit ))
 
 axiom gnat__sockets__sock_addr_type__port__position_axiom :
  ((gnat__sockets__sock_addr_type__port__position ) >= 0)
 
 function dummy #"g-socket.ads" 507 0 0# 
   : sock_addr_type
 
 type sock_addr_type__ref #"g-socket.ads" 505 0 0# =
  { mutable sock_addr_type__content "model_trace:" : sock_addr_type }
 
 function sock_addr_type__ref___projection #"g-socket.ads" 505 0 0# 
   (a : sock_addr_type__ref) : sock_addr_type =
  a.sock_addr_type__content
 
 meta "model_projection" function sock_addr_type__ref___projection
 
 meta "inline : no" function sock_addr_type__ref___projection
 
 val sock_addr_type__havoc #"g-socket.ads" 505 0 0# 
   (x : sock_addr_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "no_sock_addr" defined at g-socket.ads:514, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__no_sock_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function no_sock_addr #"g-socket.ads" 514 0 0# "model_projected" "model_trace:2943" 
   : Gnat__sockets__sock_addr_type.sock_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 505 0 0# 
   : int

end

(* Module for defining the constant "value" defined at g-socket.ads:516, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__image__2__value
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function value #"g-socket.ads" 516 0 0# "model_projected" "model_trace:2959" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at g-socket.ads:516, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__image__2__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "image__2" defined at g-socket.ads:516, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__image__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__inet_addr_type

 function image__2 #"g-socket.ads" 516 0 0# 
   (value : Gnat__sockets__inet_addr_type.inet_addr_type) : Standard__string.string
 
 predicate image__2__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (value : Gnat__sockets__inet_addr_type.inet_addr_type) 

end

(* Module for defining the constant "value" defined at g-socket.ads:522, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__image__3__value
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function value #"g-socket.ads" 522 0 0# "model_projected" "model_trace:2978" 
   : Gnat__sockets__sock_addr_type.sock_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 505 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "value" defined at g-socket.ads:522, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__image__3__value___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "image__3" defined at g-socket.ads:522, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__image__3
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__sock_addr_type

 function image__3 #"g-socket.ads" 522 0 0# 
   (value : Gnat__sockets__sock_addr_type.sock_addr_type) : Standard__string.string
 
 predicate image__3__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (value : Gnat__sockets__sock_addr_type.sock_addr_type) 

end

(* Module for defining the constant "image" defined at g-socket.ads:525, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__inet_addr__image
 use import "_gnatprove_standard".Main
 use        Standard__string

 function image #"g-socket.ads" 525 0 0# "model_projected" "model_trace:2997" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "image" defined at g-socket.ads:525, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__inet_addr__image___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "inet_addr" defined at g-socket.ads:525, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__inet_addr
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__inet_addr_type

 function inet_addr #"g-socket.ads" 525 0 0# 
   (image : Standard__string.string) : Gnat__sockets__inet_addr_type.inet_addr_type
 
 predicate inet_addr__function_guard #"g-socket.ads" 1220 0 0# 
   (result : Gnat__sockets__inet_addr_type.inet_addr_type) (image : Standard__string.string) 

end

(* Module for axiomatizing type "name_index" defined at g-socket.ads:1254, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__name_index
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name_index #"g-socket.ads" 1254 0 0# 
 
 function first #"g-socket.ads" 1254 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1254 0 0# 
   : int =
  64
 
 predicate in_range #"g-socket.ads" 1254 0 0# 
   (x : int)  =
  #"g-socket.ads" 1254 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = name_index, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type name_index__ref #"g-socket.ads" 1254 0 0# =
  { mutable name_index__content "model_trace:" : name_index }
 
 function name_index__ref___projection #"g-socket.ads" 1254 0 0# 
   (a : name_index__ref) : name_index =
  a.name_index__content
 
 meta "model_projection" function name_index__ref___projection
 
 meta "inline : no" function name_index__ref___projection
 
 val name_index__havoc #"g-socket.ads" 1254 0 0# 
   (x : name_index__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "name_index" defined at g-socket.ads:1254, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__name_index__rep
 use        Gnat__sockets__name_index
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__name_index.name_index, 
 predicate in_range = Gnat__sockets__name_index.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T41s" defined at g-socket.ads:1257, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__name_type__T41s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep

 type t41s #"g-socket.ads" 1257 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  #"system.ads" 1 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t41s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer__rep.to_rep, 
 function base_of_rep = Standard__integer__rep.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t41s__ref #"g-socket.ads" 1257 0 0# =
  { mutable t41s__content "model_trace:" : t41s }
 
 function t41s__ref___projection #"g-socket.ads" 1257 0 0# 
   (a : t41s__ref) : t41s =
  a.t41s__content
 
 meta "model_projection" function t41s__ref___projection
 
 meta "inline : no" function t41s__ref___projection
 
 val t41s__havoc #"g-socket.ads" 1257 0 0# 
   (x : t41s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T42s" defined at g-socket.ads:1257, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__name_type__T42s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__character
 use        Array__Int__Standard__character
 use        Standard__integer__rep
 use        Gnat__sockets__name_type__T41s

 type component_type #"g-socket.ads" 1257 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Gnat__sockets__name_type__T41s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t42s #"g-socket.ads" 1257 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t42s__ref #"g-socket.ads" 1257 0 0# =
  { mutable t42s__content "model_trace:" : t42s }
 
 function t42s__ref___projection #"g-socket.ads" 1257 0 0# 
   (a : t42s__ref) : t42s =
  a.t42s__content
 
 meta "model_projection" function t42s__ref___projection
 
 meta "inline : no" function t42s__ref___projection
 
 val t42s__havoc #"g-socket.ads" 1257 0 0# 
   (x : t42s__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "name_type" defined at g-socket.ads:1256, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__name_type__rep
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__name_index
 use        Gnat__sockets__name_index__rep
 use        Gnat__sockets__name_type__T42s

 type __split_discrs #"g-socket.ads" 1257 0 0# =
  { rec__gnat__sockets__name_type__length "model_trace:.6242" : Gnat__sockets__name_index.name_index }
 
 function __split_discrs_4__projection #"g-socket.ads" 1254 0 0# 
   (a : __split_discrs) : Gnat__sockets__name_index.name_index =
  a.rec__gnat__sockets__name_type__length
 
 meta "model_projection" function __split_discrs_4__projection
 
 meta "inline : no" function __split_discrs_4__projection
 
 type __split_discrs__ref #"g-socket.ads" 1256 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_4__projection #"g-socket.ads" 1256 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_4__projection
 
 meta "inline : no" function __split_discrs__ref_4__projection
 
 val __split_discrs__havoc #"g-socket.ads" 1256 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 1256 0 0# =
  { rec__gnat__sockets__name_type__name "model_trace:.6255" : Gnat__sockets__name_type__T42s.t42s }
 
 function __split_fields_Name__projection #"g-socket.ads" 1257 0 0# "model_trace:.6255" 
   (a : __split_fields) : Gnat__sockets__name_type__T42s.t42s =
  a.rec__gnat__sockets__name_type__name
 
 meta "model_projection" function __split_fields_Name__projection
 
 meta "inline : no" function __split_fields_Name__projection
 
 type __split_fields__ref #"g-socket.ads" 1256 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_6__projection #"g-socket.ads" 1256 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_6__projection
 
 meta "inline : no" function __split_fields__ref_6__projection
 
 val __split_fields__havoc #"g-socket.ads" 1256 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 1256 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields; attr__constrained "model_trace:" : bool }
 
 function __rep_13__projection #"g-socket.ads" 1256 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_13__projection
 
 meta "inline : no" function __rep_13__projection
 
 function __rep_14__projection #"g-socket.ads" 1256 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_14__projection
 
 meta "inline : no" function __rep_14__projection
 
 function __rep_15__projection #"g-socket.ads" 1256 0 0# 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_15__projection
 
 meta "inline : no" function __rep_15__projection
 
 function to_base #"g-socket.ads" 1256 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 1256 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__name_type__length_ #"g-socket.ads" 1256 0 0# 
   (a : __rep) : Gnat__sockets__name_index.name_index
  requires { #"g-socket.ads" 1254 0 0# true }
  ensures { #"g-socket.ads" 1254 0 0# (result = a.__split_discrs.rec__gnat__sockets__name_type__length) }
 
 predicate gnat__sockets__name_type__name__pred #"g-socket.ads" 1256 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1256 0 0# true
 
 val rec__gnat__sockets__name_type__name_ #"g-socket.ads" 1256 0 0# 
   (a : __rep) : Gnat__sockets__name_type__T42s.t42s
  requires { #"g-socket.ads" 1257 0 0# (gnat__sockets__name_type__name__pred a) }
  ensures { #"g-socket.ads" 1257 0 0# (result = a.__split_fields.rec__gnat__sockets__name_type__name) }
 
 function bool_eq #"g-socket.ads" 1256 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((Gnat__sockets__name_index__rep.to_rep a.__split_discrs.rec__gnat__sockets__name_type__length) = (Gnat__sockets__name_index__rep.to_rep b.__split_discrs.rec__gnat__sockets__name_type__length)) /\ ( (gnat__sockets__name_type__name__pred a) -> ((Gnat__sockets__name_type__T42s.bool_eq a.__split_fields.rec__gnat__sockets__name_type__name b.__split_fields.rec__gnat__sockets__name_type__name) = True) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 1256 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "name_type" defined at g-socket.ads:1256, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__name_type
 use export Gnat__sockets__name_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type name_type #"g-socket.ads" 1256 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 1256 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1256 0 0# 
   (a : name_type) : int
 
 function value__alignment #"g-socket.ads" 1256 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1256 0 0# 
   (a : name_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1256 0 0#  : name_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1256 0 0#  : name_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__name_type__length__first__bit #"g-socket.ads" 1256 0 0# 
   : int
 
 function gnat__sockets__name_type__length__last__bit #"g-socket.ads" 1256 0 0# 
   : int
 
 function gnat__sockets__name_type__length__position #"g-socket.ads" 1256 0 0# 
   : int
 
 axiom gnat__sockets__name_type__length__first__bit_axiom :
  ((gnat__sockets__name_type__length__first__bit ) >= 0)
 
 axiom gnat__sockets__name_type__length__last__bit_axiom :
  ((gnat__sockets__name_type__length__last__bit ) > (gnat__sockets__name_type__length__first__bit ))
 
 axiom gnat__sockets__name_type__length__position_axiom :
  ((gnat__sockets__name_type__length__position ) >= 0)
 
 function gnat__sockets__name_type__name__first__bit #"g-socket.ads" 1256 0 0# 
   : int
 
 function gnat__sockets__name_type__name__last__bit #"g-socket.ads" 1256 0 0# 
   : int
 
 function gnat__sockets__name_type__name__position #"g-socket.ads" 1256 0 0# 
   : int
 
 axiom gnat__sockets__name_type__name__first__bit_axiom :
  ((gnat__sockets__name_type__name__first__bit ) >= 0)
 
 axiom gnat__sockets__name_type__name__last__bit_axiom :
  ((gnat__sockets__name_type__name__last__bit ) > (gnat__sockets__name_type__name__first__bit ))
 
 axiom gnat__sockets__name_type__name__position_axiom :
  ((gnat__sockets__name_type__name__position ) >= 0)
 
 function dummy #"g-socket.ads" 1257 0 0# 
   : name_type
 
 type name_type__ref #"g-socket.ads" 1256 0 0# =
  { mutable name_type__content "model_trace:" : name_type }
 
 function name_type__ref___projection #"g-socket.ads" 1256 0 0# 
   (a : name_type__ref) : name_type =
  a.name_type__content
 
 meta "model_projection" function name_type__ref___projection
 
 meta "inline : no" function name_type__ref___projection
 
 val name_type__havoc #"g-socket.ads" 1256 0 0# 
   (x : name_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "name_array" defined at g-socket.ads:1261, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Gnat__sockets__name_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__name_type

 function index_I1_one #"g-socket.ads" 1256 0 0# 
   : int =
  1
 
 type component_type #"g-socket.ads" 1256 0 0# =
  Gnat__sockets__name_type.name_type
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"g-socket.ads" 1256 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_169 #"g-socket.ads" 1256 0 0#  : int.
   (if (( (a__first <= temp___idx_169) /\ (temp___idx_169 <= a__last) )) then (
    ((Gnat__sockets__name_type.bool_eq (get a temp___idx_169) (get b ((b__first - a__first) + temp___idx_169))) = True)) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"g-socket.ads" 1256 0 0#  b #"g-socket.ads" 1256 0 0#  : map.
  (forall a__first #"g-socket.ads" 1256 0 0#  a__last #"g-socket.ads" 1256 0 0#  b__first #"g-socket.ads" 1256 0 0#  b__last #"g-socket.ads" 1256 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_169 #"g-socket.ads" 1256 0 0#  : int.
    (if (( (a__first <= temp___idx_169) /\ (temp___idx_169 <= a__last) )) then (
     ((Gnat__sockets__name_type.bool_eq (get a temp___idx_169) (get b ((b__first - a__first) + temp___idx_169))) = True)) else true)) ) )))

end

(* Module for axiomatizing type "name_array" defined at g-socket.ads:1261, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__name_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        Standard__integer__rep
 use        Gnat__sockets__name_type
 use        Array__Int__Gnat__sockets__name_type

 type component_type #"g-socket.ads" 1256 0 0# =
  Gnat__sockets__name_type.name_type
 
 function index_1_id #"g-socket.ads" 1256 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Gnat__sockets__name_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__name_type.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type name_array #"g-socket.ads" 1261 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type name_array__ref #"g-socket.ads" 1261 0 0# =
  { mutable name_array__content "model_trace:" : name_array }
 
 function name_array__ref___projection #"g-socket.ads" 1261 0 0# 
   (a : name_array__ref) : name_array =
  a.name_array__content
 
 meta "model_projection" function name_array__ref___projection
 
 meta "inline : no" function name_array__ref___projection
 
 val name_array__havoc #"g-socket.ads" 1261 0 0# 
   (x : name_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T47s" defined at g-socket.ads:1266, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__host_entry_type__T47s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep

 type t47s #"g-socket.ads" 1266 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  #"system.ads" 1 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t47s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer__rep.to_rep, 
 function base_of_rep = Standard__integer__rep.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t47s__ref #"g-socket.ads" 1266 0 0# =
  { mutable t47s__content "model_trace:" : t47s }
 
 function t47s__ref___projection #"g-socket.ads" 1266 0 0# 
   (a : t47s__ref) : t47s =
  a.t47s__content
 
 meta "model_projection" function t47s__ref___projection
 
 meta "inline : no" function t47s__ref___projection
 
 val t47s__havoc #"g-socket.ads" 1266 0 0# 
   (x : t47s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T48s" defined at g-socket.ads:1266, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__host_entry_type__T48s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep
 use        Gnat__sockets__name_type
 use        Array__Int__Gnat__sockets__name_type
 use        Gnat__sockets__host_entry_type__T47s

 type component_type #"g-socket.ads" 1266 0 0# =
  Gnat__sockets__name_type.name_type
 
 function index_1_id #"g-socket.ads" 1256 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Gnat__sockets__name_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__name_type.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Gnat__sockets__host_entry_type__T47s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t48s #"g-socket.ads" 1266 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t48s__ref #"g-socket.ads" 1266 0 0# =
  { mutable t48s__content "model_trace:" : t48s }
 
 function t48s__ref___projection #"g-socket.ads" 1266 0 0# 
   (a : t48s__ref) : t48s =
  a.t48s__content
 
 meta "model_projection" function t48s__ref___projection
 
 meta "inline : no" function t48s__ref___projection
 
 val t48s__havoc #"g-socket.ads" 1266 0 0# 
   (x : t48s__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "inet_addr_array" defined at g-socket.ads:1262, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Gnat__sockets__inet_addr_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_type

 function index_I1_one #"g-socket.ads" 1266 0 0# 
   : int =
  1
 
 type component_type #"g-socket.ads" 1266 0 0# =
  Gnat__sockets__inet_addr_type.inet_addr_type
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"g-socket.ads" 1220 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_170 #"g-socket.ads" 1220 0 0#  : int.
   (if (( (a__first <= temp___idx_170) /\ (temp___idx_170 <= a__last) )) then (
    ((Gnat__sockets__inet_addr_type.bool_eq (get a temp___idx_170) (get b ((b__first - a__first) + temp___idx_170))) = True)) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"g-socket.ads" 1220 0 0#  b #"g-socket.ads" 1220 0 0#  : map.
  (forall a__first #"g-socket.ads" 1220 0 0#  a__last #"g-socket.ads" 1220 0 0#  b__first #"g-socket.ads" 1220 0 0#  b__last #"g-socket.ads" 1220 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_170 #"g-socket.ads" 1220 0 0#  : int.
    (if (( (a__first <= temp___idx_170) /\ (temp___idx_170 <= a__last) )) then (
     ((Gnat__sockets__inet_addr_type.bool_eq (get a temp___idx_170) (get b ((b__first - a__first) + temp___idx_170))) = True)) else true)) ) )))

end

(* Module for axiomatizing type "inet_addr_array" defined at g-socket.ads:1262, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__inet_addr_array
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        Standard__integer__rep
 use        Gnat__sockets__inet_addr_type
 use        Array__Int__Gnat__sockets__inet_addr_type

 type component_type #"g-socket.ads" 1220 0 0# =
  Gnat__sockets__inet_addr_type.inet_addr_type
 
 function index_1_id #"g-socket.ads" 1220 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_type.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type inet_addr_array #"g-socket.ads" 1262 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type inet_addr_array__ref #"g-socket.ads" 1262 0 0# =
  { mutable inet_addr_array__content "model_trace:" : inet_addr_array }
 
 function inet_addr_array__ref___projection #"g-socket.ads" 1262 0 0# 
   (a : inet_addr_array__ref) : inet_addr_array =
  a.inet_addr_array__content
 
 meta "model_projection" function inet_addr_array__ref___projection
 
 meta "inline : no" function inet_addr_array__ref___projection
 
 val inet_addr_array__havoc #"g-socket.ads" 1262 0 0# 
   (x : inet_addr_array__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T49s" defined at g-socket.ads:1267, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__host_entry_type__T49s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep

 type t49s #"g-socket.ads" 1267 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  #"system.ads" 1 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t49s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer__rep.to_rep, 
 function base_of_rep = Standard__integer__rep.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t49s__ref #"g-socket.ads" 1267 0 0# =
  { mutable t49s__content "model_trace:" : t49s }
 
 function t49s__ref___projection #"g-socket.ads" 1267 0 0# 
   (a : t49s__ref) : t49s =
  a.t49s__content
 
 meta "model_projection" function t49s__ref___projection
 
 meta "inline : no" function t49s__ref___projection
 
 val t49s__havoc #"g-socket.ads" 1267 0 0# 
   (x : t49s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T50s" defined at g-socket.ads:1267, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__host_entry_type__T50s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep
 use        Gnat__sockets__inet_addr_type
 use        Array__Int__Gnat__sockets__inet_addr_type
 use        Gnat__sockets__host_entry_type__T49s

 type component_type #"g-socket.ads" 1267 0 0# =
  Gnat__sockets__inet_addr_type.inet_addr_type
 
 function index_1_id #"g-socket.ads" 1220 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_type.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Gnat__sockets__host_entry_type__T49s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t50s #"g-socket.ads" 1267 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t50s__ref #"g-socket.ads" 1267 0 0# =
  { mutable t50s__content "model_trace:" : t50s }
 
 function t50s__ref___projection #"g-socket.ads" 1267 0 0# 
   (a : t50s__ref) : t50s =
  a.t50s__content
 
 meta "model_projection" function t50s__ref___projection
 
 meta "inline : no" function t50s__ref___projection
 
 val t50s__havoc #"g-socket.ads" 1267 0 0# 
   (x : t50s__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "host_entry_type" defined at g-socket.ads:1264, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__host_entry_type__rep
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__natural__rep
 use        Gnat__sockets__name_type
 use        Gnat__sockets__host_entry_type__T48s
 use        Gnat__sockets__host_entry_type__T50s

 type __split_discrs #"g-socket.ads" 1267 0 0# =
  { rec__gnat__sockets__host_entry_type__aliases_length "model_trace:.3017" : Standard__natural.natural; rec__gnat__sockets__host_entry_type__addresses_length "model_trace:.3024" : Standard__natural.natural }
 
 function __split_discrs_5__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__natural.natural =
  a.rec__gnat__sockets__host_entry_type__aliases_length
 
 meta "model_projection" function __split_discrs_5__projection
 
 meta "inline : no" function __split_discrs_5__projection
 
 function __split_discrs_6__projection #"g-socket.ads" 1264 0 0# 
   (a : __split_discrs) : Standard__natural.natural =
  a.rec__gnat__sockets__host_entry_type__addresses_length
 
 meta "model_projection" function __split_discrs_6__projection
 
 meta "inline : no" function __split_discrs_6__projection
 
 type __split_discrs__ref #"g-socket.ads" 1264 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_5__projection #"g-socket.ads" 1264 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_5__projection
 
 meta "inline : no" function __split_discrs__ref_5__projection
 
 val __split_discrs__havoc #"g-socket.ads" 1264 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 1264 0 0# =
  { rec__gnat__sockets__host_entry_type__official "model_trace:.6325" : Gnat__sockets__name_type.name_type; rec__gnat__sockets__host_entry_type__aliases "model_trace:.6335" : Gnat__sockets__host_entry_type__T48s.t48s; rec__gnat__sockets__host_entry_type__addresses "model_trace:.6350" : Gnat__sockets__host_entry_type__T50s.t50s }
 
 function __split_fields_Official__projection #"g-socket.ads" 1267 0 0# "model_trace:.6325" 
   (a : __split_fields) : Gnat__sockets__name_type.name_type =
  a.rec__gnat__sockets__host_entry_type__official
 
 meta "model_projection" function __split_fields_Official__projection
 
 meta "inline : no" function __split_fields_Official__projection
 
 function __split_fields_Aliases__projection #"g-socket.ads" 1264 0 0# "model_trace:.6335" 
   (a : __split_fields) : Gnat__sockets__host_entry_type__T48s.t48s =
  a.rec__gnat__sockets__host_entry_type__aliases
 
 meta "model_projection" function __split_fields_Aliases__projection
 
 meta "inline : no" function __split_fields_Aliases__projection
 
 function __split_fields_Addresses__projection #"g-socket.ads" 1264 0 0# "model_trace:.6350" 
   (a : __split_fields) : Gnat__sockets__host_entry_type__T50s.t50s =
  a.rec__gnat__sockets__host_entry_type__addresses
 
 meta "model_projection" function __split_fields_Addresses__projection
 
 meta "inline : no" function __split_fields_Addresses__projection
 
 type __split_fields__ref #"g-socket.ads" 1264 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_7__projection #"g-socket.ads" 1264 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_7__projection
 
 meta "inline : no" function __split_fields__ref_7__projection
 
 val __split_fields__havoc #"g-socket.ads" 1264 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 1264 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function __rep_16__projection #"g-socket.ads" 1264 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_16__projection
 
 meta "inline : no" function __rep_16__projection
 
 function __rep_17__projection #"g-socket.ads" 1264 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_17__projection
 
 meta "inline : no" function __rep_17__projection
 
 function to_base #"g-socket.ads" 1264 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 1264 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__host_entry_type__aliases_length_ #"g-socket.ads" 1264 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (result = a.__split_discrs.rec__gnat__sockets__host_entry_type__aliases_length) }
 
 val rec__gnat__sockets__host_entry_type__addresses_length_ #"g-socket.ads" 1264 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (result = a.__split_discrs.rec__gnat__sockets__host_entry_type__addresses_length) }
 
 predicate gnat__sockets__host_entry_type__official__pred #"g-socket.ads" 1264 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1264 0 0# true
 
 val rec__gnat__sockets__host_entry_type__official_ #"g-socket.ads" 1264 0 0# 
   (a : __rep) : Gnat__sockets__name_type.name_type
  requires { #"g-socket.ads" 1256 0 0# (gnat__sockets__host_entry_type__official__pred a) }
  ensures { #"g-socket.ads" 1256 0 0# (result = a.__split_fields.rec__gnat__sockets__host_entry_type__official) }
 
 predicate gnat__sockets__host_entry_type__aliases__pred #"g-socket.ads" 1264 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1264 0 0# true
 
 val rec__gnat__sockets__host_entry_type__aliases_ #"g-socket.ads" 1264 0 0# 
   (a : __rep) : Gnat__sockets__host_entry_type__T48s.t48s
  requires { #"g-socket.ads" 1266 0 0# (gnat__sockets__host_entry_type__aliases__pred a) }
  ensures { #"g-socket.ads" 1266 0 0# (result = a.__split_fields.rec__gnat__sockets__host_entry_type__aliases) }
 
 predicate gnat__sockets__host_entry_type__addresses__pred #"g-socket.ads" 1264 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1264 0 0# true
 
 val rec__gnat__sockets__host_entry_type__addresses_ #"g-socket.ads" 1264 0 0# 
   (a : __rep) : Gnat__sockets__host_entry_type__T50s.t50s
  requires { #"g-socket.ads" 1267 0 0# (gnat__sockets__host_entry_type__addresses__pred a) }
  ensures { #"g-socket.ads" 1267 0 0# (result = a.__split_fields.rec__gnat__sockets__host_entry_type__addresses) }
 
 function bool_eq #"g-socket.ads" 1264 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( ( ((Standard__natural__rep.to_rep a.__split_discrs.rec__gnat__sockets__host_entry_type__aliases_length) = (Standard__natural__rep.to_rep b.__split_discrs.rec__gnat__sockets__host_entry_type__aliases_length)) /\ ((Standard__natural__rep.to_rep a.__split_discrs.rec__gnat__sockets__host_entry_type__addresses_length) = (Standard__natural__rep.to_rep b.__split_discrs.rec__gnat__sockets__host_entry_type__addresses_length)) ) /\ ( (gnat__sockets__host_entry_type__official__pred a) -> ((Gnat__sockets__name_type.bool_eq a.__split_fields.rec__gnat__sockets__host_entry_type__official b.__split_fields.rec__gnat__sockets__host_entry_type__official) = True) ) ) /\ ( (gnat__sockets__host_entry_type__aliases__pred a) -> ((Gnat__sockets__host_entry_type__T48s.bool_eq a.__split_fields.rec__gnat__sockets__host_entry_type__aliases b.__split_fields.rec__gnat__sockets__host_entry_type__aliases) = True) ) ) /\ ( (gnat__sockets__host_entry_type__addresses__pred a) -> ((Gnat__sockets__host_entry_type__T50s.bool_eq a.__split_fields.rec__gnat__sockets__host_entry_type__addresses b.__split_fields.rec__gnat__sockets__host_entry_type__addresses) = True) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 1264 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "host_entry_type" defined at g-socket.ads:1264, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__host_entry_type
 use export Gnat__sockets__host_entry_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type host_entry_type #"g-socket.ads" 1264 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 1264 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1264 0 0# 
   (a : host_entry_type) : int
 
 function value__alignment #"g-socket.ads" 1264 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1264 0 0# 
   (a : host_entry_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1264 0 0#  : host_entry_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1264 0 0#  : host_entry_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__host_entry_type__aliases_length__first__bit #"g-socket.ads" 1264 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__aliases_length__last__bit #"g-socket.ads" 1264 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__aliases_length__position #"g-socket.ads" 1264 0 0# 
   : int
 
 axiom gnat__sockets__host_entry_type__aliases_length__first__bit_axiom :
  ((gnat__sockets__host_entry_type__aliases_length__first__bit ) >= 0)
 
 axiom gnat__sockets__host_entry_type__aliases_length__last__bit_axiom :
  ((gnat__sockets__host_entry_type__aliases_length__last__bit ) > (gnat__sockets__host_entry_type__aliases_length__first__bit ))
 
 axiom gnat__sockets__host_entry_type__aliases_length__position_axiom :
  ((gnat__sockets__host_entry_type__aliases_length__position ) >= 0)
 
 function gnat__sockets__host_entry_type__addresses_length__first__bit #"g-socket.ads" 534 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__addresses_length__last__bit #"g-socket.ads" 534 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__addresses_length__position #"g-socket.ads" 534 0 0# 
   : int
 
 axiom gnat__sockets__host_entry_type__addresses_length__first__bit_axiom :
  ((gnat__sockets__host_entry_type__addresses_length__first__bit ) >= 0)
 
 axiom gnat__sockets__host_entry_type__addresses_length__last__bit_axiom :
  ((gnat__sockets__host_entry_type__addresses_length__last__bit ) > (gnat__sockets__host_entry_type__addresses_length__first__bit ))
 
 axiom gnat__sockets__host_entry_type__addresses_length__position_axiom :
  ((gnat__sockets__host_entry_type__addresses_length__position ) >= 0)
 
 function gnat__sockets__host_entry_type__official__first__bit #"g-socket.ads" 534 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__official__last__bit #"g-socket.ads" 534 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__official__position #"g-socket.ads" 534 0 0# 
   : int
 
 axiom gnat__sockets__host_entry_type__official__first__bit_axiom :
  ((gnat__sockets__host_entry_type__official__first__bit ) >= 0)
 
 axiom gnat__sockets__host_entry_type__official__last__bit_axiom :
  ((gnat__sockets__host_entry_type__official__last__bit ) > (gnat__sockets__host_entry_type__official__first__bit ))
 
 axiom gnat__sockets__host_entry_type__official__position_axiom :
  ((gnat__sockets__host_entry_type__official__position ) >= 0)
 
 function gnat__sockets__host_entry_type__aliases__first__bit #"g-socket.ads" 1265 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__aliases__last__bit #"g-socket.ads" 1265 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__aliases__position #"g-socket.ads" 1265 0 0# 
   : int
 
 axiom gnat__sockets__host_entry_type__aliases__first__bit_axiom :
  ((gnat__sockets__host_entry_type__aliases__first__bit ) >= 0)
 
 axiom gnat__sockets__host_entry_type__aliases__last__bit_axiom :
  ((gnat__sockets__host_entry_type__aliases__last__bit ) > (gnat__sockets__host_entry_type__aliases__first__bit ))
 
 axiom gnat__sockets__host_entry_type__aliases__position_axiom :
  ((gnat__sockets__host_entry_type__aliases__position ) >= 0)
 
 function gnat__sockets__host_entry_type__addresses__first__bit #"g-socket.ads" 1266 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__addresses__last__bit #"g-socket.ads" 1266 0 0# 
   : int
 
 function gnat__sockets__host_entry_type__addresses__position #"g-socket.ads" 1266 0 0# 
   : int
 
 axiom gnat__sockets__host_entry_type__addresses__first__bit_axiom :
  ((gnat__sockets__host_entry_type__addresses__first__bit ) >= 0)
 
 axiom gnat__sockets__host_entry_type__addresses__last__bit_axiom :
  ((gnat__sockets__host_entry_type__addresses__last__bit ) > (gnat__sockets__host_entry_type__addresses__first__bit ))
 
 axiom gnat__sockets__host_entry_type__addresses__position_axiom :
  ((gnat__sockets__host_entry_type__addresses__position ) >= 0)
 
 function dummy #"g-socket.ads" 1267 0 0# 
   : host_entry_type
 
 type host_entry_type__ref #"g-socket.ads" 1264 0 0# =
  { mutable host_entry_type__content "model_trace:" : host_entry_type }
 
 function host_entry_type__ref___projection #"g-socket.ads" 1264 0 0# 
   (a : host_entry_type__ref) : host_entry_type =
  a.host_entry_type__content
 
 meta "model_projection" function host_entry_type__ref___projection
 
 meta "inline : no" function host_entry_type__ref___projection
 
 val host_entry_type__havoc #"g-socket.ads" 1264 0 0# 
   (x : host_entry_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "e" defined at g-socket.ads:536, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__official_name__e
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__host_entry_type

 function e #"g-socket.ads" 536 0 0# "model_projected" "model_trace:3043" 
   : Gnat__sockets__host_entry_type.host_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1264 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at g-socket.ads:536, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__official_name__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "official_name" defined at g-socket.ads:536, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__official_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__host_entry_type

 function official_name #"g-socket.ads" 536 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) : Standard__string.string
 
 predicate official_name__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (e : Gnat__sockets__host_entry_type.host_entry_type) 

end

(* Module for defining the constant "e" defined at g-socket.ads:539, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__aliases_length__e
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__host_entry_type

 function e #"g-socket.ads" 539 0 0# "model_projected" "model_trace:3062" 
   : Gnat__sockets__host_entry_type.host_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1264 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at g-socket.ads:539, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__aliases_length__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "aliases_length" defined at g-socket.ads:539, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__aliases_length
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__host_entry_type

 function aliases_length #"g-socket.ads" 539 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) : int
 
 predicate aliases_length__function_guard #"system.ads" 1 0 0# 
   (result : int) (e : Gnat__sockets__host_entry_type.host_entry_type) 

end

(* Module for defining the constant "e" defined at g-socket.ads:542, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__addresses_length__e
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__host_entry_type

 function e #"g-socket.ads" 542 0 0# "model_projected" "model_trace:3081" 
   : Gnat__sockets__host_entry_type.host_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1264 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at g-socket.ads:542, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__addresses_length__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addresses_length" defined at g-socket.ads:542, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__addresses_length
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__host_entry_type

 function addresses_length #"g-socket.ads" 542 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) : int
 
 predicate addresses_length__function_guard #"system.ads" 1 0 0# 
   (result : int) (e : Gnat__sockets__host_entry_type.host_entry_type) 

end

(* Module for defining the constant "e" defined at g-socket.ads:546, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__aliases__e
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__host_entry_type

 function e #"g-socket.ads" 546 0 0# "model_projected" "model_trace:3100" 
   : Gnat__sockets__host_entry_type.host_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1264 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at g-socket.ads:546, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__aliases__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at g-socket.ads:547, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__aliases__n
 use import "_gnatprove_standard".Main

 function n #"g-socket.ads" 547 0 0# "model" "model_trace:3109" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at g-socket.ads:547, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__aliases__n___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "aliases" defined at g-socket.ads:545, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__aliases
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__host_entry_type

 function aliases #"g-socket.ads" 545 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) (n : int) : Standard__string.string
 
 predicate aliases__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (e : Gnat__sockets__host_entry_type.host_entry_type) (n : int) 

end

(* Module for defining the constant "e" defined at g-socket.ads:551, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__addresses__e
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__host_entry_type

 function e #"g-socket.ads" 551 0 0# "model_projected" "model_trace:3129" 
   : Gnat__sockets__host_entry_type.host_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1264 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e" defined at g-socket.ads:551, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__addresses__e___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at g-socket.ads:552, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__addresses__n
 use import "_gnatprove_standard".Main

 function n #"g-socket.ads" 552 0 0# "model" "model_trace:3138" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at g-socket.ads:552, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__addresses__n___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "addresses" defined at g-socket.ads:550, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__addresses
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__host_entry_type

 function addresses #"g-socket.ads" 550 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) (n : int) : Gnat__sockets__inet_addr_type.inet_addr_type
 
 predicate addresses__function_guard #"g-socket.ads" 1220 0 0# 
   (result : Gnat__sockets__inet_addr_type.inet_addr_type) (e : Gnat__sockets__host_entry_type.host_entry_type) (n : int) 

end

(* Module for defining the constant "address" defined at g-socket.ads:561, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_host_by_address__address
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type

 function address #"g-socket.ads" 561 0 0# "model_projected" "model_trace:3168" 
   : Gnat__sockets__inet_addr_type.inet_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1220 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "address" defined at g-socket.ads:561, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_host_by_address__address___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "family" defined at g-socket.ads:562, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_host_by_address__family
 use import "_gnatprove_standard".Main

 function family #"g-socket.ads" 562 0 0# "model" "model_trace:3177" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 463 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "family" defined at g-socket.ads:562, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_host_by_address__family___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_host_by_address" defined at g-socket.ads:560, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get_host_by_address
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__host_entry_type

 function get_host_by_address #"g-socket.ads" 560 0 0# 
   (address : Gnat__sockets__inet_addr_type.inet_addr_type) (family : int) : Gnat__sockets__host_entry_type.host_entry_type
 
 predicate get_host_by_address__function_guard #"g-socket.ads" 1264 0 0# 
   (result : Gnat__sockets__host_entry_type.host_entry_type) (address : Gnat__sockets__inet_addr_type.inet_addr_type) (family : int) 

end

(* Module for defining the constant "name" defined at g-socket.ads:568, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_host_by_name__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"g-socket.ads" 568 0 0# "model_projected" "model_trace:3197" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at g-socket.ads:568, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_host_by_name__name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_host_by_name" defined at g-socket.ads:567, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get_host_by_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__host_entry_type

 function get_host_by_name #"g-socket.ads" 567 0 0# 
   (name : Standard__string.string) : Gnat__sockets__host_entry_type.host_entry_type
 
 predicate get_host_by_name__function_guard #"g-socket.ads" 1264 0 0# 
   (result : Gnat__sockets__host_entry_type.host_entry_type) (name : Standard__string.string) 

end

(* Module for possibly declaring a logic function for "host_name" defined at g-socket.ads:573, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__host_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function host_name #"g-socket.ads" 573 0 0# 
   (__void_param : unit) : Standard__string.string
 
 predicate host_name__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (__void_param : unit) 

end

(* Module for axiomatizing type "T51s" defined at g-socket.ads:1274, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__service_entry_type__T51s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep

 type t51s #"g-socket.ads" 1274 0 0# =
  Standard__integer.integer
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int
 
 predicate dynamic_property #"system.ads" 1 0 0# 
   (first_int : int) (last_int : int) (x : int)  =
  #"system.ads" 1 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Dynamic_Discrete with
 type t = t51s, 
 type rep_type = int, 
 function base_to_rep = Standard__integer__rep.to_rep, 
 function base_of_rep = Standard__integer__rep.of_rep, 
 predicate dynamic_property = dynamic_property
 
 type t51s__ref #"g-socket.ads" 1274 0 0# =
  { mutable t51s__content "model_trace:" : t51s }
 
 function t51s__ref___projection #"g-socket.ads" 1274 0 0# 
   (a : t51s__ref) : t51s =
  a.t51s__content
 
 meta "model_projection" function t51s__ref___projection
 
 meta "inline : no" function t51s__ref___projection
 
 val t51s__havoc #"g-socket.ads" 1274 0 0# 
   (x : t51s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T52s" defined at g-socket.ads:1274, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__service_entry_type__T52s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep
 use        Gnat__sockets__name_type
 use        Array__Int__Gnat__sockets__name_type
 use        Gnat__sockets__service_entry_type__T51s

 type component_type #"g-socket.ads" 1274 0 0# =
  Gnat__sockets__name_type.name_type
 
 function index_1_id #"g-socket.ads" 1256 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Gnat__sockets__name_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__name_type.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Gnat__sockets__service_entry_type__T51s.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type t52s #"g-socket.ads" 1274 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type t52s__ref #"g-socket.ads" 1274 0 0# =
  { mutable t52s__content "model_trace:" : t52s }
 
 function t52s__ref___projection #"g-socket.ads" 1274 0 0# 
   (a : t52s__ref) : t52s =
  a.t52s__content
 
 meta "model_projection" function t52s__ref___projection
 
 meta "inline : no" function t52s__ref___projection
 
 val t52s__havoc #"g-socket.ads" 1274 0 0# 
   (x : t52s__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "service_entry_type" defined at g-socket.ads:1270, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__service_entry_type__rep
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__natural__rep
 use        Gnat__sockets__port_type
 use        Gnat__sockets__port_type__rep
 use        Gnat__sockets__name_type
 use        Gnat__sockets__service_entry_type__T52s

 type __split_discrs #"g-socket.ads" 1274 0 0# =
  { rec__gnat__sockets__service_entry_type__aliases_length "model_trace:.3227" : Standard__natural.natural }
 
 function __split_discrs_7__projection #"system.ads" 1 0 0# 
   (a : __split_discrs) : Standard__natural.natural =
  a.rec__gnat__sockets__service_entry_type__aliases_length
 
 meta "model_projection" function __split_discrs_7__projection
 
 meta "inline : no" function __split_discrs_7__projection
 
 type __split_discrs__ref #"g-socket.ads" 1270 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_6__projection #"g-socket.ads" 1270 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_6__projection
 
 meta "inline : no" function __split_discrs__ref_6__projection
 
 val __split_discrs__havoc #"g-socket.ads" 1270 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 1270 0 0# =
  { rec__gnat__sockets__service_entry_type__official "model_trace:.6387" : Gnat__sockets__name_type.name_type; rec__gnat__sockets__service_entry_type__port "model_trace:.6397" : Gnat__sockets__port_type.port_type; rec__gnat__sockets__service_entry_type__protocol "model_trace:.6407" : Gnat__sockets__name_type.name_type; rec__gnat__sockets__service_entry_type__aliases "model_trace:.6417" : Gnat__sockets__service_entry_type__T52s.t52s }
 
 function __split_fields_Official2__projection #"g-socket.ads" 1274 0 0# "model_trace:.6387" 
   (a : __split_fields) : Gnat__sockets__name_type.name_type =
  a.rec__gnat__sockets__service_entry_type__official
 
 meta "model_projection" function __split_fields_Official2__projection
 
 meta "inline : no" function __split_fields_Official2__projection
 
 function __split_fields_Port2__projection #"g-socket.ads" 1270 0 0# "model_trace:.6397" 
   (a : __split_fields) : Gnat__sockets__port_type.port_type =
  a.rec__gnat__sockets__service_entry_type__port
 
 meta "model_projection" function __split_fields_Port2__projection
 
 meta "inline : no" function __split_fields_Port2__projection
 
 function __split_fields_Protocol__projection #"g-socket.ads" 1270 0 0# "model_trace:.6407" 
   (a : __split_fields) : Gnat__sockets__name_type.name_type =
  a.rec__gnat__sockets__service_entry_type__protocol
 
 meta "model_projection" function __split_fields_Protocol__projection
 
 meta "inline : no" function __split_fields_Protocol__projection
 
 function __split_fields_Aliases2__projection #"g-socket.ads" 1270 0 0# "model_trace:.6417" 
   (a : __split_fields) : Gnat__sockets__service_entry_type__T52s.t52s =
  a.rec__gnat__sockets__service_entry_type__aliases
 
 meta "model_projection" function __split_fields_Aliases2__projection
 
 meta "inline : no" function __split_fields_Aliases2__projection
 
 type __split_fields__ref #"g-socket.ads" 1270 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_8__projection #"g-socket.ads" 1270 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_8__projection
 
 meta "inline : no" function __split_fields__ref_8__projection
 
 val __split_fields__havoc #"g-socket.ads" 1270 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 1270 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields }
 
 function __rep_18__projection #"g-socket.ads" 1270 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_18__projection
 
 meta "inline : no" function __rep_18__projection
 
 function __rep_19__projection #"g-socket.ads" 1270 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_19__projection
 
 meta "inline : no" function __rep_19__projection
 
 function to_base #"g-socket.ads" 1270 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 1270 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__service_entry_type__aliases_length_ #"g-socket.ads" 1270 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (result = a.__split_discrs.rec__gnat__sockets__service_entry_type__aliases_length) }
 
 predicate gnat__sockets__service_entry_type__official__pred #"g-socket.ads" 1270 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1270 0 0# true
 
 val rec__gnat__sockets__service_entry_type__official_ #"g-socket.ads" 1270 0 0# 
   (a : __rep) : Gnat__sockets__name_type.name_type
  requires { #"g-socket.ads" 1256 0 0# (gnat__sockets__service_entry_type__official__pred a) }
  ensures { #"g-socket.ads" 1256 0 0# (result = a.__split_fields.rec__gnat__sockets__service_entry_type__official) }
 
 predicate gnat__sockets__service_entry_type__port__pred #"g-socket.ads" 1270 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1270 0 0# true
 
 val rec__gnat__sockets__service_entry_type__port_ #"g-socket.ads" 1270 0 0# 
   (a : __rep) : Gnat__sockets__port_type.port_type
  requires { #"g-socket.ads" 479 0 0# (gnat__sockets__service_entry_type__port__pred a) }
  ensures { #"g-socket.ads" 479 0 0# (result = a.__split_fields.rec__gnat__sockets__service_entry_type__port) }
 
 predicate gnat__sockets__service_entry_type__protocol__pred #"g-socket.ads" 1270 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1270 0 0# true
 
 val rec__gnat__sockets__service_entry_type__protocol_ #"g-socket.ads" 1270 0 0# 
   (a : __rep) : Gnat__sockets__name_type.name_type
  requires { #"g-socket.ads" 1256 0 0# (gnat__sockets__service_entry_type__protocol__pred a) }
  ensures { #"g-socket.ads" 1256 0 0# (result = a.__split_fields.rec__gnat__sockets__service_entry_type__protocol) }
 
 predicate gnat__sockets__service_entry_type__aliases__pred #"g-socket.ads" 1270 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1270 0 0# true
 
 val rec__gnat__sockets__service_entry_type__aliases_ #"g-socket.ads" 1270 0 0# 
   (a : __rep) : Gnat__sockets__service_entry_type__T52s.t52s
  requires { #"g-socket.ads" 1274 0 0# (gnat__sockets__service_entry_type__aliases__pred a) }
  ensures { #"g-socket.ads" 1274 0 0# (result = a.__split_fields.rec__gnat__sockets__service_entry_type__aliases) }
 
 function bool_eq #"g-socket.ads" 1270 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( ( ((Standard__natural__rep.to_rep a.__split_discrs.rec__gnat__sockets__service_entry_type__aliases_length) = (Standard__natural__rep.to_rep b.__split_discrs.rec__gnat__sockets__service_entry_type__aliases_length)) /\ ( (gnat__sockets__service_entry_type__official__pred a) -> ((Gnat__sockets__name_type.bool_eq a.__split_fields.rec__gnat__sockets__service_entry_type__official b.__split_fields.rec__gnat__sockets__service_entry_type__official) = True) ) ) /\ ( (gnat__sockets__service_entry_type__port__pred a) -> ((Gnat__sockets__port_type__rep.to_rep a.__split_fields.rec__gnat__sockets__service_entry_type__port) = (Gnat__sockets__port_type__rep.to_rep b.__split_fields.rec__gnat__sockets__service_entry_type__port)) ) ) /\ ( (gnat__sockets__service_entry_type__protocol__pred a) -> ((Gnat__sockets__name_type.bool_eq a.__split_fields.rec__gnat__sockets__service_entry_type__protocol b.__split_fields.rec__gnat__sockets__service_entry_type__protocol) = True) ) ) /\ ( (gnat__sockets__service_entry_type__aliases__pred a) -> ((Gnat__sockets__service_entry_type__T52s.bool_eq a.__split_fields.rec__gnat__sockets__service_entry_type__aliases b.__split_fields.rec__gnat__sockets__service_entry_type__aliases) = True) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 1270 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "service_entry_type" defined at g-socket.ads:1270, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__service_entry_type
 use export Gnat__sockets__service_entry_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type service_entry_type #"g-socket.ads" 1270 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 1270 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1270 0 0# 
   (a : service_entry_type) : int
 
 function value__alignment #"g-socket.ads" 1270 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1270 0 0# 
   (a : service_entry_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1270 0 0#  : service_entry_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1270 0 0#  : service_entry_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__service_entry_type__aliases_length__first__bit #"g-socket.ads" 1270 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__aliases_length__last__bit #"g-socket.ads" 1270 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__aliases_length__position #"g-socket.ads" 1270 0 0# 
   : int
 
 axiom gnat__sockets__service_entry_type__aliases_length__first__bit_axiom :
  ((gnat__sockets__service_entry_type__aliases_length__first__bit ) >= 0)
 
 axiom gnat__sockets__service_entry_type__aliases_length__last__bit_axiom :
  ((gnat__sockets__service_entry_type__aliases_length__last__bit ) > (gnat__sockets__service_entry_type__aliases_length__first__bit ))
 
 axiom gnat__sockets__service_entry_type__aliases_length__position_axiom :
  ((gnat__sockets__service_entry_type__aliases_length__position ) >= 0)
 
 function gnat__sockets__service_entry_type__official__first__bit #"g-socket.ads" 576 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__official__last__bit #"g-socket.ads" 576 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__official__position #"g-socket.ads" 576 0 0# 
   : int
 
 axiom gnat__sockets__service_entry_type__official__first__bit_axiom :
  ((gnat__sockets__service_entry_type__official__first__bit ) >= 0)
 
 axiom gnat__sockets__service_entry_type__official__last__bit_axiom :
  ((gnat__sockets__service_entry_type__official__last__bit ) > (gnat__sockets__service_entry_type__official__first__bit ))
 
 axiom gnat__sockets__service_entry_type__official__position_axiom :
  ((gnat__sockets__service_entry_type__official__position ) >= 0)
 
 function gnat__sockets__service_entry_type__port__first__bit #"g-socket.ads" 1271 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__port__last__bit #"g-socket.ads" 1271 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__port__position #"g-socket.ads" 1271 0 0# 
   : int
 
 axiom gnat__sockets__service_entry_type__port__first__bit_axiom :
  ((gnat__sockets__service_entry_type__port__first__bit ) >= 0)
 
 axiom gnat__sockets__service_entry_type__port__last__bit_axiom :
  ((gnat__sockets__service_entry_type__port__last__bit ) > (gnat__sockets__service_entry_type__port__first__bit ))
 
 axiom gnat__sockets__service_entry_type__port__position_axiom :
  ((gnat__sockets__service_entry_type__port__position ) >= 0)
 
 function gnat__sockets__service_entry_type__protocol__first__bit #"g-socket.ads" 1272 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__protocol__last__bit #"g-socket.ads" 1272 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__protocol__position #"g-socket.ads" 1272 0 0# 
   : int
 
 axiom gnat__sockets__service_entry_type__protocol__first__bit_axiom :
  ((gnat__sockets__service_entry_type__protocol__first__bit ) >= 0)
 
 axiom gnat__sockets__service_entry_type__protocol__last__bit_axiom :
  ((gnat__sockets__service_entry_type__protocol__last__bit ) > (gnat__sockets__service_entry_type__protocol__first__bit ))
 
 axiom gnat__sockets__service_entry_type__protocol__position_axiom :
  ((gnat__sockets__service_entry_type__protocol__position ) >= 0)
 
 function gnat__sockets__service_entry_type__aliases__first__bit #"g-socket.ads" 1273 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__aliases__last__bit #"g-socket.ads" 1273 0 0# 
   : int
 
 function gnat__sockets__service_entry_type__aliases__position #"g-socket.ads" 1273 0 0# 
   : int
 
 axiom gnat__sockets__service_entry_type__aliases__first__bit_axiom :
  ((gnat__sockets__service_entry_type__aliases__first__bit ) >= 0)
 
 axiom gnat__sockets__service_entry_type__aliases__last__bit_axiom :
  ((gnat__sockets__service_entry_type__aliases__last__bit ) > (gnat__sockets__service_entry_type__aliases__first__bit ))
 
 axiom gnat__sockets__service_entry_type__aliases__position_axiom :
  ((gnat__sockets__service_entry_type__aliases__position ) >= 0)
 
 function dummy #"g-socket.ads" 1274 0 0# 
   : service_entry_type
 
 type service_entry_type__ref #"g-socket.ads" 1270 0 0# =
  { mutable service_entry_type__content "model_trace:" : service_entry_type }
 
 function service_entry_type__ref___projection #"g-socket.ads" 1270 0 0# 
   (a : service_entry_type__ref) : service_entry_type =
  a.service_entry_type__content
 
 meta "model_projection" function service_entry_type__ref___projection
 
 meta "inline : no" function service_entry_type__ref___projection
 
 val service_entry_type__havoc #"g-socket.ads" 1270 0 0# 
   (x : service_entry_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "s" defined at g-socket.ads:581, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__official_name__2__s
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__service_entry_type

 function s #"g-socket.ads" 581 0 0# "model_projected" "model_trace:3244" 
   : Gnat__sockets__service_entry_type.service_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1270 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at g-socket.ads:581, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__official_name__2__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "official_name__2" defined at g-socket.ads:581, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__official_name__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__service_entry_type

 function official_name__2 #"g-socket.ads" 581 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : Standard__string.string
 
 predicate official_name__2__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (s : Gnat__sockets__service_entry_type.service_entry_type) 

end

(* Module for defining the constant "s" defined at g-socket.ads:584, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__port_number__s
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__service_entry_type

 function s #"g-socket.ads" 584 0 0# "model_projected" "model_trace:3263" 
   : Gnat__sockets__service_entry_type.service_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1270 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at g-socket.ads:584, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__port_number__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "port_number" defined at g-socket.ads:584, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__port_number
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__service_entry_type

 function port_number #"g-socket.ads" 584 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : int
 
 predicate port_number__function_guard #"g-socket.ads" 479 0 0# 
   (result : int) (s : Gnat__sockets__service_entry_type.service_entry_type) 

end

(* Module for defining the constant "s" defined at g-socket.ads:587, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__protocol_name__s
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__service_entry_type

 function s #"g-socket.ads" 587 0 0# "model_projected" "model_trace:3282" 
   : Gnat__sockets__service_entry_type.service_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1270 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at g-socket.ads:587, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__protocol_name__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "protocol_name" defined at g-socket.ads:587, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__protocol_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__service_entry_type

 function protocol_name #"g-socket.ads" 587 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : Standard__string.string
 
 predicate protocol_name__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (s : Gnat__sockets__service_entry_type.service_entry_type) 

end

(* Module for defining the constant "s" defined at g-socket.ads:590, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__aliases_length__2__s
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__service_entry_type

 function s #"g-socket.ads" 590 0 0# "model_projected" "model_trace:3301" 
   : Gnat__sockets__service_entry_type.service_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1270 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at g-socket.ads:590, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__aliases_length__2__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "aliases_length__2" defined at g-socket.ads:590, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__aliases_length__2
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__service_entry_type

 function aliases_length__2 #"g-socket.ads" 590 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : int
 
 predicate aliases_length__2__function_guard #"system.ads" 1 0 0# 
   (result : int) (s : Gnat__sockets__service_entry_type.service_entry_type) 

end

(* Module for defining the constant "s" defined at g-socket.ads:594, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__aliases__2__s
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__service_entry_type

 function s #"g-socket.ads" 594 0 0# "model_projected" "model_trace:3320" 
   : Gnat__sockets__service_entry_type.service_entry_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1270 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at g-socket.ads:594, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__aliases__2__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at g-socket.ads:595, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__aliases__2__n
 use import "_gnatprove_standard".Main

 function n #"g-socket.ads" 595 0 0# "model" "model_trace:3329" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at g-socket.ads:595, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__aliases__2__n___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "aliases__2" defined at g-socket.ads:593, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__aliases__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__service_entry_type

 function aliases__2 #"g-socket.ads" 593 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) (n : int) : Standard__string.string
 
 predicate aliases__2__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (s : Gnat__sockets__service_entry_type.service_entry_type) (n : int) 

end

(* Module for defining the constant "name" defined at g-socket.ads:599, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_service_by_name__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"g-socket.ads" 599 0 0# "model_projected" "model_trace:3349" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at g-socket.ads:599, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_service_by_name__name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "protocol" defined at g-socket.ads:600, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_service_by_name__protocol
 use import "_gnatprove_standard".Main
 use        Standard__string

 function protocol #"g-socket.ads" 600 0 0# "model_projected" "model_trace:3358" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "protocol" defined at g-socket.ads:600, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_service_by_name__protocol___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_service_by_name" defined at g-socket.ads:598, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get_service_by_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__service_entry_type

 function get_service_by_name #"g-socket.ads" 598 0 0# 
   (name : Standard__string.string) (protocol : Standard__string.string) : Gnat__sockets__service_entry_type.service_entry_type
 
 predicate get_service_by_name__function_guard #"g-socket.ads" 1270 0 0# 
   (result : Gnat__sockets__service_entry_type.service_entry_type) (name : Standard__string.string) (protocol : Standard__string.string) 

end

(* Module for defining the constant "port" defined at g-socket.ads:604, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_service_by_port__port
 use import "_gnatprove_standard".Main

 function port #"g-socket.ads" 604 0 0# "model" "model_trace:3377" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 479 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "port" defined at g-socket.ads:604, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_service_by_port__port___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "protocol" defined at g-socket.ads:605, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_service_by_port__protocol
 use import "_gnatprove_standard".Main
 use        Standard__string

 function protocol #"g-socket.ads" 605 0 0# "model_projected" "model_trace:3386" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "protocol" defined at g-socket.ads:605, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_service_by_port__protocol___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_service_by_port" defined at g-socket.ads:603, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get_service_by_port
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__service_entry_type

 function get_service_by_port #"g-socket.ads" 603 0 0# 
   (port : int) (protocol : Standard__string.string) : Gnat__sockets__service_entry_type.service_entry_type
 
 predicate get_service_by_port__function_guard #"g-socket.ads" 1270 0 0# 
   (result : Gnat__sockets__service_entry_type.service_entry_type) (port : int) (protocol : Standard__string.string) 

end

(* Module for axiomatizing type "error_type" defined at g-socket.ads:621, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__error_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type error_type #"g-socket.ads" 621 0 0# 
 
 function first #"g-socket.ads" 621 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 621 0 0# 
   : int =
  44
 
 predicate in_range #"g-socket.ads" 621 0 0# 
   (x : int)  =
  #"g-socket.ads" 621 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = error_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type error_type__ref #"g-socket.ads" 621 0 0# =
  { mutable error_type__content "model_trace:" : error_type }
 
 function error_type__ref___projection #"g-socket.ads" 621 0 0# 
   (a : error_type__ref) : error_type =
  a.error_type__content
 
 meta "model_projection" function error_type__ref___projection
 
 meta "inline : no" function error_type__ref___projection
 
 val error_type__havoc #"g-socket.ads" 621 0 0# 
   (x : error_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "error_type" defined at g-socket.ads:621, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__error_type__rep
 use        Gnat__sockets__error_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__error_type.error_type, 
 predicate in_range = Gnat__sockets__error_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "level_type" defined at g-socket.ads:672, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__level_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type level_type #"g-socket.ads" 672 0 0# 
 
 function first #"g-socket.ads" 672 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 672 0 0# 
   : int =
  3
 
 predicate in_range #"g-socket.ads" 672 0 0# 
   (x : int)  =
  #"g-socket.ads" 672 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = level_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type level_type__ref #"g-socket.ads" 672 0 0# =
  { mutable level_type__content "model_trace:" : level_type }
 
 function level_type__ref___projection #"g-socket.ads" 672 0 0# 
   (a : level_type__ref) : level_type =
  a.level_type__content
 
 meta "model_projection" function level_type__ref___projection
 
 meta "inline : no" function level_type__ref___projection
 
 val level_type__havoc #"g-socket.ads" 672 0 0# 
   (x : level_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "level_type" defined at g-socket.ads:672, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__level_type__rep
 use        Gnat__sockets__level_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__level_type.level_type, 
 predicate in_range = Gnat__sockets__level_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "option_name" defined at g-socket.ads:682, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__option_name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type option_name #"g-socket.ads" 682 0 0# 
 
 function first #"g-socket.ads" 682 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 682 0 0# 
   : int =
  17
 
 predicate in_range #"g-socket.ads" 682 0 0# 
   (x : int)  =
  #"g-socket.ads" 682 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = option_name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type option_name__ref #"g-socket.ads" 682 0 0# =
  { mutable option_name__content "model_trace:" : option_name }
 
 function option_name__ref___projection #"g-socket.ads" 682 0 0# 
   (a : option_name__ref) : option_name =
  a.option_name__content
 
 meta "model_projection" function option_name__ref___projection
 
 meta "inline : no" function option_name__ref___projection
 
 val option_name__havoc #"g-socket.ads" 682 0 0# 
   (x : option_name__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "option_name" defined at g-socket.ads:682, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__option_name__rep
 use        Gnat__sockets__option_name
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__option_name.option_name, 
 predicate in_range = Gnat__sockets__option_name.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "specific_option_name" defined at g-socket.ads:701, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__specific_option_name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type specific_option_name #"g-socket.ads" 701 0 0# 
 
 function first #"g-socket.ads" 701 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 701 0 0# 
   : int =
  17
 
 predicate in_range #"g-socket.ads" 701 0 0# 
   (x : int)  =
  #"g-socket.ads" 701 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = specific_option_name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type specific_option_name__ref #"g-socket.ads" 701 0 0# =
  { mutable specific_option_name__content "model_trace:" : specific_option_name }
 
 function specific_option_name__ref___projection #"g-socket.ads" 701 0 0# 
   (a : specific_option_name__ref) : specific_option_name =
  a.specific_option_name__content
 
 meta "model_projection" function specific_option_name__ref___projection
 
 meta "inline : no" function specific_option_name__ref___projection
 
 val specific_option_name__havoc #"g-socket.ads" 701 0 0# 
   (x : specific_option_name__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "specific_option_name" defined at g-socket.ads:701, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__specific_option_name__rep
 use        Gnat__sockets__specific_option_name
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__specific_option_name.specific_option_name, 
 predicate in_range = Gnat__sockets__specific_option_name.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the record theory associated to type "option_type" defined at g-socket.ads:704, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__option_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__natural__rep
 use        Interfaces__c__int
 use        Interfaces__c__int__rep
 use        Gnat__sockets__timeval_duration
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__error_type
 use        Gnat__sockets__error_type__rep
 use        Gnat__sockets__option_name
 use        Gnat__sockets__option_name__rep

 type __split_discrs #"g-socket.ads" 701 0 0# =
  { rec__gnat__sockets__option_type__name "model_trace:.3931" : Gnat__sockets__option_name.option_name }
 
 function __split_discrs_8__projection #"g-socket.ads" 682 0 0# 
   (a : __split_discrs) : Gnat__sockets__option_name.option_name =
  a.rec__gnat__sockets__option_type__name
 
 meta "model_projection" function __split_discrs_8__projection
 
 meta "inline : no" function __split_discrs_8__projection
 
 type __split_discrs__ref #"g-socket.ads" 704 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_7__projection #"g-socket.ads" 704 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_7__projection
 
 meta "inline : no" function __split_discrs__ref_7__projection
 
 val __split_discrs__havoc #"g-socket.ads" 704 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 704 0 0# =
  { rec__gnat__sockets__option_type__optname "model_trace:.3949" : Interfaces__c__int.int__; rec__gnat__sockets__option_type__optval "model_trace:.3965" : Interfaces__c__int.int__; rec__gnat__sockets__option_type__enabled "model_trace:.3989" : bool; rec__gnat__sockets__option_type__seconds "model_trace:.4005" : Standard__natural.natural; rec__gnat__sockets__option_type__microseconds "model_trace:.4022" : Standard__natural.natural; rec__gnat__sockets__option_type__size "model_trace:.4037" : Standard__natural.natural; rec__gnat__sockets__option_type__error "model_trace:.4051" : Gnat__sockets__error_type.error_type; rec__gnat__sockets__option_type__multicast_address "model_trace:.4066" : Gnat__sockets__inet_addr_type.inet_addr_type; rec__gnat__sockets__option_type__local_interface "model_trace:.4076" : Gnat__sockets__inet_addr_type.inet_addr_type; rec__gnat__sockets__option_type__outgoing_if "model_trace:.4090" : Gnat__sockets__inet_addr_type.inet_addr_type; rec__gnat__sockets__option_type__time_to_live "model_trace:.4104" : Standard__natural.natural; rec__gnat__sockets__option_type__timeout "model_trace:.4119" : Gnat__sockets__timeval_duration.timeval_duration }
 
 function __split_fields_Optname__projection #"g-socket.ads" 439 0 0# "model_trace:.3949" 
   (a : __split_fields) : Interfaces__c__int.int__ =
  a.rec__gnat__sockets__option_type__optname
 
 meta "model_projection" function __split_fields_Optname__projection
 
 meta "inline : no" function __split_fields_Optname__projection
 
 function __split_fields_Optval__projection #"g-socket.ads" 704 0 0# "model_trace:.3965" 
   (a : __split_fields) : Interfaces__c__int.int__ =
  a.rec__gnat__sockets__option_type__optval
 
 meta "model_projection" function __split_fields_Optval__projection
 
 meta "inline : no" function __split_fields_Optval__projection
 
 function __split_fields_Enabled__projection #"g-socket.ads" 704 0 0# "model_trace:.3989" 
   (a : __split_fields) : bool =
  a.rec__gnat__sockets__option_type__enabled
 
 meta "model_projection" function __split_fields_Enabled__projection
 
 meta "inline : no" function __split_fields_Enabled__projection
 
 function __split_fields_Seconds__projection #"g-socket.ads" 704 0 0# "model_trace:.4005" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__gnat__sockets__option_type__seconds
 
 meta "model_projection" function __split_fields_Seconds__projection
 
 meta "inline : no" function __split_fields_Seconds__projection
 
 function __split_fields_Microseconds__projection #"g-socket.ads" 704 0 0# "model_trace:.4022" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__gnat__sockets__option_type__microseconds
 
 meta "model_projection" function __split_fields_Microseconds__projection
 
 meta "inline : no" function __split_fields_Microseconds__projection
 
 function __split_fields_Size__projection #"g-socket.ads" 704 0 0# "model_trace:.4037" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__gnat__sockets__option_type__size
 
 meta "model_projection" function __split_fields_Size__projection
 
 meta "inline : no" function __split_fields_Size__projection
 
 function __split_fields_Error__projection #"g-socket.ads" 704 0 0# "model_trace:.4051" 
   (a : __split_fields) : Gnat__sockets__error_type.error_type =
  a.rec__gnat__sockets__option_type__error
 
 meta "model_projection" function __split_fields_Error__projection
 
 meta "inline : no" function __split_fields_Error__projection
 
 function __split_fields_Multicast_Address__projection #"g-socket.ads" 704 0 0# "model_trace:.4066" 
   (a : __split_fields) : Gnat__sockets__inet_addr_type.inet_addr_type =
  a.rec__gnat__sockets__option_type__multicast_address
 
 meta "model_projection" function __split_fields_Multicast_Address__projection
 
 meta "inline : no" function __split_fields_Multicast_Address__projection
 
 function __split_fields_Local_Interface__projection #"g-socket.ads" 704 0 0# "model_trace:.4076" 
   (a : __split_fields) : Gnat__sockets__inet_addr_type.inet_addr_type =
  a.rec__gnat__sockets__option_type__local_interface
 
 meta "model_projection" function __split_fields_Local_Interface__projection
 
 meta "inline : no" function __split_fields_Local_Interface__projection
 
 function __split_fields_Outgoing_If__projection #"g-socket.ads" 704 0 0# "model_trace:.4090" 
   (a : __split_fields) : Gnat__sockets__inet_addr_type.inet_addr_type =
  a.rec__gnat__sockets__option_type__outgoing_if
 
 meta "model_projection" function __split_fields_Outgoing_If__projection
 
 meta "inline : no" function __split_fields_Outgoing_If__projection
 
 function __split_fields_Time_To_Live__projection #"g-socket.ads" 704 0 0# "model_trace:.4104" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__gnat__sockets__option_type__time_to_live
 
 meta "model_projection" function __split_fields_Time_To_Live__projection
 
 meta "inline : no" function __split_fields_Time_To_Live__projection
 
 function __split_fields_Timeout__projection #"g-socket.ads" 704 0 0# "model_trace:.4119" 
   (a : __split_fields) : Gnat__sockets__timeval_duration.timeval_duration =
  a.rec__gnat__sockets__option_type__timeout
 
 meta "model_projection" function __split_fields_Timeout__projection
 
 meta "inline : no" function __split_fields_Timeout__projection
 
 type __split_fields__ref #"g-socket.ads" 704 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_9__projection #"g-socket.ads" 704 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_9__projection
 
 meta "inline : no" function __split_fields__ref_9__projection
 
 val __split_fields__havoc #"g-socket.ads" 704 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 704 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields; attr__constrained "model_trace:" : bool }
 
 function __rep_20__projection #"g-socket.ads" 704 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_20__projection
 
 meta "inline : no" function __rep_20__projection
 
 function __rep_21__projection #"g-socket.ads" 704 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_21__projection
 
 meta "inline : no" function __rep_21__projection
 
 function __rep_22__projection #"g-socket.ads" 704 0 0# 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_22__projection
 
 meta "inline : no" function __rep_22__projection
 
 function to_base #"g-socket.ads" 704 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 704 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__option_type__name_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Gnat__sockets__option_name.option_name
  requires { #"g-socket.ads" 682 0 0# true }
  ensures { #"g-socket.ads" 682 0 0# (result = a.__split_discrs.rec__gnat__sockets__option_type__name) }
 
 predicate gnat__sockets__option_type__optname__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 0)
 
 val rec__gnat__sockets__option_type__optname_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Interfaces__c__int.int__
  requires { #"i-c.ads" 35 0 0# (gnat__sockets__option_type__optname__pred a) }
  ensures { #"i-c.ads" 35 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__optname) }
 
 predicate gnat__sockets__option_type__optval__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 0)
 
 val rec__gnat__sockets__option_type__optval_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Interfaces__c__int.int__
  requires { #"i-c.ads" 35 0 0# (gnat__sockets__option_type__optval__pred a) }
  ensures { #"i-c.ads" 35 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__optval) }
 
 predicate gnat__sockets__option_type__enabled__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ( ( ( ( ( ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 1) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 2) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 3) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 6) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 8) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 14) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 13) )
 
 val rec__gnat__sockets__option_type__enabled_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : bool
  requires { #"g-socket.ads" 704 0 0# (gnat__sockets__option_type__enabled__pred a) }
  ensures { #"g-socket.ads" 704 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__enabled) }
 
 predicate gnat__sockets__option_type__seconds__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 6) /\ ( ( ( ( ( ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 1) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 2) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 3) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 6) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 8) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 14) ) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 13) ) )
 
 val rec__gnat__sockets__option_type__seconds_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# (gnat__sockets__option_type__seconds__pred a) }
  ensures { #"system.ads" 1 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__seconds) }
 
 predicate gnat__sockets__option_type__microseconds__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 17)
 
 val rec__gnat__sockets__option_type__microseconds_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# (gnat__sockets__option_type__microseconds__pred a) }
  ensures { #"system.ads" 1 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__microseconds) }
 
 predicate gnat__sockets__option_type__size__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 4) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 5) )
 
 val rec__gnat__sockets__option_type__size_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# (gnat__sockets__option_type__size__pred a) }
  ensures { #"system.ads" 1 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__size) }
 
 predicate gnat__sockets__option_type__error__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 7)
 
 val rec__gnat__sockets__option_type__error_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Gnat__sockets__error_type.error_type
  requires { #"g-socket.ads" 621 0 0# (gnat__sockets__option_type__error__pred a) }
  ensures { #"g-socket.ads" 621 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__error) }
 
 predicate gnat__sockets__option_type__multicast_address__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 9) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 10) )
 
 val rec__gnat__sockets__option_type__multicast_address_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (gnat__sockets__option_type__multicast_address__pred a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__multicast_address) }
 
 predicate gnat__sockets__option_type__local_interface__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 9) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 10) )
 
 val rec__gnat__sockets__option_type__local_interface_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (gnat__sockets__option_type__local_interface__pred a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__local_interface) }
 
 predicate gnat__sockets__option_type__outgoing_if__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 11)
 
 val rec__gnat__sockets__option_type__outgoing_if_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (gnat__sockets__option_type__outgoing_if__pred a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__outgoing_if) }
 
 predicate gnat__sockets__option_type__time_to_live__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 12)
 
 val rec__gnat__sockets__option_type__time_to_live_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# (gnat__sockets__option_type__time_to_live__pred a) }
  ensures { #"system.ads" 1 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__time_to_live) }
 
 predicate gnat__sockets__option_type__timeout__pred #"g-socket.ads" 704 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 704 0 0# ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 15) \/ ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = 16) )
 
 val rec__gnat__sockets__option_type__timeout_ #"g-socket.ads" 704 0 0# 
   (a : __rep) : Gnat__sockets__timeval_duration.timeval_duration
  requires { #"g-socket.ads" 439 0 0# (gnat__sockets__option_type__timeout__pred a) }
  ensures { #"g-socket.ads" 439 0 0# (result = a.__split_fields.rec__gnat__sockets__option_type__timeout) }
 
 function bool_eq #"g-socket.ads" 704 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ( ( ( ( ( ( ( ( ( ( ((Gnat__sockets__option_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__option_type__name) = (Gnat__sockets__option_name__rep.to_rep b.__split_discrs.rec__gnat__sockets__option_type__name)) /\ ( (gnat__sockets__option_type__optname__pred a) -> ((Interfaces__c__int__rep.to_rep a.__split_fields.rec__gnat__sockets__option_type__optname) = (Interfaces__c__int__rep.to_rep b.__split_fields.rec__gnat__sockets__option_type__optname)) ) ) /\ ( (gnat__sockets__option_type__optval__pred a) -> ((Interfaces__c__int__rep.to_rep a.__split_fields.rec__gnat__sockets__option_type__optval) = (Interfaces__c__int__rep.to_rep b.__split_fields.rec__gnat__sockets__option_type__optval)) ) ) /\ ( (gnat__sockets__option_type__enabled__pred a) -> (a.__split_fields.rec__gnat__sockets__option_type__enabled = b.__split_fields.rec__gnat__sockets__option_type__enabled) ) ) /\ ( (gnat__sockets__option_type__seconds__pred a) -> ((Standard__natural__rep.to_rep a.__split_fields.rec__gnat__sockets__option_type__seconds) = (Standard__natural__rep.to_rep b.__split_fields.rec__gnat__sockets__option_type__seconds)) ) ) /\ ( (gnat__sockets__option_type__microseconds__pred a) -> ((Standard__natural__rep.to_rep a.__split_fields.rec__gnat__sockets__option_type__microseconds) = (Standard__natural__rep.to_rep b.__split_fields.rec__gnat__sockets__option_type__microseconds)) ) ) /\ ( (gnat__sockets__option_type__size__pred a) -> ((Standard__natural__rep.to_rep a.__split_fields.rec__gnat__sockets__option_type__size) = (Standard__natural__rep.to_rep b.__split_fields.rec__gnat__sockets__option_type__size)) ) ) /\ ( (gnat__sockets__option_type__error__pred a) -> ((Gnat__sockets__error_type__rep.to_rep a.__split_fields.rec__gnat__sockets__option_type__error) = (Gnat__sockets__error_type__rep.to_rep b.__split_fields.rec__gnat__sockets__option_type__error)) ) ) /\ ( (gnat__sockets__option_type__multicast_address__pred a) -> ((Gnat__sockets__inet_addr_type.bool_eq a.__split_fields.rec__gnat__sockets__option_type__multicast_address b.__split_fields.rec__gnat__sockets__option_type__multicast_address) = True) ) ) /\ ( (gnat__sockets__option_type__local_interface__pred a) -> ((Gnat__sockets__inet_addr_type.bool_eq a.__split_fields.rec__gnat__sockets__option_type__local_interface b.__split_fields.rec__gnat__sockets__option_type__local_interface) = True) ) ) /\ ( (gnat__sockets__option_type__outgoing_if__pred a) -> ((Gnat__sockets__inet_addr_type.bool_eq a.__split_fields.rec__gnat__sockets__option_type__outgoing_if b.__split_fields.rec__gnat__sockets__option_type__outgoing_if) = True) ) ) /\ ( (gnat__sockets__option_type__time_to_live__pred a) -> ((Standard__natural__rep.to_rep a.__split_fields.rec__gnat__sockets__option_type__time_to_live) = (Standard__natural__rep.to_rep b.__split_fields.rec__gnat__sockets__option_type__time_to_live)) ) ) /\ ( (gnat__sockets__option_type__timeout__pred a) -> ((Gnat__sockets__timeval_duration.to_fixed a.__split_fields.rec__gnat__sockets__option_type__timeout) = (Gnat__sockets__timeval_duration.to_fixed b.__split_fields.rec__gnat__sockets__option_type__timeout)) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 704 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "option_type" defined at g-socket.ads:704, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__option_type
 use export Gnat__sockets__option_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type option_type #"g-socket.ads" 704 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 704 0 0# 
   : int
 
 function object__size #"g-socket.ads" 704 0 0# 
   (a : option_type) : int
 
 function value__alignment #"g-socket.ads" 704 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 704 0 0# 
   (a : option_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 704 0 0#  : option_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 704 0 0#  : option_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__option_type__name__first__bit #"g-socket.ads" 704 0 0# 
   : int
 
 function gnat__sockets__option_type__name__last__bit #"g-socket.ads" 704 0 0# 
   : int
 
 function gnat__sockets__option_type__name__position #"g-socket.ads" 704 0 0# 
   : int
 
 axiom gnat__sockets__option_type__name__first__bit_axiom :
  ((gnat__sockets__option_type__name__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__name__last__bit_axiom :
  ((gnat__sockets__option_type__name__last__bit ) > (gnat__sockets__option_type__name__first__bit ))
 
 axiom gnat__sockets__option_type__name__position_axiom :
  ((gnat__sockets__option_type__name__position ) >= 0)
 
 function gnat__sockets__option_type__optname__first__bit #"g-socket.ads" 704 0 0# 
   : int
 
 function gnat__sockets__option_type__optname__last__bit #"g-socket.ads" 704 0 0# 
   : int
 
 function gnat__sockets__option_type__optname__position #"g-socket.ads" 704 0 0# 
   : int
 
 axiom gnat__sockets__option_type__optname__first__bit_axiom :
  ((gnat__sockets__option_type__optname__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__optname__last__bit_axiom :
  ((gnat__sockets__option_type__optname__last__bit ) > (gnat__sockets__option_type__optname__first__bit ))
 
 axiom gnat__sockets__option_type__optname__position_axiom :
  ((gnat__sockets__option_type__optname__position ) >= 0)
 
 function gnat__sockets__option_type__optval__first__bit #"g-socket.ads" 707 0 0# 
   : int
 
 function gnat__sockets__option_type__optval__last__bit #"g-socket.ads" 707 0 0# 
   : int
 
 function gnat__sockets__option_type__optval__position #"g-socket.ads" 707 0 0# 
   : int
 
 axiom gnat__sockets__option_type__optval__first__bit_axiom :
  ((gnat__sockets__option_type__optval__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__optval__last__bit_axiom :
  ((gnat__sockets__option_type__optval__last__bit ) > (gnat__sockets__option_type__optval__first__bit ))
 
 axiom gnat__sockets__option_type__optval__position_axiom :
  ((gnat__sockets__option_type__optval__position ) >= 0)
 
 function gnat__sockets__option_type__enabled__first__bit #"g-socket.ads" 708 0 0# 
   : int
 
 function gnat__sockets__option_type__enabled__last__bit #"g-socket.ads" 708 0 0# 
   : int
 
 function gnat__sockets__option_type__enabled__position #"g-socket.ads" 708 0 0# 
   : int
 
 axiom gnat__sockets__option_type__enabled__first__bit_axiom :
  ((gnat__sockets__option_type__enabled__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__enabled__last__bit_axiom :
  ((gnat__sockets__option_type__enabled__last__bit ) > (gnat__sockets__option_type__enabled__first__bit ))
 
 axiom gnat__sockets__option_type__enabled__position_axiom :
  ((gnat__sockets__option_type__enabled__position ) >= 0)
 
 function gnat__sockets__option_type__seconds__first__bit #"g-socket.ads" 717 0 0# 
   : int
 
 function gnat__sockets__option_type__seconds__last__bit #"g-socket.ads" 717 0 0# 
   : int
 
 function gnat__sockets__option_type__seconds__position #"g-socket.ads" 717 0 0# 
   : int
 
 axiom gnat__sockets__option_type__seconds__first__bit_axiom :
  ((gnat__sockets__option_type__seconds__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__seconds__last__bit_axiom :
  ((gnat__sockets__option_type__seconds__last__bit ) > (gnat__sockets__option_type__seconds__first__bit ))
 
 axiom gnat__sockets__option_type__seconds__position_axiom :
  ((gnat__sockets__option_type__seconds__position ) >= 0)
 
 function gnat__sockets__option_type__microseconds__first__bit #"g-socket.ads" 721 0 0# 
   : int
 
 function gnat__sockets__option_type__microseconds__last__bit #"g-socket.ads" 721 0 0# 
   : int
 
 function gnat__sockets__option_type__microseconds__position #"g-socket.ads" 721 0 0# 
   : int
 
 axiom gnat__sockets__option_type__microseconds__first__bit_axiom :
  ((gnat__sockets__option_type__microseconds__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__microseconds__last__bit_axiom :
  ((gnat__sockets__option_type__microseconds__last__bit ) > (gnat__sockets__option_type__microseconds__first__bit ))
 
 axiom gnat__sockets__option_type__microseconds__position_axiom :
  ((gnat__sockets__option_type__microseconds__position ) >= 0)
 
 function gnat__sockets__option_type__size__first__bit #"g-socket.ads" 727 0 0# 
   : int
 
 function gnat__sockets__option_type__size__last__bit #"g-socket.ads" 727 0 0# 
   : int
 
 function gnat__sockets__option_type__size__position #"g-socket.ads" 727 0 0# 
   : int
 
 axiom gnat__sockets__option_type__size__first__bit_axiom :
  ((gnat__sockets__option_type__size__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__size__last__bit_axiom :
  ((gnat__sockets__option_type__size__last__bit ) > (gnat__sockets__option_type__size__first__bit ))
 
 axiom gnat__sockets__option_type__size__position_axiom :
  ((gnat__sockets__option_type__size__position ) >= 0)
 
 function gnat__sockets__option_type__error__first__bit #"g-socket.ads" 731 0 0# 
   : int
 
 function gnat__sockets__option_type__error__last__bit #"g-socket.ads" 731 0 0# 
   : int
 
 function gnat__sockets__option_type__error__position #"g-socket.ads" 731 0 0# 
   : int
 
 axiom gnat__sockets__option_type__error__first__bit_axiom :
  ((gnat__sockets__option_type__error__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__error__last__bit_axiom :
  ((gnat__sockets__option_type__error__last__bit ) > (gnat__sockets__option_type__error__first__bit ))
 
 axiom gnat__sockets__option_type__error__position_axiom :
  ((gnat__sockets__option_type__error__position ) >= 0)
 
 function gnat__sockets__option_type__multicast_address__first__bit #"g-socket.ads" 734 0 0# 
   : int
 
 function gnat__sockets__option_type__multicast_address__last__bit #"g-socket.ads" 734 0 0# 
   : int
 
 function gnat__sockets__option_type__multicast_address__position #"g-socket.ads" 734 0 0# 
   : int
 
 axiom gnat__sockets__option_type__multicast_address__first__bit_axiom :
  ((gnat__sockets__option_type__multicast_address__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__multicast_address__last__bit_axiom :
  ((gnat__sockets__option_type__multicast_address__last__bit ) > (gnat__sockets__option_type__multicast_address__first__bit ))
 
 axiom gnat__sockets__option_type__multicast_address__position_axiom :
  ((gnat__sockets__option_type__multicast_address__position ) >= 0)
 
 function gnat__sockets__option_type__local_interface__first__bit #"g-socket.ads" 738 0 0# 
   : int
 
 function gnat__sockets__option_type__local_interface__last__bit #"g-socket.ads" 738 0 0# 
   : int
 
 function gnat__sockets__option_type__local_interface__position #"g-socket.ads" 738 0 0# 
   : int
 
 axiom gnat__sockets__option_type__local_interface__first__bit_axiom :
  ((gnat__sockets__option_type__local_interface__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__local_interface__last__bit_axiom :
  ((gnat__sockets__option_type__local_interface__last__bit ) > (gnat__sockets__option_type__local_interface__first__bit ))
 
 axiom gnat__sockets__option_type__local_interface__position_axiom :
  ((gnat__sockets__option_type__local_interface__position ) >= 0)
 
 function gnat__sockets__option_type__outgoing_if__first__bit #"g-socket.ads" 739 0 0# 
   : int
 
 function gnat__sockets__option_type__outgoing_if__last__bit #"g-socket.ads" 739 0 0# 
   : int
 
 function gnat__sockets__option_type__outgoing_if__position #"g-socket.ads" 739 0 0# 
   : int
 
 axiom gnat__sockets__option_type__outgoing_if__first__bit_axiom :
  ((gnat__sockets__option_type__outgoing_if__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__outgoing_if__last__bit_axiom :
  ((gnat__sockets__option_type__outgoing_if__last__bit ) > (gnat__sockets__option_type__outgoing_if__first__bit ))
 
 axiom gnat__sockets__option_type__outgoing_if__position_axiom :
  ((gnat__sockets__option_type__outgoing_if__position ) >= 0)
 
 function gnat__sockets__option_type__time_to_live__first__bit #"g-socket.ads" 742 0 0# 
   : int
 
 function gnat__sockets__option_type__time_to_live__last__bit #"g-socket.ads" 742 0 0# 
   : int
 
 function gnat__sockets__option_type__time_to_live__position #"g-socket.ads" 742 0 0# 
   : int
 
 axiom gnat__sockets__option_type__time_to_live__first__bit_axiom :
  ((gnat__sockets__option_type__time_to_live__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__time_to_live__last__bit_axiom :
  ((gnat__sockets__option_type__time_to_live__last__bit ) > (gnat__sockets__option_type__time_to_live__first__bit ))
 
 axiom gnat__sockets__option_type__time_to_live__position_axiom :
  ((gnat__sockets__option_type__time_to_live__position ) >= 0)
 
 function gnat__sockets__option_type__timeout__first__bit #"g-socket.ads" 745 0 0# 
   : int
 
 function gnat__sockets__option_type__timeout__last__bit #"g-socket.ads" 745 0 0# 
   : int
 
 function gnat__sockets__option_type__timeout__position #"g-socket.ads" 745 0 0# 
   : int
 
 axiom gnat__sockets__option_type__timeout__first__bit_axiom :
  ((gnat__sockets__option_type__timeout__first__bit ) >= 0)
 
 axiom gnat__sockets__option_type__timeout__last__bit_axiom :
  ((gnat__sockets__option_type__timeout__last__bit ) > (gnat__sockets__option_type__timeout__first__bit ))
 
 axiom gnat__sockets__option_type__timeout__position_axiom :
  ((gnat__sockets__option_type__timeout__position ) >= 0)
 
 function dummy #"g-socket.ads" 749 0 0# 
   : option_type
 
 type option_type__ref #"g-socket.ads" 704 0 0# =
  { mutable option_type__content "model_trace:" : option_type }
 
 function option_type__ref___projection #"g-socket.ads" 704 0 0# 
   (a : option_type__ref) : option_type =
  a.option_type__content
 
 meta "model_projection" function option_type__ref___projection
 
 meta "inline : no" function option_type__ref___projection
 
 val option_type__havoc #"g-socket.ads" 704 0 0# 
   (x : option_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "request_name" defined at g-socket.ads:759, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__request_name
 use import "_gnatprove_standard".Main
 use import "int".Int

 type request_name #"g-socket.ads" 759 0 0# 
 
 function first #"g-socket.ads" 759 0 0# 
   : int =
  0
 
 function last #"g-socket.ads" 759 0 0# 
   : int =
  1
 
 predicate in_range #"g-socket.ads" 759 0 0# 
   (x : int)  =
  #"g-socket.ads" 759 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = request_name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type request_name__ref #"g-socket.ads" 759 0 0# =
  { mutable request_name__content "model_trace:" : request_name }
 
 function request_name__ref___projection #"g-socket.ads" 759 0 0# 
   (a : request_name__ref) : request_name =
  a.request_name__content
 
 meta "model_projection" function request_name__ref___projection
 
 meta "inline : no" function request_name__ref___projection
 
 val request_name__havoc #"g-socket.ads" 759 0 0# 
   (x : request_name__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "request_name" defined at g-socket.ads:759, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__request_name__rep
 use        Gnat__sockets__request_name
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__request_name.request_name, 
 predicate in_range = Gnat__sockets__request_name.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the record theory associated to type "request_type" defined at g-socket.ads:763, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__request_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__natural__rep
 use        Gnat__sockets__request_name
 use        Gnat__sockets__request_name__rep

 type __split_discrs #"g-socket.ads" 759 0 0# =
  { rec__gnat__sockets__request_type__name "model_trace:.4163" : Gnat__sockets__request_name.request_name }
 
 function __split_discrs_9__projection #"g-socket.ads" 759 0 0# 
   (a : __split_discrs) : Gnat__sockets__request_name.request_name =
  a.rec__gnat__sockets__request_type__name
 
 meta "model_projection" function __split_discrs_9__projection
 
 meta "inline : no" function __split_discrs_9__projection
 
 type __split_discrs__ref #"g-socket.ads" 763 0 0# =
  { mutable __split_discrs__content "model_trace:" : __split_discrs }
 
 function __split_discrs__ref_8__projection #"g-socket.ads" 763 0 0# 
   (a : __split_discrs__ref) : __split_discrs =
  a.__split_discrs__content
 
 meta "model_projection" function __split_discrs__ref_8__projection
 
 meta "inline : no" function __split_discrs__ref_8__projection
 
 val __split_discrs__havoc #"g-socket.ads" 763 0 0# 
   (x : __split_discrs__ref) : unit
  writes {x}
 
 type __split_fields #"g-socket.ads" 763 0 0# =
  { rec__gnat__sockets__request_type__enabled "model_trace:.4181" : bool; rec__gnat__sockets__request_type__size "model_trace:.4195" : Standard__natural.natural }
 
 function __split_fields_Enabled2__projection #"system.ads" 1 0 0# "model_trace:.4181" 
   (a : __split_fields) : bool =
  a.rec__gnat__sockets__request_type__enabled
 
 meta "model_projection" function __split_fields_Enabled2__projection
 
 meta "inline : no" function __split_fields_Enabled2__projection
 
 function __split_fields_Size2__projection #"g-socket.ads" 763 0 0# "model_trace:.4195" 
   (a : __split_fields) : Standard__natural.natural =
  a.rec__gnat__sockets__request_type__size
 
 meta "model_projection" function __split_fields_Size2__projection
 
 meta "inline : no" function __split_fields_Size2__projection
 
 type __split_fields__ref #"g-socket.ads" 763 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_10__projection #"g-socket.ads" 763 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_10__projection
 
 meta "inline : no" function __split_fields__ref_10__projection
 
 val __split_fields__havoc #"g-socket.ads" 763 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 763 0 0# =
  { __split_discrs "model_trace:" : __split_discrs; __split_fields "model_trace:" : __split_fields; attr__constrained "model_trace:" : bool }
 
 function __rep_23__projection #"g-socket.ads" 763 0 0# 
   (a : __rep) : __split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_23__projection
 
 meta "inline : no" function __rep_23__projection
 
 function __rep_24__projection #"g-socket.ads" 763 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_24__projection
 
 meta "inline : no" function __rep_24__projection
 
 function __rep_25__projection #"g-socket.ads" 763 0 0# 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_25__projection
 
 meta "inline : no" function __rep_25__projection
 
 function to_base #"g-socket.ads" 763 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 763 0 0# 
   (a : __rep) : __rep =
  a
 
 val rec__gnat__sockets__request_type__name_ #"g-socket.ads" 763 0 0# 
   (a : __rep) : Gnat__sockets__request_name.request_name
  requires { #"g-socket.ads" 759 0 0# true }
  ensures { #"g-socket.ads" 759 0 0# (result = a.__split_discrs.rec__gnat__sockets__request_type__name) }
 
 predicate gnat__sockets__request_type__enabled__pred #"g-socket.ads" 763 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 763 0 0# ((Gnat__sockets__request_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__request_type__name) = 0)
 
 val rec__gnat__sockets__request_type__enabled_ #"g-socket.ads" 763 0 0# 
   (a : __rep) : bool
  requires { #"g-socket.ads" 763 0 0# (gnat__sockets__request_type__enabled__pred a) }
  ensures { #"g-socket.ads" 763 0 0# (result = a.__split_fields.rec__gnat__sockets__request_type__enabled) }
 
 predicate gnat__sockets__request_type__size__pred #"g-socket.ads" 763 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 763 0 0# ((Gnat__sockets__request_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__request_type__name) = 1)
 
 val rec__gnat__sockets__request_type__size_ #"g-socket.ads" 763 0 0# 
   (a : __rep) : Standard__natural.natural
  requires { #"system.ads" 1 0 0# (gnat__sockets__request_type__size__pred a) }
  ensures { #"system.ads" 1 0 0# (result = a.__split_fields.rec__gnat__sockets__request_type__size) }
 
 function bool_eq #"g-socket.ads" 763 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Gnat__sockets__request_name__rep.to_rep a.__split_discrs.rec__gnat__sockets__request_type__name) = (Gnat__sockets__request_name__rep.to_rep b.__split_discrs.rec__gnat__sockets__request_type__name)) /\ ( (gnat__sockets__request_type__enabled__pred a) -> (a.__split_fields.rec__gnat__sockets__request_type__enabled = b.__split_fields.rec__gnat__sockets__request_type__enabled) ) ) /\ ( (gnat__sockets__request_type__size__pred a) -> ((Standard__natural__rep.to_rep a.__split_fields.rec__gnat__sockets__request_type__size) = (Standard__natural__rep.to_rep b.__split_fields.rec__gnat__sockets__request_type__size)) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 763 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "request_type" defined at g-socket.ads:763, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__request_type
 use export Gnat__sockets__request_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type request_type #"g-socket.ads" 763 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 763 0 0# 
   : int
 
 function object__size #"g-socket.ads" 763 0 0# 
   (a : request_type) : int
 
 function value__alignment #"g-socket.ads" 763 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 763 0 0# 
   (a : request_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 763 0 0#  : request_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 763 0 0#  : request_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__request_type__name__first__bit #"g-socket.ads" 763 0 0# 
   : int
 
 function gnat__sockets__request_type__name__last__bit #"g-socket.ads" 763 0 0# 
   : int
 
 function gnat__sockets__request_type__name__position #"g-socket.ads" 763 0 0# 
   : int
 
 axiom gnat__sockets__request_type__name__first__bit_axiom :
  ((gnat__sockets__request_type__name__first__bit ) >= 0)
 
 axiom gnat__sockets__request_type__name__last__bit_axiom :
  ((gnat__sockets__request_type__name__last__bit ) > (gnat__sockets__request_type__name__first__bit ))
 
 axiom gnat__sockets__request_type__name__position_axiom :
  ((gnat__sockets__request_type__name__position ) >= 0)
 
 function gnat__sockets__request_type__enabled__first__bit #"g-socket.ads" 763 0 0# 
   : int
 
 function gnat__sockets__request_type__enabled__last__bit #"g-socket.ads" 763 0 0# 
   : int
 
 function gnat__sockets__request_type__enabled__position #"g-socket.ads" 763 0 0# 
   : int
 
 axiom gnat__sockets__request_type__enabled__first__bit_axiom :
  ((gnat__sockets__request_type__enabled__first__bit ) >= 0)
 
 axiom gnat__sockets__request_type__enabled__last__bit_axiom :
  ((gnat__sockets__request_type__enabled__last__bit ) > (gnat__sockets__request_type__enabled__first__bit ))
 
 axiom gnat__sockets__request_type__enabled__position_axiom :
  ((gnat__sockets__request_type__enabled__position ) >= 0)
 
 function gnat__sockets__request_type__size__first__bit #"g-socket.ads" 766 0 0# 
   : int
 
 function gnat__sockets__request_type__size__last__bit #"g-socket.ads" 766 0 0# 
   : int
 
 function gnat__sockets__request_type__size__position #"g-socket.ads" 766 0 0# 
   : int
 
 axiom gnat__sockets__request_type__size__first__bit_axiom :
  ((gnat__sockets__request_type__size__first__bit ) >= 0)
 
 axiom gnat__sockets__request_type__size__last__bit_axiom :
  ((gnat__sockets__request_type__size__last__bit ) > (gnat__sockets__request_type__size__first__bit ))
 
 axiom gnat__sockets__request_type__size__position_axiom :
  ((gnat__sockets__request_type__size__position ) >= 0)
 
 function dummy #"g-socket.ads" 769 0 0# 
   : request_type
 
 type request_type__ref #"g-socket.ads" 763 0 0# =
  { mutable request_type__content "model_trace:" : request_type }
 
 function request_type__ref___projection #"g-socket.ads" 763 0 0# 
   (a : request_type__ref) : request_type =
  a.request_type__content
 
 meta "model_projection" function request_type__ref___projection
 
 meta "inline : no" function request_type__ref___projection
 
 val request_type__havoc #"g-socket.ads" 763 0 0# 
   (x : request_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "request_flag_type" defined at g-socket.ads:1277, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__request_flag_type
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8

 type request_flag_type #"g-socket.ads" 1277 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"g-socket.ads" 1277 0 0# 
   : BV8.t
 
 function first #"g-socket.ads" 1277 0 0# 
   : BV8.t =
  ( BV8.of_int 0 )
 
 function last #"g-socket.ads" 1277 0 0# 
   : BV8.t =
  ( BV8.of_int 255 )
 
 function first_int #"g-socket.ads" 1277 0 0# 
   : int =
  0
 
 function last_int #"g-socket.ads" 1277 0 0# 
   : int =
  255
 
 predicate in_range #"g-socket.ads" 1277 0 0# 
   (x : BV8.t)  =
  #"g-socket.ads" 1277 0 0# true
 
 predicate in_range_int #"g-socket.ads" 1277 0 0# 
   (x : int)  =
  #"g-socket.ads" 1277 0 0# BV8.uint_in_range x
 
 clone export "ada__model".Static_Modular_8 with
 type t = request_flag_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type request_flag_type__ref #"g-socket.ads" 1277 0 0# =
  { mutable request_flag_type__content "model_trace:" : request_flag_type }
 
 function request_flag_type__ref___projection #"g-socket.ads" 1277 0 0# 
   (a : request_flag_type__ref) : request_flag_type =
  a.request_flag_type__content
 
 meta "model_projection" function request_flag_type__ref___projection
 
 meta "inline : no" function request_flag_type__ref___projection
 
 val request_flag_type__havoc #"g-socket.ads" 1277 0 0# 
   (x : request_flag_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "request_flag_type" defined at g-socket.ads:1277, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__request_flag_type__rep
 use        Gnat__sockets__request_flag_type
 use        "_gnatprove_standard".BV8
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV8 with
 type t = Gnat__sockets__request_flag_type.request_flag_type, 
 predicate in_range = Gnat__sockets__request_flag_type.in_range, 
 predicate in_range_int = Gnat__sockets__request_flag_type.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "no_request_flag" defined at g-socket.ads:780, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__no_request_flag
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function no_request_flag #"g-socket.ads" 780 0 0# "model" "model_trace:4215" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module for defining the constant "process_out_of_band_data" defined at g-socket.ads:783, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__process_out_of_band_data
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function process_out_of_band_data #"g-socket.ads" 783 0 0# "model" "model_trace:4224" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module for defining the constant "peek_at_incoming_data" defined at g-socket.ads:788, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__peek_at_incoming_data
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function peek_at_incoming_data #"g-socket.ads" 788 0 0# "model" "model_trace:4233" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module for defining the constant "wait_for_a_full_reception" defined at g-socket.ads:793, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__wait_for_a_full_reception
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function wait_for_a_full_reception #"g-socket.ads" 793 0 0# "model" "model_trace:4242" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module for defining the constant "send_end_of_record" defined at g-socket.ads:801, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_end_of_record
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function send_end_of_record #"g-socket.ads" 801 0 0# "model" "model_trace:4251" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module for defining the constant "l" defined at g-socket.ads:805, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__Oadd__l
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function l #"g-socket.ads" 805 0 0# "model" "model_trace:4267" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "l" defined at g-socket.ads:805, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__Oadd__l___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "r" defined at g-socket.ads:805, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__Oadd__r
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function r #"g-socket.ads" 805 0 0# "model" "model_trace:4274" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r" defined at g-socket.ads:805, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__Oadd__r___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "Oadd" defined at g-socket.ads:805, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__Oadd
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function oadd #"g-socket.ads" 805 0 0# 
   (l : BV8.t) (r : BV8.t) : BV8.t
 
 predicate oadd__function_guard #"g-socket.ads" 1277 0 0# 
   (result : BV8.t) (l : BV8.t) (r : BV8.t) 

end

(* Module for defining the constant "family" defined at g-socket.ads:819, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__create_socket__family
 use import "_gnatprove_standard".Main

 function family #"g-socket.ads" 819 0 0# "model" "model_trace:4365" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 463 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "family" defined at g-socket.ads:819, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__create_socket__family___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at g-socket.ads:820, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__create_socket__mode
 use import "_gnatprove_standard".Main

 function mode #"g-socket.ads" 820 0 0# "model" "model_trace:4375" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 467 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at g-socket.ads:820, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__create_socket__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "server" defined at g-socket.ads:824, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__accept_socket__server
 use import "_gnatprove_standard".Main

 function server #"g-socket.ads" 824 0 0# "model" "model_trace:4394" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server" defined at g-socket.ads:824, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__server___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "server" defined at g-socket.ads:835, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__accept_socket__2__server
 use import "_gnatprove_standard".Main

 function server #"g-socket.ads" 835 0 0# "model" "model_trace:4430" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server" defined at g-socket.ads:835, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__2__server___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "timeout" defined at g-socket.ads:838, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__accept_socket__2__timeout
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_duration

 function timeout #"g-socket.ads" 838 0 0# "model_projected" "model_trace:4457" 
   : Gnat__sockets__selector_duration.selector_duration
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 441 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "timeout" defined at g-socket.ads:838, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__2__timeout___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:849, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__bind_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 849 0 0# "model" "model_trace:4495" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:849, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__bind_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "address" defined at g-socket.ads:850, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__bind_socket__address
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function address #"g-socket.ads" 850 0 0# "model_projected" "model_trace:4504" 
   : Gnat__sockets__sock_addr_type.sock_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 505 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "address" defined at g-socket.ads:850, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__bind_socket__address___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:854, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__close_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 854 0 0# "model" "model_trace:4522" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:854, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__close_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:858, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__connect_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 858 0 0# "model" "model_trace:4540" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:858, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__connect_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "server" defined at g-socket.ads:859, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__connect_socket__server
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function server #"g-socket.ads" 859 0 0# "model_projected" "model_trace:4549" 
   : Gnat__sockets__sock_addr_type.sock_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 505 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server" defined at g-socket.ads:859, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__connect_socket__server___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:864, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__connect_socket__2__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 864 0 0# "model" "model_trace:4567" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:864, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__connect_socket__2__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "server" defined at g-socket.ads:865, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__connect_socket__2__server
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function server #"g-socket.ads" 865 0 0# "model_projected" "model_trace:4576" 
   : Gnat__sockets__sock_addr_type.sock_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 505 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server" defined at g-socket.ads:865, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__connect_socket__2__server___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "timeout" defined at g-socket.ads:866, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__connect_socket__2__timeout
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_duration

 function timeout #"g-socket.ads" 866 0 0# "model_projected" "model_trace:4585" 
   : Gnat__sockets__selector_duration.selector_duration
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 441 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "timeout" defined at g-socket.ads:866, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__connect_socket__2__timeout___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:879, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__control_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 879 0 0# "model" "model_trace:4623" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:879, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__control_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:885, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_peer_name__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 885 0 0# "model" "model_trace:4650" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:885, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_peer_name__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_peer_name" defined at g-socket.ads:885, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get_peer_name
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function get_peer_name #"g-socket.ads" 885 0 0# 
   (socket : int) : Gnat__sockets__sock_addr_type.sock_addr_type
 
 predicate get_peer_name__function_guard #"g-socket.ads" 505 0 0# 
   (result : Gnat__sockets__sock_addr_type.sock_addr_type) (socket : int) 

end

(* Module for defining the constant "socket" defined at g-socket.ads:889, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_socket_name__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 889 0 0# "model" "model_trace:4669" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:889, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_socket_name__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_socket_name" defined at g-socket.ads:889, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get_socket_name
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function get_socket_name #"g-socket.ads" 889 0 0# 
   (socket : int) : Gnat__sockets__sock_addr_type.sock_addr_type
 
 predicate get_socket_name__function_guard #"g-socket.ads" 505 0 0# 
   (result : Gnat__sockets__sock_addr_type.sock_addr_type) (socket : int) 

end

(* Module for defining the constant "socket" defined at g-socket.ads:894, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_socket_option__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 894 0 0# "model" "model_trace:4688" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:894, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_socket_option__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "level" defined at g-socket.ads:895, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_socket_option__level
 use import "_gnatprove_standard".Main

 function level #"g-socket.ads" 895 0 0# "model" "model_trace:4697" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 672 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "level" defined at g-socket.ads:895, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_socket_option__level___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at g-socket.ads:896, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_socket_option__name
 use import "_gnatprove_standard".Main

 function name #"g-socket.ads" 896 0 0# "model" "model_trace:4707" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 682 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at g-socket.ads:896, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_socket_option__name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "optname" defined at g-socket.ads:897, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__get_socket_option__optname
 use import "_gnatprove_standard".Main

 function optname #"g-socket.ads" 897 0 0# "model" "model_trace:4716" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 35 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "optname" defined at g-socket.ads:897, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get_socket_option__optname___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_socket_option" defined at g-socket.ads:893, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get_socket_option
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__option_type

 function get_socket_option #"g-socket.ads" 893 0 0# 
   (socket : int) (level : int) (name : int) (optname : int) : Gnat__sockets__option_type.option_type
 
 predicate get_socket_option__function_guard #"g-socket.ads" 704 0 0# 
   (result : Gnat__sockets__option_type.option_type) (socket : int) (level : int) (name : int) (optname : int) 

end

(* Module for defining the constant "socket" defined at g-socket.ads:902, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__listen_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 902 0 0# "model" "model_trace:4741" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:902, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__listen_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "length" defined at g-socket.ads:903, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__listen_socket__length
 use import "_gnatprove_standard".Main

 function length #"g-socket.ads" 903 0 0# "model" "model_trace:4750" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "length" defined at g-socket.ads:903, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__listen_socket__length___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:912, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__receive_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 912 0 0# "model" "model_trace:4769" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:912, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "flags" defined at g-socket.ads:915, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__receive_socket__flags
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function flags #"g-socket.ads" 915 0 0# "model" "model_trace:4804" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "flags" defined at g-socket.ads:915, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__flags___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:925, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__receive_socket__2__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 925 0 0# "model" "model_trace:4823" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:925, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__2__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "flags" defined at g-socket.ads:929, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__receive_socket__2__flags
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function flags #"g-socket.ads" 929 0 0# "model" "model_trace:4867" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "flags" defined at g-socket.ads:929, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__2__flags___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:936, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__receive_vector__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 936 0 0# "model" "model_trace:4886" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:936, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_vector__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "flags" defined at g-socket.ads:939, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__receive_vector__flags
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function flags #"g-socket.ads" 939 0 0# "model" "model_trace:4917" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "flags" defined at g-socket.ads:939, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_vector__flags___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "occurrence" defined at g-socket.ads:945, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__resolve_exception__occurrence
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function occurrence #"g-socket.ads" 945 0 0# "model_projected" "model_trace:4936" 
   : Ada__exceptions__exception_occurrence.exception_occurrence
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "occurrence" defined at g-socket.ads:945, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__resolve_exception__occurrence___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "resolve_exception" defined at g-socket.ads:944, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__resolve_exception
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 function resolve_exception #"g-socket.ads" 944 0 0# 
   (occurrence : Ada__exceptions__exception_occurrence.exception_occurrence) : int
 
 predicate resolve_exception__function_guard #"g-socket.ads" 621 0 0# 
   (result : int) (occurrence : Ada__exceptions__exception_occurrence.exception_occurrence) 

end

(* Module for defining the constant "socket" defined at g-socket.ads:952, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 952 0 0# "model" "model_trace:4959" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:952, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at g-socket.ads:953, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item #"g-socket.ads" 953 0 0# "model_projected" "model_trace:4968" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:953, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "flags" defined at g-socket.ads:956, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__flags
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function flags #"g-socket.ads" 956 0 0# "model" "model_trace:5004" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "flags" defined at g-socket.ads:956, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__flags___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:970, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__2__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 970 0 0# "model" "model_trace:5027" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:970, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__2__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at g-socket.ads:971, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item #"g-socket.ads" 971 0 0# "model_projected" "model_trace:5036" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:971, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "flags" defined at g-socket.ads:973, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__2__flags
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function flags #"g-socket.ads" 973 0 0# "model" "model_trace:5062" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "flags" defined at g-socket.ads:973, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__2__flags___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:979, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__3__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 979 0 0# "model" "model_trace:5081" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:979, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__3__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at g-socket.ads:980, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__3__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item #"g-socket.ads" 980 0 0# "model_projected" "model_trace:5090" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:980, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at g-socket.ads:982, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__3__to
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function to__ #"g-socket.ads" 982 0 0# "model_projected" "model_trace:5116" 
   : Gnat__sockets__sock_addr_type.sock_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 505 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at g-socket.ads:982, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__3__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "flags" defined at g-socket.ads:983, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_socket__3__flags
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function flags #"g-socket.ads" 983 0 0# "model" "model_trace:5125" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "flags" defined at g-socket.ads:983, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__3__flags___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:989, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_vector__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 989 0 0# "model" "model_trace:5144" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:989, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_vector__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "flags" defined at g-socket.ads:992, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__send_vector__flags
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8

 function flags #"g-socket.ads" 992 0 0# "model" "model_trace:5175" 
   : BV8.t
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1277 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "flags" defined at g-socket.ads:992, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_vector__flags___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:998, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__set_close_on_exec__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 998 0 0# "model" "model_trace:5194" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:998, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set_close_on_exec__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "close_on_exec" defined at g-socket.ads:999, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__set_close_on_exec__close_on_exec
 use import "_gnatprove_standard".Main

 function close_on_exec #"g-socket.ads" 999 0 0# "model" "model_trace:5203" 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 999 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "close_on_exec" defined at g-socket.ads:999, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set_close_on_exec__close_on_exec___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:1009, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__set_socket_option__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 1009 0 0# "model" "model_trace:5230" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1009, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set_socket_option__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "level" defined at g-socket.ads:1010, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__set_socket_option__level
 use import "_gnatprove_standard".Main

 function level #"g-socket.ads" 1010 0 0# "model" "model_trace:5239" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 672 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "level" defined at g-socket.ads:1010, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set_socket_option__level___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "option" defined at g-socket.ads:1011, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__set_socket_option__option
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__option_type

 function option #"g-socket.ads" 1011 0 0# "model_projected" "model_trace:5249" 
   : Gnat__sockets__option_type.option_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 704 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "option" defined at g-socket.ads:1011, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set_socket_option__option___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:1015, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__shutdown_socket__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 1015 0 0# "model" "model_trace:5267" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1015, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__shutdown_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "how" defined at g-socket.ads:1016, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__shutdown_socket__how
 use import "_gnatprove_standard".Main

 function how #"g-socket.ads" 1016 0 0# "model" "model_trace:5276" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 471 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "how" defined at g-socket.ads:1016, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__shutdown_socket__how___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:1024, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__stream__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 1024 0 0# "model" "model_trace:5311" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1024, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__stream__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:1032, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__stream__2__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 1032 0 0# "model" "model_trace:5330" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1032, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__stream__2__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "send_to" defined at g-socket.ads:1033, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__stream__2__send_to
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 function send_to #"g-socket.ads" 1033 0 0# "model_projected" "model_trace:5339" 
   : Gnat__sockets__sock_addr_type.sock_addr_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 505 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "send_to" defined at g-socket.ads:1033, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__stream__2__send_to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "object" defined at a-uncdea.ads:17 instantiated at g-socket.ads:1041, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__free__object
 use export Ada__streams__Troot_stream_typeC
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tfd_setB" defined at g-socket.ads:1191, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tfd_setB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__Tstorage_offsetB
 use        System__storage_elements__Tstorage_offsetB__rep
 use        System__storage_elements__storage_offset
 use        System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element

 type component_type #"g-socket.ads" 505 0 0# =
  System__storage_elements__storage_element.storage_element
 
 function index_1_id #"s-stoele.ads" 64 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__System__storage_elements__storage_element.map, 
 function array_bool_eq = Array__Int__System__storage_elements__storage_element.bool_eq, 
 type index_base_type = System__storage_elements__Tstorage_offsetB.tstorage_offsetB, 
 type index_rep_type = int, 
 function to_rep = System__storage_elements__Tstorage_offsetB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__storage_elements__Tstorage_offsetB.in_range, 
 predicate index_dynamic_property = System__storage_elements__storage_offset.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tfd_setB #"g-socket.ads" 1191 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type tfd_setB__ref #"g-socket.ads" 1191 0 0# =
  { mutable tfd_setB__content "model_trace:" : tfd_setB }
 
 function tfd_setB__ref___projection #"g-socket.ads" 1191 0 0# 
   (a : tfd_setB__ref) : tfd_setB =
  a.tfd_setB__content
 
 meta "model_projection" function tfd_setB__ref___projection
 
 meta "inline : no" function tfd_setB__ref___projection
 
 val tfd_setB__havoc #"g-socket.ads" 1191 0 0# 
   (x : tfd_setB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Tfd_setP1" defined at g-socket.ads:1191, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tfd_setP1
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tfd_setP1 #"g-socket.ads" 1191 0 0# 
 
 function first #"g-socket.ads" 1191 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1191 0 0# 
   : int =
  4100
 
 predicate in_range #"g-socket.ads" 1191 0 0# 
   (x : int)  =
  #"g-socket.ads" 1191 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tfd_setP1, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tfd_setP1__ref #"g-socket.ads" 1191 0 0# =
  { mutable tfd_setP1__content "model_trace:" : tfd_setP1 }
 
 function tfd_setP1__ref___projection #"g-socket.ads" 1191 0 0# 
   (a : tfd_setP1__ref) : tfd_setP1 =
  a.tfd_setP1__content
 
 meta "model_projection" function tfd_setP1__ref___projection
 
 meta "inline : no" function tfd_setP1__ref___projection
 
 val tfd_setP1__havoc #"g-socket.ads" 1191 0 0# 
   (x : tfd_setP1__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tfd_setP1" defined at g-socket.ads:1191, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__Tfd_setP1__rep
 use        Gnat__sockets__Tfd_setP1
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__Tfd_setP1.tfd_setP1, 
 predicate in_range = Gnat__sockets__Tfd_setP1.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "fd_set" defined at g-socket.ads:1191, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__fd_set
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element

 type component_type #"g-socket.ads" 1191 0 0# =
  System__storage_elements__storage_element.storage_element
 
 function first #"s-stoele.ads" 64 0 0# 
   : int =
  1
 
 function last #"s-stoele.ads" 64 0 0# 
   : int =
  4100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__System__storage_elements__storage_element.map, 
 function array_bool_eq = Array__Int__System__storage_elements__storage_element.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "socket_set_type" defined at g-socket.ads:1202, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__socket_set_type__rep
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type
 use        Gnat__sockets__socket_type__rep
 use        Gnat__sockets__fd_set
 use        Array__Int__System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element

 type __split_fields #"s-stoele.ads" 64 0 0# =
  { rec__gnat__sockets__socket_set_type__last "model_trace:.5932" : Gnat__sockets__socket_type.socket_type; rec__gnat__sockets__socket_set_type__set "model_trace:.5943" : Array__Int__System__storage_elements__storage_element.map }
 
 function __split_fields_Last__projection #"g-socket.ads" 1191 0 0# "model_trace:.5932" 
   (a : __split_fields) : Gnat__sockets__socket_type.socket_type =
  a.rec__gnat__sockets__socket_set_type__last
 
 meta "model_projection" function __split_fields_Last__projection
 
 meta "inline : no" function __split_fields_Last__projection
 
 function __split_fields_Set__projection #"g-socket.ads" 1202 0 0# "model_trace:.5943" 
   (a : __split_fields) : Array__Int__System__storage_elements__storage_element.map =
  a.rec__gnat__sockets__socket_set_type__set
 
 meta "model_projection" function __split_fields_Set__projection
 
 meta "inline : no" function __split_fields_Set__projection
 
 type __split_fields__ref #"g-socket.ads" 1202 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_11__projection #"g-socket.ads" 1202 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_11__projection
 
 meta "inline : no" function __split_fields__ref_11__projection
 
 val __split_fields__havoc #"g-socket.ads" 1202 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 1202 0 0# =
  { __split_fields "model_trace:" : __split_fields }
 
 function __rep_26__projection #"g-socket.ads" 1202 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_26__projection
 
 meta "inline : no" function __rep_26__projection
 
 function to_base #"g-socket.ads" 1202 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"g-socket.ads" 1202 0 0# 
   (a : __rep) : __rep =
  a
 
 predicate gnat__sockets__socket_set_type__last__pred #"g-socket.ads" 1202 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1202 0 0# true
 
 val rec__gnat__sockets__socket_set_type__last_ #"g-socket.ads" 1202 0 0# 
   (a : __rep) : Gnat__sockets__socket_type.socket_type
  requires { #"g-socket.ads" 1167 0 0# (gnat__sockets__socket_set_type__last__pred a) }
  ensures { #"g-socket.ads" 1167 0 0# (result = a.__split_fields.rec__gnat__sockets__socket_set_type__last) }
 
 predicate gnat__sockets__socket_set_type__set__pred #"g-socket.ads" 1202 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1202 0 0# true
 
 val rec__gnat__sockets__socket_set_type__set_ #"g-socket.ads" 1202 0 0# 
   (a : __rep) : Array__Int__System__storage_elements__storage_element.map
  requires { #"g-socket.ads" 1191 0 0# (gnat__sockets__socket_set_type__set__pred a) }
  ensures { #"g-socket.ads" 1191 0 0# (result = a.__split_fields.rec__gnat__sockets__socket_set_type__set) }
 
 function bool_eq #"g-socket.ads" 1202 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ((Gnat__sockets__socket_type__rep.to_rep a.__split_fields.rec__gnat__sockets__socket_set_type__last) = (Gnat__sockets__socket_type__rep.to_rep b.__split_fields.rec__gnat__sockets__socket_set_type__last)) /\ ((Gnat__sockets__fd_set.bool_eq a.__split_fields.rec__gnat__sockets__socket_set_type__set b.__split_fields.rec__gnat__sockets__socket_set_type__set) = True) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 1202 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "socket_set_type" defined at g-socket.ads:1202, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__socket_set_type
 use export Gnat__sockets__socket_set_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type socket_set_type #"g-socket.ads" 1202 0 0# =
  __rep
 
 function value__size #"g-socket.ads" 1202 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1202 0 0# 
   (a : socket_set_type) : int
 
 function value__alignment #"g-socket.ads" 1202 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1202 0 0# 
   (a : socket_set_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1202 0 0#  : socket_set_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1202 0 0#  : socket_set_type.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__socket_set_type__last__first__bit #"g-socket.ads" 1202 0 0# 
   : int
 
 function gnat__sockets__socket_set_type__last__last__bit #"g-socket.ads" 1202 0 0# 
   : int
 
 function gnat__sockets__socket_set_type__last__position #"g-socket.ads" 1202 0 0# 
   : int
 
 axiom gnat__sockets__socket_set_type__last__first__bit_axiom :
  ((gnat__sockets__socket_set_type__last__first__bit ) >= 0)
 
 axiom gnat__sockets__socket_set_type__last__last__bit_axiom :
  ((gnat__sockets__socket_set_type__last__last__bit ) > (gnat__sockets__socket_set_type__last__first__bit ))
 
 axiom gnat__sockets__socket_set_type__last__position_axiom :
  ((gnat__sockets__socket_set_type__last__position ) >= 0)
 
 function gnat__sockets__socket_set_type__set__first__bit #"g-socket.ads" 1203 0 0# 
   : int
 
 function gnat__sockets__socket_set_type__set__last__bit #"g-socket.ads" 1203 0 0# 
   : int
 
 function gnat__sockets__socket_set_type__set__position #"g-socket.ads" 1203 0 0# 
   : int
 
 axiom gnat__sockets__socket_set_type__set__first__bit_axiom :
  ((gnat__sockets__socket_set_type__set__first__bit ) >= 0)
 
 axiom gnat__sockets__socket_set_type__set__last__bit_axiom :
  ((gnat__sockets__socket_set_type__set__last__bit ) > (gnat__sockets__socket_set_type__set__first__bit ))
 
 axiom gnat__sockets__socket_set_type__set__position_axiom :
  ((gnat__sockets__socket_set_type__set__position ) >= 0)
 
 function dummy #"g-socket.ads" 1207 0 0# 
   : socket_set_type
 
 type socket_set_type__ref #"g-socket.ads" 1202 0 0# =
  { mutable socket_set_type__content "model_trace:" : socket_set_type }
 
 function socket_set_type__ref___projection #"g-socket.ads" 1202 0 0# 
   (a : socket_set_type__ref) : socket_set_type =
  a.socket_set_type__content
 
 meta "model_projection" function socket_set_type__ref___projection
 
 meta "inline : no" function socket_set_type__ref___projection
 
 val socket_set_type__havoc #"g-socket.ads" 1202 0 0# 
   (x : socket_set_type__ref) : unit
  writes {x}

end

(* Module for defining the constant "socket" defined at g-socket.ads:1056, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__clear__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 1056 0 0# "model" "model_trace:5415" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1056, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__clear__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "source" defined at g-socket.ads:1059, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__copy__source
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 function source #"g-socket.ads" 1059 0 0# "model_projected" "model_trace:5433" 
   : Gnat__sockets__socket_set_type.socket_set_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "source" defined at g-socket.ads:1059, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__copy__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at g-socket.ads:1069, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__is_empty__item
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 function item #"g-socket.ads" 1069 0 0# "model_projected" "model_trace:5505" 
   : Gnat__sockets__socket_set_type.socket_set_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:1069, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__is_empty__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_empty" defined at g-socket.ads:1069, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__is_empty
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 function is_empty #"g-socket.ads" 1069 0 0# 
   (item : Gnat__sockets__socket_set_type.socket_set_type) : bool
 
 predicate is_empty__function_guard #"g-socket.ads" 1202 0 0# 
   (result : bool) (item : Gnat__sockets__socket_set_type.socket_set_type) 

end

(* Module for defining the constant "item" defined at g-socket.ads:1073, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__is_set__item
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 function item #"g-socket.ads" 1073 0 0# "model_projected" "model_trace:5524" 
   : Gnat__sockets__socket_set_type.socket_set_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:1073, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__is_set__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "socket" defined at g-socket.ads:1074, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__is_set__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 1074 0 0# "model" "model_trace:5533" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1074, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__is_set__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_set" defined at g-socket.ads:1072, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__is_set
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 function is_set #"g-socket.ads" 1072 0 0# 
   (item : Gnat__sockets__socket_set_type.socket_set_type) (socket : int) : bool
 
 predicate is_set__function_guard #"g-socket.ads" 1167 0 0# 
   (result : bool) (item : Gnat__sockets__socket_set_type.socket_set_type) (socket : int) 

end

(* Module for defining the constant "socket" defined at g-socket.ads:1077, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__set__socket
 use import "_gnatprove_standard".Main

 function socket #"g-socket.ads" 1077 0 0# "model" "model_trace:5561" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1077, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at g-socket.ads:1080, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__image__4__item
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 function item #"g-socket.ads" 1080 0 0# "model_projected" "model_trace:5579" 
   : Gnat__sockets__socket_set_type.socket_set_type
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:1080, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__image__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "image__4" defined at g-socket.ads:1080, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__image__4
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Gnat__sockets__socket_set_type

 function image__4 #"g-socket.ads" 1080 0 0# 
   (item : Gnat__sockets__socket_set_type.socket_set_type) : Standard__string.string
 
 predicate image__4__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (item : Gnat__sockets__socket_set_type.socket_set_type) 

end

(* Module for defining the constant "timeout" defined at g-socket.ads:1121, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__check_selector__timeout
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_duration

 function timeout #"g-socket.ads" 1121 0 0# "model_projected" "model_trace:5670" 
   : Gnat__sockets__selector_duration.selector_duration
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 441 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "timeout" defined at g-socket.ads:1121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__timeout___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "timeout" defined at g-socket.ads:1146, created in Gnat2Why.Decls.Translate_Constant *)
module Gnat__sockets__check_selector__2__timeout
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_duration

 function timeout #"g-socket.ads" 1146 0 0# "model_projected" "model_trace:5734" 
   : Gnat__sockets__selector_duration.selector_duration
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 441 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "timeout" defined at g-socket.ads:1146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__2__timeout___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T11s" defined at g-socket.ads:1189, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T11s
 use export Gnat__sockets__selector_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__selector_type

 type t11s #"g-socket.ads" 1189 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1189 0 0# 
   (rec__gnat__sockets__selector_type__is_null : bool) (a : Gnat__sockets__selector_type.selector_type)  =
  #"g-socket.ads" 1175 0 0# (rec__gnat__sockets__selector_type__is_null = (Gnat__sockets__selector_type.rec__gnat__sockets__selector_type__is_null a.Gnat__sockets__selector_type.__split_discrs))
 
 val range_check_ #"g-socket.ads" 1175 0 0# 
   (rec__gnat__sockets__selector_type__is_null : bool) (a : Gnat__sockets__selector_type.selector_type) : Gnat__sockets__selector_type.selector_type
  requires { #"g-socket.ads" 1175 0 0# (in_range rec__gnat__sockets__selector_type__is_null a) }
  ensures { #"g-socket.ads" 1175 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1175 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1175 0 0# 
   (a : t11s) : int
 
 function value__alignment #"g-socket.ads" 1189 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1189 0 0# 
   (a : t11s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1189 0 0#  : t11s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1189 0 0#  : t11s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__selector_type__is_null__first__bit #"g-socket.ads" 1189 0 0# 
   : int
 
 function gnat__sockets__selector_type__is_null__last__bit #"g-socket.ads" 1189 0 0# 
   : int
 
 function gnat__sockets__selector_type__is_null__position #"g-socket.ads" 1189 0 0# 
   : int
 
 axiom gnat__sockets__selector_type__is_null__first__bit_axiom :
  ((gnat__sockets__selector_type__is_null__first__bit ) >= 0)
 
 axiom gnat__sockets__selector_type__is_null__last__bit_axiom :
  ((gnat__sockets__selector_type__is_null__last__bit ) > (gnat__sockets__selector_type__is_null__first__bit ))
 
 axiom gnat__sockets__selector_type__is_null__position_axiom :
  ((gnat__sockets__selector_type__is_null__position ) >= 0)
 
 function gnat__sockets__selector_type__r_sig_socket__first__bit #"g-socket.ads" 1175 0 0# 
   : int
 
 function gnat__sockets__selector_type__r_sig_socket__last__bit #"g-socket.ads" 1175 0 0# 
   : int
 
 function gnat__sockets__selector_type__r_sig_socket__position #"g-socket.ads" 1175 0 0# 
   : int
 
 axiom gnat__sockets__selector_type__r_sig_socket__first__bit_axiom :
  ((gnat__sockets__selector_type__r_sig_socket__first__bit ) >= 0)
 
 axiom gnat__sockets__selector_type__r_sig_socket__last__bit_axiom :
  ((gnat__sockets__selector_type__r_sig_socket__last__bit ) > (gnat__sockets__selector_type__r_sig_socket__first__bit ))
 
 axiom gnat__sockets__selector_type__r_sig_socket__position_axiom :
  ((gnat__sockets__selector_type__r_sig_socket__position ) >= 0)
 
 function gnat__sockets__selector_type__w_sig_socket__first__bit #"g-socket.ads" 1181 0 0# 
   : int
 
 function gnat__sockets__selector_type__w_sig_socket__last__bit #"g-socket.ads" 1181 0 0# 
   : int
 
 function gnat__sockets__selector_type__w_sig_socket__position #"g-socket.ads" 1181 0 0# 
   : int
 
 axiom gnat__sockets__selector_type__w_sig_socket__first__bit_axiom :
  ((gnat__sockets__selector_type__w_sig_socket__first__bit ) >= 0)
 
 axiom gnat__sockets__selector_type__w_sig_socket__last__bit_axiom :
  ((gnat__sockets__selector_type__w_sig_socket__last__bit ) > (gnat__sockets__selector_type__w_sig_socket__first__bit ))
 
 axiom gnat__sockets__selector_type__w_sig_socket__position_axiom :
  ((gnat__sockets__selector_type__w_sig_socket__position ) >= 0)
 
 function dummy #"g-socket.ads" 1182 0 0# 
   : t11s
 
 type t11s__ref #"g-socket.ads" 1189 0 0# =
  { mutable t11s__content "model_trace:" : t11s }
 
 function t11s__ref_2__projection #"g-socket.ads" 1189 0 0# 
   (a : t11s__ref) : t11s =
  a.t11s__content
 
 meta "model_projection" function t11s__ref_2__projection
 
 meta "inline : no" function t11s__ref_2__projection
 
 val t11s__havoc #"g-socket.ads" 1189 0 0# 
   (x : t11s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T18s" defined at g-socket.ads:1234, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T18s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t18s #"g-socket.ads" 1234 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1234 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t18s) : int
 
 function value__alignment #"g-socket.ads" 1234 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1234 0 0# 
   (a : t18s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1234 0 0#  : t18s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1234 0 0#  : t18s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1234 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1234 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1234 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t18s
 
 type t18s__ref #"g-socket.ads" 1234 0 0# =
  { mutable t18s__content "model_trace:" : t18s }
 
 function t18s__ref___projection #"g-socket.ads" 1234 0 0# 
   (a : t18s__ref) : t18s =
  a.t18s__content
 
 meta "model_projection" function t18s__ref___projection
 
 meta "inline : no" function t18s__ref___projection
 
 val t18s__havoc #"g-socket.ads" 1234 0 0# 
   (x : t18s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T19s" defined at g-socket.ads:1234, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T19s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t19s #"g-socket.ads" 1234 0 0# 
 
 function first #"g-socket.ads" 1234 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1234 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1234 0 0# 
   (x : int)  =
  #"g-socket.ads" 1234 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t19s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t19s__ref #"g-socket.ads" 1234 0 0# =
  { mutable t19s__content "model_trace:" : t19s }
 
 function t19s__ref___projection #"g-socket.ads" 1234 0 0# 
   (a : t19s__ref) : t19s =
  a.t19s__content
 
 meta "model_projection" function t19s__ref___projection
 
 meta "inline : no" function t19s__ref___projection
 
 val t19s__havoc #"g-socket.ads" 1234 0 0# 
   (x : t19s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T19s" defined at g-socket.ads:1234, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T19s__rep
 use        Gnat__sockets__T19s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__T19s.t19s, 
 predicate in_range = Gnat__sockets__T19s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T20s" defined at g-socket.ads:1234, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T20s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1234 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T21s" defined at g-socket.ads:1236, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T21s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t21s #"g-socket.ads" 1236 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1236 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t21s) : int
 
 function value__alignment #"g-socket.ads" 1236 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1236 0 0# 
   (a : t21s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1236 0 0#  : t21s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1236 0 0#  : t21s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1236 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1236 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1236 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t21s
 
 type t21s__ref #"g-socket.ads" 1236 0 0# =
  { mutable t21s__content "model_trace:" : t21s }
 
 function t21s__ref___projection #"g-socket.ads" 1236 0 0# 
   (a : t21s__ref) : t21s =
  a.t21s__content
 
 meta "model_projection" function t21s__ref___projection
 
 meta "inline : no" function t21s__ref___projection
 
 val t21s__havoc #"g-socket.ads" 1236 0 0# 
   (x : t21s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T22s" defined at g-socket.ads:1236, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T22s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t22s #"g-socket.ads" 1236 0 0# 
 
 function first #"g-socket.ads" 1236 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1236 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1236 0 0# 
   (x : int)  =
  #"g-socket.ads" 1236 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t22s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t22s__ref #"g-socket.ads" 1236 0 0# =
  { mutable t22s__content "model_trace:" : t22s }
 
 function t22s__ref___projection #"g-socket.ads" 1236 0 0# 
   (a : t22s__ref) : t22s =
  a.t22s__content
 
 meta "model_projection" function t22s__ref___projection
 
 meta "inline : no" function t22s__ref___projection
 
 val t22s__havoc #"g-socket.ads" 1236 0 0# 
   (x : t22s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T22s" defined at g-socket.ads:1236, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T22s__rep
 use        Gnat__sockets__T22s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__T22s.t22s, 
 predicate in_range = Gnat__sockets__T22s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T23s" defined at g-socket.ads:1236, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T23s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1236 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T24s" defined at g-socket.ads:1238, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T24s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t24s #"g-socket.ads" 1238 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1238 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t24s) : int
 
 function value__alignment #"g-socket.ads" 1238 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1238 0 0# 
   (a : t24s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1238 0 0#  : t24s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1238 0 0#  : t24s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1238 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1238 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1238 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t24s
 
 type t24s__ref #"g-socket.ads" 1238 0 0# =
  { mutable t24s__content "model_trace:" : t24s }
 
 function t24s__ref___projection #"g-socket.ads" 1238 0 0# 
   (a : t24s__ref) : t24s =
  a.t24s__content
 
 meta "model_projection" function t24s__ref___projection
 
 meta "inline : no" function t24s__ref___projection
 
 val t24s__havoc #"g-socket.ads" 1238 0 0# 
   (x : t24s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T25s" defined at g-socket.ads:1238, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T25s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t25s #"g-socket.ads" 1238 0 0# 
 
 function first #"g-socket.ads" 1238 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1238 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1238 0 0# 
   (x : int)  =
  #"g-socket.ads" 1238 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t25s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t25s__ref #"g-socket.ads" 1238 0 0# =
  { mutable t25s__content "model_trace:" : t25s }
 
 function t25s__ref___projection #"g-socket.ads" 1238 0 0# 
   (a : t25s__ref) : t25s =
  a.t25s__content
 
 meta "model_projection" function t25s__ref___projection
 
 meta "inline : no" function t25s__ref___projection
 
 val t25s__havoc #"g-socket.ads" 1238 0 0# 
   (x : t25s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T25s" defined at g-socket.ads:1238, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T25s__rep
 use        Gnat__sockets__T25s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__T25s.t25s, 
 predicate in_range = Gnat__sockets__T25s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T26s" defined at g-socket.ads:1238, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T26s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1238 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T27s" defined at g-socket.ads:1240, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T27s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t27s #"g-socket.ads" 1240 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1240 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t27s) : int
 
 function value__alignment #"g-socket.ads" 1240 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1240 0 0# 
   (a : t27s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1240 0 0#  : t27s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1240 0 0#  : t27s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1240 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1240 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1240 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t27s
 
 type t27s__ref #"g-socket.ads" 1240 0 0# =
  { mutable t27s__content "model_trace:" : t27s }
 
 function t27s__ref___projection #"g-socket.ads" 1240 0 0# 
   (a : t27s__ref) : t27s =
  a.t27s__content
 
 meta "model_projection" function t27s__ref___projection
 
 meta "inline : no" function t27s__ref___projection
 
 val t27s__havoc #"g-socket.ads" 1240 0 0# 
   (x : t27s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T28s" defined at g-socket.ads:1240, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T28s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t28s #"g-socket.ads" 1240 0 0# 
 
 function first #"g-socket.ads" 1240 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1240 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1240 0 0# 
   (x : int)  =
  #"g-socket.ads" 1240 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t28s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t28s__ref #"g-socket.ads" 1240 0 0# =
  { mutable t28s__content "model_trace:" : t28s }
 
 function t28s__ref___projection #"g-socket.ads" 1240 0 0# 
   (a : t28s__ref) : t28s =
  a.t28s__content
 
 meta "model_projection" function t28s__ref___projection
 
 meta "inline : no" function t28s__ref___projection
 
 val t28s__havoc #"g-socket.ads" 1240 0 0# 
   (x : t28s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T28s" defined at g-socket.ads:1240, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T28s__rep
 use        Gnat__sockets__T28s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__T28s.t28s, 
 predicate in_range = Gnat__sockets__T28s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T29s" defined at g-socket.ads:1240, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T29s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1240 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T30s" defined at g-socket.ads:1243, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T30s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t30s #"g-socket.ads" 1243 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1243 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t30s) : int
 
 function value__alignment #"g-socket.ads" 1243 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1243 0 0# 
   (a : t30s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1243 0 0#  : t30s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1243 0 0#  : t30s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1243 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1243 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1243 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t30s
 
 type t30s__ref #"g-socket.ads" 1243 0 0# =
  { mutable t30s__content "model_trace:" : t30s }
 
 function t30s__ref___projection #"g-socket.ads" 1243 0 0# 
   (a : t30s__ref) : t30s =
  a.t30s__content
 
 meta "model_projection" function t30s__ref___projection
 
 meta "inline : no" function t30s__ref___projection
 
 val t30s__havoc #"g-socket.ads" 1243 0 0# 
   (x : t30s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T31s" defined at g-socket.ads:1243, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T31s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t31s #"g-socket.ads" 1243 0 0# 
 
 function first #"g-socket.ads" 1243 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1243 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1243 0 0# 
   (x : int)  =
  #"g-socket.ads" 1243 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t31s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t31s__ref #"g-socket.ads" 1243 0 0# =
  { mutable t31s__content "model_trace:" : t31s }
 
 function t31s__ref___projection #"g-socket.ads" 1243 0 0# 
   (a : t31s__ref) : t31s =
  a.t31s__content
 
 meta "model_projection" function t31s__ref___projection
 
 meta "inline : no" function t31s__ref___projection
 
 val t31s__havoc #"g-socket.ads" 1243 0 0# 
   (x : t31s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T31s" defined at g-socket.ads:1243, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T31s__rep
 use        Gnat__sockets__T31s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__T31s.t31s, 
 predicate in_range = Gnat__sockets__T31s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T32s" defined at g-socket.ads:1243, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T32s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1243 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T33s" defined at g-socket.ads:1245, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T33s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t33s #"g-socket.ads" 1245 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1245 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t33s) : int
 
 function value__alignment #"g-socket.ads" 1245 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1245 0 0# 
   (a : t33s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1245 0 0#  : t33s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1245 0 0#  : t33s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1245 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1245 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1245 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t33s
 
 type t33s__ref #"g-socket.ads" 1245 0 0# =
  { mutable t33s__content "model_trace:" : t33s }
 
 function t33s__ref___projection #"g-socket.ads" 1245 0 0# 
   (a : t33s__ref) : t33s =
  a.t33s__content
 
 meta "model_projection" function t33s__ref___projection
 
 meta "inline : no" function t33s__ref___projection
 
 val t33s__havoc #"g-socket.ads" 1245 0 0# 
   (x : t33s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T34s" defined at g-socket.ads:1245, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T34s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t34s #"g-socket.ads" 1245 0 0# 
 
 function first #"g-socket.ads" 1245 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1245 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1245 0 0# 
   (x : int)  =
  #"g-socket.ads" 1245 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t34s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t34s__ref #"g-socket.ads" 1245 0 0# =
  { mutable t34s__content "model_trace:" : t34s }
 
 function t34s__ref___projection #"g-socket.ads" 1245 0 0# 
   (a : t34s__ref) : t34s =
  a.t34s__content
 
 meta "model_projection" function t34s__ref___projection
 
 meta "inline : no" function t34s__ref___projection
 
 val t34s__havoc #"g-socket.ads" 1245 0 0# 
   (x : t34s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T34s" defined at g-socket.ads:1245, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T34s__rep
 use        Gnat__sockets__T34s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__T34s.t34s, 
 predicate in_range = Gnat__sockets__T34s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T35s" defined at g-socket.ads:1245, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T35s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1245 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T36s" defined at g-socket.ads:1247, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T36s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t36s #"g-socket.ads" 1247 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1247 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t36s) : int
 
 function value__alignment #"g-socket.ads" 1247 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1247 0 0# 
   (a : t36s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1247 0 0#  : t36s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1247 0 0#  : t36s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1247 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1247 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1247 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t36s
 
 type t36s__ref #"g-socket.ads" 1247 0 0# =
  { mutable t36s__content "model_trace:" : t36s }
 
 function t36s__ref___projection #"g-socket.ads" 1247 0 0# 
   (a : t36s__ref) : t36s =
  a.t36s__content
 
 meta "model_projection" function t36s__ref___projection
 
 meta "inline : no" function t36s__ref___projection
 
 val t36s__havoc #"g-socket.ads" 1247 0 0# 
   (x : t36s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T37s" defined at g-socket.ads:1247, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T37s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t37s #"g-socket.ads" 1247 0 0# 
 
 function first #"g-socket.ads" 1247 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1247 0 0# 
   : int =
  4
 
 predicate in_range #"g-socket.ads" 1247 0 0# 
   (x : int)  =
  #"g-socket.ads" 1247 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t37s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t37s__ref #"g-socket.ads" 1247 0 0# =
  { mutable t37s__content "model_trace:" : t37s }
 
 function t37s__ref___projection #"g-socket.ads" 1247 0 0# 
   (a : t37s__ref) : t37s =
  a.t37s__content
 
 meta "model_projection" function t37s__ref___projection
 
 meta "inline : no" function t37s__ref___projection
 
 val t37s__havoc #"g-socket.ads" 1247 0 0# 
   (x : t37s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T37s" defined at g-socket.ads:1247, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T37s__rep
 use        Gnat__sockets__T37s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Gnat__sockets__T37s.t37s, 
 predicate in_range = Gnat__sockets__T37s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T38s" defined at g-socket.ads:1247, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T38s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 type component_type #"g-socket.ads" 1247 0 0# =
  Gnat__sockets__inet_addr_comp_type.inet_addr_comp_type
 
 function first #"g-socket.ads" 1212 0 0# 
   : int =
  1
 
 function last #"g-socket.ads" 1212 0 0# 
   : int =
  4
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Gnat__sockets__inet_addr_comp_type.map, 
 function array_bool_eq = Array__Int__Gnat__sockets__inet_addr_comp_type.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T40s" defined at g-socket.ads:1249, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T39s__T40s
 use export Gnat__sockets__inet_addr_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type

 type t40s #"g-socket.ads" 1249 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1249 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type)  =
  #"g-socket.ads" 1220 0 0# (rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family a.Gnat__sockets__inet_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 1220 0 0# 
   (rec__gnat__sockets__inet_addr_type__family : int) (a : Gnat__sockets__inet_addr_type.inet_addr_type) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# (in_range rec__gnat__sockets__inet_addr_type__family a) }
  ensures { #"g-socket.ads" 1220 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 1220 0 0# 
   : int
 
 function object__size #"g-socket.ads" 1220 0 0# 
   (a : t40s) : int
 
 function value__alignment #"g-socket.ads" 1249 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1249 0 0# 
   (a : t40s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1249 0 0#  : t40s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1249 0 0#  : t40s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__inet_addr_type__family__first__bit #"g-socket.ads" 1249 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__last__bit #"g-socket.ads" 1249 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__family__position #"g-socket.ads" 1249 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__family__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__family__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__family__last__bit ) > (gnat__sockets__inet_addr_type__family__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__family__position_axiom :
  ((gnat__sockets__inet_addr_type__family__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v6__first__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__last__bit #"g-socket.ads" 488 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v6__position #"g-socket.ads" 488 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v6__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v6__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__last__bit ) > (gnat__sockets__inet_addr_type__sin_v6__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v6__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v6__position ) >= 0)
 
 function gnat__sockets__inet_addr_type__sin_v4__first__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__last__bit #"g-socket.ads" 1226 0 0# 
   : int
 
 function gnat__sockets__inet_addr_type__sin_v4__position #"g-socket.ads" 1226 0 0# 
   : int
 
 axiom gnat__sockets__inet_addr_type__sin_v4__first__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__first__bit ) >= 0)
 
 axiom gnat__sockets__inet_addr_type__sin_v4__last__bit_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__last__bit ) > (gnat__sockets__inet_addr_type__sin_v4__first__bit ))
 
 axiom gnat__sockets__inet_addr_type__sin_v4__position_axiom :
  ((gnat__sockets__inet_addr_type__sin_v4__position ) >= 0)
 
 function dummy #"g-socket.ads" 1223 0 0# 
   : t40s
 
 type t40s__ref #"g-socket.ads" 1249 0 0# =
  { mutable t40s__content "model_trace:" : t40s }
 
 function t40s__ref___projection #"g-socket.ads" 1249 0 0# 
   (a : t40s__ref) : t40s =
  a.t40s__content
 
 meta "model_projection" function t40s__ref___projection
 
 meta "inline : no" function t40s__ref___projection
 
 val t40s__havoc #"g-socket.ads" 1249 0 0# 
   (x : t40s__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "T39s" defined at g-socket.ads:1249, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Gnat__sockets__T39s__rep
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__port_type
 use        Gnat__sockets__port_type__rep
 use        Gnat__sockets__sock_addr_type__T4s
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__T39s__T40s

 type __split_fields #"g-socket.ads" 1249 0 0# =
  { rec__gnat__sockets__sock_addr_type__addr "model_trace:.23219" : Gnat__sockets__T39s__T40s.t40s; rec__gnat__sockets__sock_addr_type__port "model_trace:.23255" : Gnat__sockets__port_type.port_type }
 
 function __split_fields_Addr2__projection #"g-socket.ads" 479 0 0# "model_trace:.23219" 
   (a : __split_fields) : Gnat__sockets__T39s__T40s.t40s =
  a.rec__gnat__sockets__sock_addr_type__addr
 
 meta "model_projection" function __split_fields_Addr2__projection
 
 meta "inline : no" function __split_fields_Addr2__projection
 
 function __split_fields_Port3__projection #"g-socket.ads" 1249 0 0# "model_trace:.23255" 
   (a : __split_fields) : Gnat__sockets__port_type.port_type =
  a.rec__gnat__sockets__sock_addr_type__port
 
 meta "model_projection" function __split_fields_Port3__projection
 
 meta "inline : no" function __split_fields_Port3__projection
 
 type __split_fields__ref #"g-socket.ads" 1249 0 0# =
  { mutable __split_fields__content "model_trace:" : __split_fields }
 
 function __split_fields__ref_12__projection #"g-socket.ads" 1249 0 0# 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref_12__projection
 
 meta "inline : no" function __split_fields__ref_12__projection
 
 val __split_fields__havoc #"g-socket.ads" 1249 0 0# 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep #"g-socket.ads" 1249 0 0# =
  { __split_discrs "model_trace:" : Gnat__sockets__sock_addr_type.__split_discrs; __split_fields "model_trace:" : __split_fields; attr__constrained "model_trace:" : bool }
 
 function __rep_27__projection #"g-socket.ads" 1249 0 0# 
   (a : __rep) : Gnat__sockets__sock_addr_type.__split_discrs =
  a.__split_discrs
 
 meta "model_projection" function __rep_27__projection
 
 meta "inline : no" function __rep_27__projection
 
 function __rep_28__projection #"g-socket.ads" 1249 0 0# 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep_28__projection
 
 meta "inline : no" function __rep_28__projection
 
 function __rep_29__projection #"g-socket.ads" 1249 0 0# 
   (a : __rep) : bool =
  a.attr__constrained
 
 meta "model_projection" function __rep_29__projection
 
 meta "inline : no" function __rep_29__projection
 
 function to_base #"g-socket.ads" 1249 0 0# 
   (a : __rep) : Gnat__sockets__sock_addr_type.sock_addr_type =
  { Gnat__sockets__sock_addr_type.__split_discrs = a.__split_discrs; Gnat__sockets__sock_addr_type.__split_fields = { Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr = a.__split_fields.rec__gnat__sockets__sock_addr_type__addr; Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__port = a.__split_fields.rec__gnat__sockets__sock_addr_type__port }; Gnat__sockets__sock_addr_type.attr__constrained = a.attr__constrained }
 
 function of_base #"g-socket.ads" 1249 0 0# 
   (r : Gnat__sockets__sock_addr_type.sock_addr_type) : __rep =
  { __split_discrs = r.Gnat__sockets__sock_addr_type.__split_discrs; __split_fields = { rec__gnat__sockets__sock_addr_type__addr = r.Gnat__sockets__sock_addr_type.__split_fields.Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr; rec__gnat__sockets__sock_addr_type__port = r.Gnat__sockets__sock_addr_type.__split_fields.Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__port }; attr__constrained = r.Gnat__sockets__sock_addr_type.attr__constrained }
 
 val rec__gnat__sockets__sock_addr_type__family_ #"g-socket.ads" 1249 0 0# 
   (a : __rep) : Gnat__sockets__family_type.family_type
  requires { #"g-socket.ads" 463 0 0# true }
  ensures { #"g-socket.ads" 463 0 0# (result = a.__split_discrs.Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family) }
 
 predicate gnat__sockets__sock_addr_type__addr__pred #"g-socket.ads" 505 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 505 0 0# true
 
 val rec__gnat__sockets__sock_addr_type__addr_ #"g-socket.ads" 1249 0 0# 
   (a : __rep) : Gnat__sockets__T39s__T40s.t40s
  requires { #"g-socket.ads" 1249 0 0# (gnat__sockets__sock_addr_type__addr__pred a) }
  ensures { #"g-socket.ads" 1249 0 0# (result = a.__split_fields.rec__gnat__sockets__sock_addr_type__addr) }
 
 predicate gnat__sockets__sock_addr_type__port__pred #"g-socket.ads" 1249 0 0# 
   (a : __rep)  =
  #"g-socket.ads" 1249 0 0# true
 
 val rec__gnat__sockets__sock_addr_type__port_ #"g-socket.ads" 1249 0 0# 
   (a : __rep) : Gnat__sockets__port_type.port_type
  requires { #"g-socket.ads" 479 0 0# (gnat__sockets__sock_addr_type__port__pred a) }
  ensures { #"g-socket.ads" 479 0 0# (result = a.__split_fields.rec__gnat__sockets__sock_addr_type__port) }
 
 function bool_eq #"g-socket.ads" 1249 0 0# 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Gnat__sockets__family_type__rep.to_rep a.__split_discrs.Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family) = (Gnat__sockets__family_type__rep.to_rep b.__split_discrs.Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family)) /\ ( (gnat__sockets__sock_addr_type__addr__pred a) -> ((Gnat__sockets__T39s__T40s.bool_eq a.__split_fields.rec__gnat__sockets__sock_addr_type__addr b.__split_fields.rec__gnat__sockets__sock_addr_type__addr) = True) ) ) /\ ( (gnat__sockets__sock_addr_type__port__pred a) -> ((Gnat__sockets__port_type__rep.to_rep a.__split_fields.rec__gnat__sockets__sock_addr_type__port) = (Gnat__sockets__port_type__rep.to_rep b.__split_fields.rec__gnat__sockets__sock_addr_type__port)) ) )) then (
   True) else (
   False))
 
 function user_eq #"g-socket.ads" 1249 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "T39s" defined at g-socket.ads:1249, created in Gnat2Why.Types.Translate_Type *)
module Gnat__sockets__T39s
 use export Gnat__sockets__T39s__rep
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__sock_addr_type

 type t39s #"g-socket.ads" 1249 0 0# =
  __rep
 
 predicate in_range #"g-socket.ads" 1249 0 0# 
   (rec__gnat__sockets__sock_addr_type__family : int) (a : Gnat__sockets__sock_addr_type.sock_addr_type)  =
  #"g-socket.ads" 505 0 0# (rec__gnat__sockets__sock_addr_type__family = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family a.Gnat__sockets__sock_addr_type.__split_discrs)))
 
 val range_check_ #"g-socket.ads" 505 0 0# 
   (rec__gnat__sockets__sock_addr_type__family : int) (a : Gnat__sockets__sock_addr_type.sock_addr_type) : Gnat__sockets__sock_addr_type.sock_addr_type
  requires { #"g-socket.ads" 505 0 0# (in_range rec__gnat__sockets__sock_addr_type__family a) }
  ensures { #"g-socket.ads" 505 0 0# (result = a) }
 
 function value__size #"g-socket.ads" 505 0 0# 
   : int
 
 function object__size #"g-socket.ads" 505 0 0# 
   (a : t39s) : int
 
 function value__alignment #"g-socket.ads" 1249 0 0# 
   : int
 
 function object__alignment #"g-socket.ads" 1249 0 0# 
   (a : t39s) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"g-socket.ads" 1249 0 0#  : t39s.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"g-socket.ads" 1249 0 0#  : t39s.
   ((object__alignment a) >= 0))
 
 function gnat__sockets__sock_addr_type__family__first__bit #"g-socket.ads" 1249 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__family__last__bit #"g-socket.ads" 1249 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__family__position #"g-socket.ads" 1249 0 0# 
   : int
 
 axiom gnat__sockets__sock_addr_type__family__first__bit_axiom :
  ((gnat__sockets__sock_addr_type__family__first__bit ) >= 0)
 
 axiom gnat__sockets__sock_addr_type__family__last__bit_axiom :
  ((gnat__sockets__sock_addr_type__family__last__bit ) > (gnat__sockets__sock_addr_type__family__first__bit ))
 
 axiom gnat__sockets__sock_addr_type__family__position_axiom :
  ((gnat__sockets__sock_addr_type__family__position ) >= 0)
 
 function gnat__sockets__sock_addr_type__addr__first__bit #"g-socket.ads" 505 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__addr__last__bit #"g-socket.ads" 505 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__addr__position #"g-socket.ads" 505 0 0# 
   : int
 
 axiom gnat__sockets__sock_addr_type__addr__first__bit_axiom :
  ((gnat__sockets__sock_addr_type__addr__first__bit ) >= 0)
 
 axiom gnat__sockets__sock_addr_type__addr__last__bit_axiom :
  ((gnat__sockets__sock_addr_type__addr__last__bit ) > (gnat__sockets__sock_addr_type__addr__first__bit ))
 
 axiom gnat__sockets__sock_addr_type__addr__position_axiom :
  ((gnat__sockets__sock_addr_type__addr__position ) >= 0)
 
 function gnat__sockets__sock_addr_type__port__first__bit #"g-socket.ads" 506 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__port__last__bit #"g-socket.ads" 506 0 0# 
   : int
 
 function gnat__sockets__sock_addr_type__port__position #"g-socket.ads" 506 0 0# 
   : int
 
 axiom gnat__sockets__sock_addr_type__port__first__bit_axiom :
  ((gnat__sockets__sock_addr_type__port__first__bit ) >= 0)
 
 axiom gnat__sockets__sock_addr_type__port__last__bit_axiom :
  ((gnat__sockets__sock_addr_type__port__last__bit ) > (gnat__sockets__sock_addr_type__port__first__bit ))
 
 axiom gnat__sockets__sock_addr_type__port__position_axiom :
  ((gnat__sockets__sock_addr_type__port__position ) >= 0)
 
 function dummy #"g-socket.ads" 507 0 0# 
   : t39s
 
 type t39s__ref #"g-socket.ads" 1249 0 0# =
  { mutable t39s__content "model_trace:" : t39s }
 
 function t39s__ref___projection #"g-socket.ads" 1249 0 0# 
   (a : t39s__ref) : t39s =
  a.t39s__content
 
 meta "model_projection" function t39s__ref___projection
 
 meta "inline : no" function t39s__ref___projection
 
 val t39s__havoc #"g-socket.ads" 1249 0 0# 
   (x : t39s__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__chars
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type chars #"s-crtl.ads" 41 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-crtl.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 41 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 41 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 41 0 0# 
   (x : BV32.t)  =
  #"s-crtl.ads" 41 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-crtl.ads" 41 0 0# 
   (x : int)  =
  #"s-crtl.ads" 41 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = chars, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type chars__ref #"s-crtl.ads" 41 0 0# =
  { mutable chars__content "model_trace:" : chars }
 
 function chars__ref___projection #"s-crtl.ads" 41 0 0# 
   (a : chars__ref) : chars =
  a.chars__content
 
 meta "model_projection" function chars__ref___projection
 
 meta "inline : no" function chars__ref___projection
 
 val chars__havoc #"s-crtl.ads" 41 0 0# 
   (x : chars__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__chars__rep
 use        System__crtl__chars
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = System__crtl__chars.chars, 
 predicate in_range = System__crtl__chars.in_range, 
 predicate in_range_int = System__crtl__chars.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = System__crtl__chars.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__dirs
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type dirs #"s-crtl.ads" 47 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-crtl.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 47 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 47 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 47 0 0# 
   (x : BV32.t)  =
  #"s-crtl.ads" 47 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-crtl.ads" 47 0 0# 
   (x : int)  =
  #"s-crtl.ads" 47 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = dirs, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type dirs__ref #"s-crtl.ads" 47 0 0# =
  { mutable dirs__content "model_trace:" : dirs }
 
 function dirs__ref___projection #"s-crtl.ads" 47 0 0# 
   (a : dirs__ref) : dirs =
  a.dirs__content
 
 meta "model_projection" function dirs__ref___projection
 
 meta "inline : no" function dirs__ref___projection
 
 val dirs__havoc #"s-crtl.ads" 47 0 0# 
   (x : dirs__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__dirs__rep
 use        System__crtl__dirs
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = System__crtl__dirs.dirs, 
 predicate in_range = System__crtl__dirs.in_range, 
 predicate in_range_int = System__crtl__dirs.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = System__crtl__dirs.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__files
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type files #"s-crtl.ads" 50 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"s-crtl.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 50 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 50 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 50 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 50 0 0# 
   (x : BV32.t)  =
  #"s-crtl.ads" 50 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"s-crtl.ads" 50 0 0# 
   (x : int)  =
  #"s-crtl.ads" 50 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = files, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type files__ref #"s-crtl.ads" 50 0 0# =
  { mutable files__content "model_trace:" : files }
 
 function files__ref___projection #"s-crtl.ads" 50 0 0# 
   (a : files__ref) : files =
  a.files__content
 
 meta "model_projection" function files__ref___projection
 
 meta "inline : no" function files__ref___projection
 
 val files__havoc #"s-crtl.ads" 50 0 0# 
   (x : files__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__files__rep
 use        System__crtl__files
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = System__crtl__files.files, 
 predicate in_range = System__crtl__files.in_range, 
 predicate in_range_int = System__crtl__files.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = System__crtl__files.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ #"s-crtl.ads" 53 0 0# 
 
 function first #"s-crtl.ads" 53 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 53 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 53 0 0# 
   (x : int)  =
  #"s-crtl.ads" 53 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type int____ref #"s-crtl.ads" 53 0 0# =
  { mutable int____content "model_trace:" : int__ }
 
 function int____ref_2__projection #"s-crtl.ads" 53 0 0# 
   (a : int____ref) : int__ =
  a.int____content
 
 meta "model_projection" function int____ref_2__projection
 
 meta "inline : no" function int____ref_2__projection
 
 val int____havoc #"s-crtl.ads" 53 0 0# 
   (x : int____ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int__rep
 use        System__crtl__int
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__int.int__, 
 predicate in_range = System__crtl__int.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__TlongB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tlongB #"s-crtl.ads" 55 0 0# 
 
 function first #"s-crtl.ads" 55 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 55 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 55 0 0# 
   (x : int)  =
  #"s-crtl.ads" 55 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tlongB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tlongB__ref #"s-crtl.ads" 55 0 0# =
  { mutable tlongB__content "model_trace:" : tlongB }
 
 function tlongB__ref_2__projection #"s-crtl.ads" 55 0 0# 
   (a : tlongB__ref) : tlongB =
  a.tlongB__content
 
 meta "model_projection" function tlongB__ref_2__projection
 
 meta "inline : no" function tlongB__ref_2__projection
 
 val tlongB__havoc #"s-crtl.ads" 55 0 0# 
   (x : tlongB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__TlongB__rep
 use        System__crtl__TlongB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__TlongB.tlongB, 
 predicate in_range = System__crtl__TlongB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long #"s-crtl.ads" 55 0 0# 
 
 function first #"s-crtl.ads" 55 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 55 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 55 0 0# 
   (x : int)  =
  #"s-crtl.ads" 55 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long__ref #"s-crtl.ads" 55 0 0# =
  { mutable long__content "model_trace:" : long }
 
 function long__ref_2__projection #"s-crtl.ads" 55 0 0# 
   (a : long__ref) : long =
  a.long__content
 
 meta "model_projection" function long__ref_2__projection
 
 meta "inline : no" function long__ref_2__projection
 
 val long__havoc #"s-crtl.ads" 55 0 0# 
   (x : long__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__long__rep
 use        System__crtl__long
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__long.long, 
 predicate in_range = System__crtl__long.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__off_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type off_t #"s-crtl.ads" 58 0 0# 
 
 function first #"s-crtl.ads" 58 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 58 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 58 0 0# 
   (x : int)  =
  #"s-crtl.ads" 58 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = off_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type off_t__ref #"s-crtl.ads" 58 0 0# =
  { mutable off_t__content "model_trace:" : off_t }
 
 function off_t__ref___projection #"s-crtl.ads" 58 0 0# 
   (a : off_t__ref) : off_t =
  a.off_t__content
 
 meta "model_projection" function off_t__ref___projection
 
 meta "inline : no" function off_t__ref___projection
 
 val off_t__havoc #"s-crtl.ads" 58 0 0# 
   (x : off_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__off_t__rep
 use        System__crtl__off_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__off_t.off_t, 
 predicate in_range = System__crtl__off_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type size_t #"s-crtl.ads" 60 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"s-crtl.ads" 60 0 0# 
   : BV32.t
 
 function first #"s-crtl.ads" 60 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"s-crtl.ads" 60 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"s-crtl.ads" 60 0 0# 
   : int =
  0
 
 function last_int #"s-crtl.ads" 60 0 0# 
   : int =
  4294967295
 
 predicate in_range #"s-crtl.ads" 60 0 0# 
   (x : BV32.t)  =
  #"s-crtl.ads" 60 0 0# true
 
 predicate in_range_int #"s-crtl.ads" 60 0 0# 
   (x : int)  =
  #"s-crtl.ads" 60 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type size_t__ref #"s-crtl.ads" 60 0 0# =
  { mutable size_t__content "model_trace:" : size_t }
 
 function size_t__ref_2__projection #"s-crtl.ads" 60 0 0# 
   (a : size_t__ref) : size_t =
  a.size_t__content
 
 meta "model_projection" function size_t__ref_2__projection
 
 meta "inline : no" function size_t__ref_2__projection
 
 val size_t__havoc #"s-crtl.ads" 60 0 0# 
   (x : size_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__size_t__rep
 use        System__crtl__size_t
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = System__crtl__size_t.size_t, 
 predicate in_range = System__crtl__size_t.in_range, 
 predicate in_range_int = System__crtl__size_t.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tssize_tB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tssize_tB #"s-crtl.ads" 62 0 0# 
 
 function first #"s-crtl.ads" 62 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 62 0 0# 
   (x : int)  =
  #"s-crtl.ads" 62 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tssize_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tssize_tB__ref #"s-crtl.ads" 62 0 0# =
  { mutable tssize_tB__content "model_trace:" : tssize_tB }
 
 function tssize_tB__ref___projection #"s-crtl.ads" 62 0 0# 
   (a : tssize_tB__ref) : tssize_tB =
  a.tssize_tB__content
 
 meta "model_projection" function tssize_tB__ref___projection
 
 meta "inline : no" function tssize_tB__ref___projection
 
 val tssize_tB__havoc #"s-crtl.ads" 62 0 0# 
   (x : tssize_tB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tssize_tB__rep
 use        System__crtl__Tssize_tB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__Tssize_tB.tssize_tB, 
 predicate in_range = System__crtl__Tssize_tB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__ssize_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ssize_t #"s-crtl.ads" 62 0 0# 
 
 function first #"s-crtl.ads" 62 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"s-crtl.ads" 62 0 0# 
   : int =
  2147483647
 
 predicate in_range #"s-crtl.ads" 62 0 0# 
   (x : int)  =
  #"s-crtl.ads" 62 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ssize_t__ref #"s-crtl.ads" 62 0 0# =
  { mutable ssize_t__content "model_trace:" : ssize_t }
 
 function ssize_t__ref___projection #"s-crtl.ads" 62 0 0# 
   (a : ssize_t__ref) : ssize_t =
  a.ssize_t__content
 
 meta "model_projection" function ssize_t__ref___projection
 
 meta "inline : no" function ssize_t__ref___projection
 
 val ssize_t__havoc #"s-crtl.ads" 62 0 0# 
   (x : ssize_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__ssize_t__rep
 use        System__crtl__ssize_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__ssize_t.ssize_t, 
 predicate in_range = System__crtl__ssize_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Tint64B" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tint64B
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tint64B #"s-crtl.ads" 65 0 0# 
 
 function first #"s-crtl.ads" 65 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-crtl.ads" 65 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-crtl.ads" 65 0 0# 
   (x : int)  =
  #"s-crtl.ads" 65 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tint64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tint64B__ref #"s-crtl.ads" 65 0 0# =
  { mutable tint64B__content "model_trace:" : tint64B }
 
 function tint64B__ref___projection #"s-crtl.ads" 65 0 0# 
   (a : tint64B__ref) : tint64B =
  a.tint64B__content
 
 meta "model_projection" function tint64B__ref___projection
 
 meta "inline : no" function tint64B__ref___projection
 
 val tint64B__havoc #"s-crtl.ads" 65 0 0# 
   (x : tint64B__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Tint64B" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tint64B__rep
 use        System__crtl__Tint64B
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__Tint64B.tint64B, 
 predicate in_range = System__crtl__Tint64B.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "int64" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int64 #"s-crtl.ads" 65 0 0# 
 
 function first #"s-crtl.ads" 65 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"s-crtl.ads" 65 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"s-crtl.ads" 65 0 0# 
   (x : int)  =
  #"s-crtl.ads" 65 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type int64__ref #"s-crtl.ads" 65 0 0# =
  { mutable int64__content "model_trace:" : int64 }
 
 function int64__ref___projection #"s-crtl.ads" 65 0 0# 
   (a : int64__ref) : int64 =
  a.int64__content
 
 meta "model_projection" function int64__ref___projection
 
 meta "inline : no" function int64__ref___projection
 
 val int64__havoc #"s-crtl.ads" 65 0 0# 
   (x : int64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "int64" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int64__rep
 use        System__crtl__int64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__int64.int64, 
 predicate in_range = System__crtl__int64.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "filename_encoding" defined at s-crtl.ads:72, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__filename_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type filename_encoding #"s-crtl.ads" 72 0 0# 
 
 function first #"s-crtl.ads" 72 0 0# 
   : int =
  0
 
 function last #"s-crtl.ads" 72 0 0# 
   : int =
  2
 
 predicate in_range #"s-crtl.ads" 72 0 0# 
   (x : int)  =
  #"s-crtl.ads" 72 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = filename_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type filename_encoding__ref #"s-crtl.ads" 72 0 0# =
  { mutable filename_encoding__content "model_trace:" : filename_encoding }
 
 function filename_encoding__ref___projection #"s-crtl.ads" 72 0 0# 
   (a : filename_encoding__ref) : filename_encoding =
  a.filename_encoding__content
 
 meta "model_projection" function filename_encoding__ref___projection
 
 meta "inline : no" function filename_encoding__ref___projection
 
 val filename_encoding__havoc #"s-crtl.ads" 72 0 0# 
   (x : filename_encoding__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "filename_encoding" defined at s-crtl.ads:72, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__filename_encoding__rep
 use        System__crtl__filename_encoding
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__crtl__filename_encoding.filename_encoding, 
 predicate in_range = System__crtl__filename_encoding.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "a" defined at s-crtl.ads:85, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strlen__a
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function a #"s-crtl.ads" 85 0 0# "model" "model_trace:18314" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strlen__a___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "strlen" defined at s-crtl.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strlen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function strlen #"s-crtl.ads" 85 0 0# 
   (a : BV32.t) : BV32.t
 
 predicate strlen__function_guard #"s-crtl.ads" 60 0 0# 
   (result : BV32.t) (a : BV32.t) 

end

(* Module for defining the constant "dest" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__dest
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function dest #"s-crtl.ads" 88 0 0# "model" "model_trace:18343" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dest" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__dest___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "src" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__src
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function src #"s-crtl.ads" 88 0 0# "model" "model_trace:18350" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "src" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__src___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__n
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function n #"s-crtl.ads" 88 0 0# "model" "model_trace:18364" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__n___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "a" defined at s-crtl.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__atoi__a
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function a #"s-crtl.ads" 95 0 0# "model" "model_trace:18390" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__atoi__a___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "atoi" defined at s-crtl.ads:95, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__atoi
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function atoi #"s-crtl.ads" 95 0 0# 
   (a : BV32.t) : int
 
 predicate atoi__function_guard #"system.ads" 1 0 0# 
   (result : int) (a : BV32.t) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__clearerr__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 98 0 0# "model" "model_trace:18419" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__clearerr__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at s-crtl.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup__handle
 use import "_gnatprove_standard".Main

 function handle #"s-crtl.ads" 101 0 0# "model" "model_trace:18445" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup__handle___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "dup" defined at s-crtl.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup
 use import "_gnatprove_standard".Main

 function dup #"s-crtl.ads" 101 0 0# 
   (handle : int) : int
 
 predicate dup__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (handle : int) 

end

(* Module for defining the constant "from" defined at s-crtl.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__from
 use import "_gnatprove_standard".Main

 function from #"s-crtl.ads" 104 0 0# "model" "model_trace:18472" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "from" defined at s-crtl.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__from___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at s-crtl.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__to
 use import "_gnatprove_standard".Main

 function to__ #"s-crtl.ads" 104 0 0# "model" "model_trace:18479" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at s-crtl.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "dup2" defined at s-crtl.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup2
 use import "_gnatprove_standard".Main

 function dup2 #"s-crtl.ads" 104 0 0# 
   (from : int) (to__ : int) : int
 
 predicate dup2__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (from : int) (to__ : int) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fclose__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 107 0 0# "model" "model_trace:18507" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fclose__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fclose" defined at s-crtl.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fclose
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fclose #"s-crtl.ads" 107 0 0# 
   (stream : BV32.t) : int
 
 predicate fclose__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "handle" defined at s-crtl.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__handle
 use import "_gnatprove_standard".Main

 function handle #"s-crtl.ads" 110 0 0# "model" "model_trace:18534" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__handle___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 110 0 0# "model" "model_trace:18543" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fdopen" defined at s-crtl.ads:110, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fdopen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fdopen #"s-crtl.ads" 110 0 0# 
   (handle : int) (mode : BV32.t) : BV32.t
 
 predicate fdopen__function_guard #"s-crtl.ads" 50 0 0# 
   (result : BV32.t) (handle : int) (mode : BV32.t) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fflush__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 113 0 0# "model" "model_trace:18570" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fflush__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fflush" defined at s-crtl.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fflush
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fflush #"s-crtl.ads" 113 0 0# 
   (stream : BV32.t) : int
 
 predicate fflush__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgetc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 116 0 0# "model" "model_trace:18597" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:116, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgetc__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fgetc" defined at s-crtl.ads:116, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgetc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fgetc #"s-crtl.ads" 116 0 0# 
   (stream : BV32.t) : int
 
 predicate fgetc__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "strng" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__strng
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function strng #"s-crtl.ads" 119 0 0# "model" "model_trace:18624" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__strng___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__n
 use import "_gnatprove_standard".Main

 function n #"s-crtl.ads" 119 0 0# "model" "model_trace:18633" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__n___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 119 0 0# "model" "model_trace:18642" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fgets" defined at s-crtl.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgets
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fgets #"s-crtl.ads" 119 0 0# 
   (strng : BV32.t) (n : int) (stream : BV32.t) : BV32.t
 
 predicate fgets__function_guard #"s-crtl.ads" 41 0 0# 
   (result : BV32.t) (strng : BV32.t) (n : int) (stream : BV32.t) 

end

(* Module for defining the constant "filename" defined at s-crtl.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 123 0 0# "model" "model_trace:18669" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__filename___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:124, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 124 0 0# "model" "model_trace:18678" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__encoding
 use import "_gnatprove_standard".Main

 function encoding #"s-crtl.ads" 125 0 0# "model" "model_trace:18687" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__encoding___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fopen" defined at s-crtl.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fopen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fopen #"s-crtl.ads" 122 0 0# 
   (filename : BV32.t) (mode : BV32.t) (encoding : int) : BV32.t
 
 predicate fopen__function_guard #"s-crtl.ads" 50 0 0# 
   (result : BV32.t) (filename : BV32.t) (mode : BV32.t) (encoding : int) 

end

(* Module for defining the constant "c" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__c
 use import "_gnatprove_standard".Main

 function c #"s-crtl.ads" 128 0 0# "model" "model_trace:18715" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__c___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 128 0 0# "model" "model_trace:18724" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputc" defined at s-crtl.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fputc #"s-crtl.ads" 128 0 0# 
   (c : int) (stream : BV32.t) : int
 
 predicate fputc__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (c : int) (stream : BV32.t) 

end

(* Module for defining the constant "c" defined at s-crtl.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__c
 use import "_gnatprove_standard".Main

 function c #"s-crtl.ads" 131 0 0# "model" "model_trace:18751" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__c___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 131 0 0# "model" "model_trace:18760" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputwc" defined at s-crtl.ads:131, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputwc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fputwc #"s-crtl.ads" 131 0 0# 
   (c : int) (stream : BV32.t) : int
 
 predicate fputwc__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (c : int) (stream : BV32.t) 

end

(* Module for defining the constant "strng" defined at s-crtl.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__strng
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function strng #"s-crtl.ads" 134 0 0# "model" "model_trace:18787" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__strng___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 134 0 0# "model" "model_trace:18796" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fputs" defined at s-crtl.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputs
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fputs #"s-crtl.ads" 134 0 0# 
   (strng : BV32.t) (stream : BV32.t) : int
 
 predicate fputs__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (strng : BV32.t) (stream : BV32.t) 

end

(* Module for defining the constant "ptr" defined at s-crtl.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__free__ptr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ptr #"s-crtl.ads" 137 0 0# "model" "model_trace:18823" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__free__ptr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filename" defined at s-crtl.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 141 0 0# "model" "model_trace:18851" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__filename___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 142 0 0# "model" "model_trace:18860" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 143 0 0# "model" "model_trace:18869" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__encoding
 use import "_gnatprove_standard".Main

 function encoding #"s-crtl.ads" 144 0 0# "model" "model_trace:18878" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__encoding___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "freopen" defined at s-crtl.ads:140, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__freopen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function freopen #"s-crtl.ads" 140 0 0# 
   (filename : BV32.t) (mode : BV32.t) (stream : BV32.t) (encoding : int) : BV32.t
 
 predicate freopen__function_guard #"s-crtl.ads" 50 0 0# 
   (result : BV32.t) (filename : BV32.t) (mode : BV32.t) (stream : BV32.t) (encoding : int) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 148 0 0# "model" "model_trace:18906" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:148, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__offset
 use import "_gnatprove_standard".Main

 function offset #"s-crtl.ads" 149 0 0# "model" "model_trace:18915" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 55 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__offset___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__origin
 use import "_gnatprove_standard".Main

 function origin #"s-crtl.ads" 150 0 0# "model" "model_trace:18924" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__origin___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fseek" defined at s-crtl.ads:147, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fseek #"s-crtl.ads" 147 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int
 
 predicate fseek__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (stream : BV32.t) (offset : int) (origin : int) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 154 0 0# "model" "model_trace:18951" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__offset
 use import "_gnatprove_standard".Main

 function offset #"s-crtl.ads" 155 0 0# "model" "model_trace:18960" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 65 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__offset___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__origin
 use import "_gnatprove_standard".Main

 function origin #"s-crtl.ads" 156 0 0# "model" "model_trace:18969" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:156, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__origin___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fseek64" defined at s-crtl.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fseek64 #"s-crtl.ads" 153 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int
 
 predicate fseek64__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (stream : BV32.t) (offset : int) (origin : int) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 159 0 0# "model" "model_trace:18996" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ftell" defined at s-crtl.ads:159, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ftell #"s-crtl.ads" 159 0 0# 
   (stream : BV32.t) : int
 
 predicate ftell__function_guard #"s-crtl.ads" 55 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:162, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell64__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 162 0 0# "model" "model_trace:19023" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:162, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell64__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ftell64" defined at s-crtl.ads:162, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ftell64 #"s-crtl.ads" 162 0 0# 
   (stream : BV32.t) : int
 
 predicate ftell64__function_guard #"s-crtl.ads" 65 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "s" defined at s-crtl.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__getenv__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"s-crtl.ads" 165 0 0# "model_projected" "model_trace:19050" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-crtl.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__getenv__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "getenv" defined at s-crtl.ads:165, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__getenv
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__string

 function getenv #"s-crtl.ads" 165 0 0# 
   (s : Standard__string.string) : BV32.t
 
 predicate getenv__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (s : Standard__string.string) 

end

(* Module for defining the constant "handle" defined at s-crtl.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__isatty__handle
 use import "_gnatprove_standard".Main

 function handle #"s-crtl.ads" 168 0 0# "model" "model_trace:19079" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__isatty__handle___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "isatty" defined at s-crtl.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__isatty
 use import "_gnatprove_standard".Main

 function isatty #"s-crtl.ads" 168 0 0# 
   (handle : int) : int
 
 predicate isatty__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (handle : int) 

end

(* Module for defining the constant "fd" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 171 0 0# "model" "model_trace:19106" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__fd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__offset
 use import "_gnatprove_standard".Main

 function offset #"s-crtl.ads" 171 0 0# "model" "model_trace:19115" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__offset___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "direction" defined at s-crtl.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__direction
 use import "_gnatprove_standard".Main

 function direction #"s-crtl.ads" 171 0 0# "model" "model_trace:19124" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "direction" defined at s-crtl.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__direction___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "lseek" defined at s-crtl.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__lseek
 use import "_gnatprove_standard".Main

 function lseek #"s-crtl.ads" 171 0 0# 
   (fd : int) (offset : int) (direction : int) : int
 
 predicate lseek__function_guard #"s-crtl.ads" 58 0 0# 
   (result : int) (fd : int) (offset : int) (direction : int) 

end

(* Module for defining the constant "size" defined at s-crtl.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__malloc__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"s-crtl.ads" 174 0 0# "model" "model_trace:19151" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__malloc__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "malloc" defined at s-crtl.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__malloc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function malloc #"s-crtl.ads" 174 0 0# 
   (size : BV32.t) : BV32.t
 
 predicate malloc__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (size : BV32.t) 

end

(* Module for defining the constant "s1" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s1
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s1 #"s-crtl.ads" 177 0 0# "model" "model_trace:19180" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s2 #"s-crtl.ads" 177 0 0# "model" "model_trace:19191" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__n
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function n #"s-crtl.ads" 177 0 0# "model" "model_trace:19202" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__n___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s1" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s1
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s1 #"s-crtl.ads" 180 0 0# "model" "model_trace:19228" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s1___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function s2 #"s-crtl.ads" 180 0 0# "model" "model_trace:19239" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s2___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__n
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function n #"s-crtl.ads" 180 0 0# "model" "model_trace:19250" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__n___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "template" defined at s-crtl.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mktemp__template
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function template #"s-crtl.ads" 183 0 0# "model" "model_trace:19276" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "template" defined at s-crtl.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mktemp__template___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__pclose__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 186 0 0# "model" "model_trace:19302" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__pclose__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "pclose" defined at s-crtl.ads:186, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__pclose
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function pclose #"s-crtl.ads" 186 0 0# 
   (stream : BV32.t) : int
 
 predicate pclose__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "command" defined at s-crtl.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__command
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function command #"s-crtl.ads" 189 0 0# "model" "model_trace:19331" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "command" defined at s-crtl.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__command___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function mode #"s-crtl.ads" 189 0 0# "model" "model_trace:19338" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "popen" defined at s-crtl.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__popen
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function popen #"s-crtl.ads" 189 0 0# 
   (command : BV32.t) (mode : BV32.t) : BV32.t
 
 predicate popen__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (command : BV32.t) (mode : BV32.t) 

end

(* Module for defining the constant "ptr" defined at s-crtl.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__ptr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ptr #"s-crtl.ads" 193 0 0# "model" "model_trace:19372" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 108 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__ptr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"s-crtl.ads" 193 0 0# "model" "model_trace:19383" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "realloc" defined at s-crtl.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__realloc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function realloc #"s-crtl.ads" 192 0 0# 
   (ptr : BV32.t) (size : BV32.t) : BV32.t
 
 predicate realloc__function_guard #"system.ads" 108 0 0# 
   (result : BV32.t) (ptr : BV32.t) (size : BV32.t) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:196, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rewind__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 196 0 0# "model" "model_trace:19412" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:196, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rewind__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:199, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rmdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name #"s-crtl.ads" 199 0 0# "model_projected" "model_trace:19438" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rmdir__dir_name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "rmdir" defined at s-crtl.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rmdir
 use import "_gnatprove_standard".Main
 use        Standard__string

 function rmdir #"s-crtl.ads" 199 0 0# 
   (dir_name : Standard__string.string) : int
 
 predicate rmdir__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (dir_name : Standard__string.string) 

end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__chdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name #"s-crtl.ads" 202 0 0# "model_projected" "model_trace:19465" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:202, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__chdir__dir_name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "chdir" defined at s-crtl.ads:202, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__chdir
 use import "_gnatprove_standard".Main
 use        Standard__string

 function chdir #"s-crtl.ads" 202 0 0# 
   (dir_name : Standard__string.string) : int
 
 predicate chdir__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (dir_name : Standard__string.string) 

end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function dir_name #"s-crtl.ads" 206 0 0# "model_projected" "model_trace:19492" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__dir_name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__encoding
 use import "_gnatprove_standard".Main

 function encoding #"s-crtl.ads" 207 0 0# "model" "model_trace:19501" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 72 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__encoding___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mkdir" defined at s-crtl.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mkdir
 use import "_gnatprove_standard".Main
 use        Standard__string

 function mkdir #"s-crtl.ads" 205 0 0# 
   (dir_name : Standard__string.string) (encoding : int) : int
 
 predicate mkdir__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (dir_name : Standard__string.string) (encoding : int) 

end

(* Module for defining the constant "stream" defined at s-crtl.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 211 0 0# "model" "model_trace:19529" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"s-crtl.ads" 212 0 0# "model" "model_trace:19538" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__mode
 use import "_gnatprove_standard".Main

 function mode #"s-crtl.ads" 213 0 0# "model" "model_trace:19547" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"s-crtl.ads" 214 0 0# "model" "model_trace:19556" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setvbuf" defined at s-crtl.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__setvbuf
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function setvbuf #"s-crtl.ads" 210 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int
 
 predicate setvbuf__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) 

end

(* Module for defining the constant "str" defined at s-crtl.ads:217, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__tmpnam__str
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function str #"s-crtl.ads" 217 0 0# "model" "model_trace:19583" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "str" defined at s-crtl.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__tmpnam__str___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tmpfile" defined at s-crtl.ads:220, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpfile
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function tmpfile #"s-crtl.ads" 220 0 0# 
   (__void_param : unit) : BV32.t
 
 predicate tmpfile__function_guard #"s-crtl.ads" 50 0 0# 
   (result : BV32.t) (__void_param : unit) 

end

(* Module for defining the constant "c" defined at s-crtl.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__c
 use import "_gnatprove_standard".Main

 function c #"s-crtl.ads" 223 0 0# "model" "model_trace:19627" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__c___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"s-crtl.ads" 223 0 0# "model" "model_trace:19636" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 50 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ungetc" defined at s-crtl.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ungetc
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ungetc #"s-crtl.ads" 223 0 0# 
   (c : int) (stream : BV32.t) : int
 
 predicate ungetc__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (c : int) (stream : BV32.t) 

end

(* Module for defining the constant "filename" defined at s-crtl.ads:226, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__unlink__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 226 0 0# "model" "model_trace:19663" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__unlink__filename___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "unlink" defined at s-crtl.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__unlink
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function unlink #"s-crtl.ads" 226 0 0# 
   (filename : BV32.t) : int
 
 predicate unlink__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (filename : BV32.t) 

end

(* Module for defining the constant "filename" defined at s-crtl.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__filename
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function filename #"s-crtl.ads" 229 0 0# "model" "model_trace:19690" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__filename___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "oflag" defined at s-crtl.ads:229, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__oflag
 use import "_gnatprove_standard".Main

 function oflag #"s-crtl.ads" 229 0 0# "model" "model_trace:19699" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "oflag" defined at s-crtl.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__oflag___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "open" defined at s-crtl.ads:229, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__open
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function open #"s-crtl.ads" 229 0 0# 
   (filename : BV32.t) (oflag : int) : int
 
 predicate open__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (filename : BV32.t) (oflag : int) 

end

(* Module for defining the constant "fd" defined at s-crtl.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__close__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 232 0 0# "model" "model_trace:19726" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__close__fd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close" defined at s-crtl.ads:232, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__close
 use import "_gnatprove_standard".Main

 function close #"s-crtl.ads" 232 0 0# 
   (fd : int) : int
 
 predicate close__function_guard #"s-crtl.ads" 53 0 0# 
   (result : int) (fd : int) 

end

(* Module for defining the constant "fd" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 235 0 0# "model" "model_trace:19753" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__fd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"s-crtl.ads" 235 0 0# "model" "model_trace:19762" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:235, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"s-crtl.ads" 235 0 0# "model" "model_trace:19771" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:235, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "read" defined at s-crtl.ads:235, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__read
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function read #"s-crtl.ads" 235 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int
 
 predicate read__function_guard #"s-crtl.ads" 62 0 0# 
   (result : int) (fd : int) (buffer : BV32.t) (count : BV32.t) 

end

(* Module for defining the constant "fd" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__fd
 use import "_gnatprove_standard".Main

 function fd #"s-crtl.ads" 238 0 0# "model" "model_trace:19798" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__fd___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"s-crtl.ads" 238 0 0# "model" "model_trace:19807" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:238, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"s-crtl.ads" 238 0 0# "model" "model_trace:19816" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"s-crtl.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:238, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "write" defined at s-crtl.ads:238, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__write
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function write #"s-crtl.ads" 238 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int
 
 predicate write__function_guard #"s-crtl.ads" 62 0 0# 
   (result : int) (fd : int) (buffer : BV32.t) (count : BV32.t) 

end

(* Module for axiomatizing type "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__chars
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type chars #"i-cstrea.ads" 40 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 40 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"i-cstrea.ads" 40 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 40 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 40 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 40 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 40 0 0# 
   (x : BV32.t)  =
  #"i-cstrea.ads" 40 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"i-cstrea.ads" 40 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 40 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = chars, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type chars__ref #"i-cstrea.ads" 40 0 0# =
  { mutable chars__content "model_trace:" : chars }
 
 function chars__ref_2__projection #"i-cstrea.ads" 40 0 0# 
   (a : chars__ref) : chars =
  a.chars__content
 
 meta "model_projection" function chars__ref_2__projection
 
 meta "inline : no" function chars__ref_2__projection
 
 val chars__havoc #"i-cstrea.ads" 40 0 0# 
   (x : chars__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__chars__rep
 use        Interfaces__c_streams__chars
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = Interfaces__c_streams__chars.chars, 
 predicate in_range = Interfaces__c_streams__chars.in_range, 
 predicate in_range_int = Interfaces__c_streams__chars.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = Interfaces__c_streams__chars.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__files
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type files #"i-cstrea.ads" 41 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"i-cstrea.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 41 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 41 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 41 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 41 0 0# 
   (x : BV32.t)  =
  #"i-cstrea.ads" 41 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"i-cstrea.ads" 41 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 41 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = files, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type files__ref #"i-cstrea.ads" 41 0 0# =
  { mutable files__content "model_trace:" : files }
 
 function files__ref_2__projection #"i-cstrea.ads" 41 0 0# 
   (a : files__ref) : files =
  a.files__content
 
 meta "model_projection" function files__ref_2__projection
 
 meta "inline : no" function files__ref_2__projection
 
 val files__havoc #"i-cstrea.ads" 41 0 0# 
   (x : files__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__files__rep
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = Interfaces__c_streams__files.files, 
 predicate in_range = Interfaces__c_streams__files.in_range, 
 predicate in_range_int = Interfaces__c_streams__files.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = Interfaces__c_streams__files.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int__ #"i-cstrea.ads" 42 0 0# 
 
 function first #"i-cstrea.ads" 42 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-cstrea.ads" 42 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-cstrea.ads" 42 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 42 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type int____ref #"i-cstrea.ads" 42 0 0# =
  { mutable int____content "model_trace:" : int__ }
 
 function int____ref_3__projection #"i-cstrea.ads" 42 0 0# 
   (a : int____ref) : int__ =
  a.int____content
 
 meta "model_projection" function int____ref_3__projection
 
 meta "inline : no" function int____ref_3__projection
 
 val int____havoc #"i-cstrea.ads" 42 0 0# 
   (x : int____ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int__rep
 use        Interfaces__c_streams__int
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c_streams__int.int__, 
 predicate in_range = Interfaces__c_streams__int.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__long
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long #"i-cstrea.ads" 43 0 0# 
 
 function first #"i-cstrea.ads" 43 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-cstrea.ads" 43 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-cstrea.ads" 43 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 43 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long__ref #"i-cstrea.ads" 43 0 0# =
  { mutable long__content "model_trace:" : long }
 
 function long__ref_3__projection #"i-cstrea.ads" 43 0 0# 
   (a : long__ref) : long =
  a.long__content
 
 meta "model_projection" function long__ref_3__projection
 
 meta "inline : no" function long__ref_3__projection
 
 val long__havoc #"i-cstrea.ads" 43 0 0# 
   (x : long__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__long__rep
 use        Interfaces__c_streams__long
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c_streams__long.long, 
 predicate in_range = Interfaces__c_streams__long.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__size_t
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type size_t #"i-cstrea.ads" 44 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 44 0 0# 
   : BV32.t
 
 function first #"i-cstrea.ads" 44 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 44 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 44 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 44 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 44 0 0# 
   (x : BV32.t)  =
  #"i-cstrea.ads" 44 0 0# true
 
 predicate in_range_int #"i-cstrea.ads" 44 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 44 0 0# BV32.uint_in_range x
 
 clone export "ada__model".Static_Modular_32 with
 type t = size_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 predicate in_range_int = in_range_int
 
 type size_t__ref #"i-cstrea.ads" 44 0 0# =
  { mutable size_t__content "model_trace:" : size_t }
 
 function size_t__ref_3__projection #"i-cstrea.ads" 44 0 0# 
   (a : size_t__ref) : size_t =
  a.size_t__content
 
 meta "model_projection" function size_t__ref_3__projection
 
 meta "inline : no" function size_t__ref_3__projection
 
 val size_t__havoc #"i-cstrea.ads" 44 0 0# 
   (x : size_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__size_t__rep
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_BV32 with
 type t = Interfaces__c_streams__size_t.size_t, 
 predicate in_range = Interfaces__c_streams__size_t.in_range, 
 predicate in_range_int = Interfaces__c_streams__size_t.in_range_int
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__ssize_t
 use import "_gnatprove_standard".Main
 use import "int".Int

 type ssize_t #"i-cstrea.ads" 45 0 0# 
 
 function first #"i-cstrea.ads" 45 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"i-cstrea.ads" 45 0 0# 
   : int =
  2147483647
 
 predicate in_range #"i-cstrea.ads" 45 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 45 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ssize_t__ref #"i-cstrea.ads" 45 0 0# =
  { mutable ssize_t__content "model_trace:" : ssize_t }
 
 function ssize_t__ref_2__projection #"i-cstrea.ads" 45 0 0# 
   (a : ssize_t__ref) : ssize_t =
  a.ssize_t__content
 
 meta "model_projection" function ssize_t__ref_2__projection
 
 meta "inline : no" function ssize_t__ref_2__projection
 
 val ssize_t__havoc #"i-cstrea.ads" 45 0 0# 
   (x : ssize_t__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__ssize_t__rep
 use        Interfaces__c_streams__ssize_t
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c_streams__ssize_t.ssize_t, 
 predicate in_range = Interfaces__c_streams__ssize_t.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "int64" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type int64 #"i-cstrea.ads" 46 0 0# 
 
 function first #"i-cstrea.ads" 46 0 0# 
   : int =
  ( -9223372036854775808 )
 
 function last #"i-cstrea.ads" 46 0 0# 
   : int =
  9223372036854775807
 
 predicate in_range #"i-cstrea.ads" 46 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 46 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = int64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type int64__ref #"i-cstrea.ads" 46 0 0# =
  { mutable int64__content "model_trace:" : int64 }
 
 function int64__ref_2__projection #"i-cstrea.ads" 46 0 0# 
   (a : int64__ref) : int64 =
  a.int64__content
 
 meta "model_projection" function int64__ref_2__projection
 
 meta "inline : no" function int64__ref_2__projection
 
 val int64__havoc #"i-cstrea.ads" 46 0 0# 
   (x : int64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "int64" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int64__rep
 use        Interfaces__c_streams__int64
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c_streams__int64.int64, 
 predicate in_range = Interfaces__c_streams__int64.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "voids" defined at i-cstrea.ads:47, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__voids
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32

 type voids #"i-cstrea.ads" 47 0 0# 
 
 function attr__ATTRIBUTE_MODULUS #"i-cstrea.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function first #"i-cstrea.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 0 )
 
 function last #"i-cstrea.ads" 47 0 0# 
   : BV32.t =
  ( BV32.of_int 4294967295 )
 
 function first_int #"i-cstrea.ads" 47 0 0# 
   : int =
  0
 
 function last_int #"i-cstrea.ads" 47 0 0# 
   : int =
  4294967295
 
 predicate in_range #"i-cstrea.ads" 47 0 0# 
   (x : BV32.t)  =
  #"i-cstrea.ads" 47 0 0# ( (BV32.ule first x) /\ (BV32.ule x last) )
 
 predicate in_range_int #"i-cstrea.ads" 47 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 47 0 0# ( (first_int <= x) /\ (x <= last_int) )
 
 clone export "ada__model".Static_Modular_lt32 with
 type t = voids, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range_int = in_range_int
 
 type voids__ref #"i-cstrea.ads" 47 0 0# =
  { mutable voids__content "model_trace:" : voids }
 
 function voids__ref___projection #"i-cstrea.ads" 47 0 0# 
   (a : voids__ref) : voids =
  a.voids__content
 
 meta "model_projection" function voids__ref___projection
 
 meta "inline : no" function voids__ref___projection
 
 val voids__havoc #"i-cstrea.ads" 47 0 0# 
   (x : voids__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "voids" defined at i-cstrea.ads:47, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__voids__rep
 use        Interfaces__c_streams__voids
 use        "_gnatprove_standard".BV32
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_ltBV32 with
 type t = Interfaces__c_streams__voids.voids, 
 predicate in_range = Interfaces__c_streams__voids.in_range, 
 predicate in_range_int = Interfaces__c_streams__voids.in_range_int, 
 function attr__ATTRIBUTE_MODULUS = Interfaces__c_streams__voids.attr__ATTRIBUTE_MODULUS
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "null_stream" defined at i-cstrea.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__null_stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function null_stream #"i-cstrea.ads" 49 0 0# "model" "model_trace:16629" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module for defining the constant "eof" defined at i-cstrea.ads:56, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__eof
 use import "_gnatprove_standard".Main

 function eof #"i-cstrea.ads" 56 0 0# "model" "model_trace:16638" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "iofbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iofbf
 use import "_gnatprove_standard".Main

 function iofbf #"i-cstrea.ads" 59 0 0# "model" "model_trace:16647" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "iolbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iolbf
 use import "_gnatprove_standard".Main

 function iolbf #"i-cstrea.ads" 60 0 0# "model" "model_trace:16656" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "ionbf" defined at i-cstrea.ads:61, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ionbf
 use import "_gnatprove_standard".Main

 function ionbf #"i-cstrea.ads" 61 0 0# "model" "model_trace:16665" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "l_tmpnam" defined at i-cstrea.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__l_tmpnam
 use import "_gnatprove_standard".Main

 function l_tmpnam #"i-cstrea.ads" 64 0 0# "model" "model_trace:16674" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "seek_cur" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_cur
 use import "_gnatprove_standard".Main

 function seek_cur #"i-cstrea.ads" 67 0 0# "model" "model_trace:16683" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "seek_end" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_end
 use import "_gnatprove_standard".Main

 function seek_end #"i-cstrea.ads" 68 0 0# "model" "model_trace:16692" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for defining the constant "seek_set" defined at i-cstrea.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_set
 use import "_gnatprove_standard".Main

 function seek_set #"i-cstrea.ads" 69 0 0# "model" "model_trace:16701" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module for possibly declaring a logic function for "stdin" defined at i-cstrea.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdin
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stdin #"i-cstrea.ads" 72 0 0# 
   (__void_param : unit) : BV32.t
 
 predicate stdin__function_guard #"i-cstrea.ads" 41 0 0# 
   (result : BV32.t) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "stdout" defined at i-cstrea.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdout
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stdout #"i-cstrea.ads" 73 0 0# 
   (__void_param : unit) : BV32.t
 
 predicate stdout__function_guard #"i-cstrea.ads" 41 0 0# 
   (result : BV32.t) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "stderr" defined at i-cstrea.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stderr
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stderr #"i-cstrea.ads" 74 0 0# 
   (__void_param : unit) : BV32.t
 
 predicate stderr__function_guard #"i-cstrea.ads" 41 0 0# 
   (result : BV32.t) (__void_param : unit) 

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__feof__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 95 0 0# "model" "model_trace:16827" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__feof__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "feof" defined at i-cstrea.ads:95, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__feof
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function feof #"i-cstrea.ads" 95 0 0# 
   (stream : BV32.t) : int
 
 predicate feof__function_guard #"i-cstrea.ads" 42 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ferror__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 97 0 0# "model" "model_trace:16846" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__ferror__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "ferror" defined at i-cstrea.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__ferror
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function ferror #"i-cstrea.ads" 97 0 0# 
   (stream : BV32.t) : int
 
 predicate ferror__function_guard #"i-cstrea.ads" 42 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fileno__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 106 0 0# "model" "model_trace:16955" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fileno__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fileno" defined at i-cstrea.ads:106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fileno
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fileno #"i-cstrea.ads" 106 0 0# 
   (stream : BV32.t) : int
 
 predicate fileno__function_guard #"i-cstrea.ads" 42 0 0# 
   (result : int) (stream : BV32.t) 

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 129 0 0# "model" "model_trace:17124" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 130 0 0# "model" "model_trace:17133" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"i-cstrea.ads" 131 0 0# "model" "model_trace:17142" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 132 0 0# "model" "model_trace:17151" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fread #"i-cstrea.ads" 128 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
 
 predicate fread__function_guard #"i-cstrea.ads" 44 0 0# 
   (result : BV32.t) (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) 

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 135 0 0# "model" "model_trace:17170" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "index" defined at i-cstrea.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__index
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function index #"i-cstrea.ads" 136 0 0# "model" "model_trace:17179" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "index" defined at i-cstrea.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__index___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 137 0 0# "model" "model_trace:17188" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"i-cstrea.ads" 138 0 0# "model" "model_trace:17197" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 139 0 0# "model" "model_trace:17206" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fread__2 #"i-cstrea.ads" 134 0 0# 
   (buffer : BV32.t) (index : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
 
 predicate fread__2__function_guard #"i-cstrea.ads" 44 0 0# 
   (result : BV32.t) (buffer : BV32.t) (index : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) 

end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 172 0 0# "model" "model_trace:17417" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 47 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 173 0 0# "model" "model_trace:17426" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function count #"i-cstrea.ads" 174 0 0# "model" "model_trace:17435" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 175 0 0# "model" "model_trace:17444" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "fwrite" defined at i-cstrea.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fwrite
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function fwrite #"i-cstrea.ads" 171 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
 
 predicate fwrite__function_guard #"i-cstrea.ads" 44 0 0# 
   (result : BV32.t) (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) 

end

(* Module for defining the constant "stream" defined at i-cstrea.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function stream #"i-cstrea.ads" 185 0 0# "model" "model_trace:17533" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 41 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:185, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 186 0 0# "model" "model_trace:17542" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__mode
 use import "_gnatprove_standard".Main

 function mode #"i-cstrea.ads" 187 0 0# "model" "model_trace:17551" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function size #"i-cstrea.ads" 188 0 0# "model" "model_trace:17560" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__size___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setvbuf" defined at i-cstrea.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__setvbuf
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function setvbuf #"i-cstrea.ads" 184 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int
 
 predicate setvbuf__function_guard #"i-cstrea.ads" 42 0 0# 
   (result : int) (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) 

end

(* Module for defining the constant "name" defined at i-cstrea.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__file_exists__name
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function name #"i-cstrea.ads" 212 0 0# "model" "model_trace:17674" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at i-cstrea.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__file_exists__name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "file_exists" defined at i-cstrea.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__file_exists
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function file_exists #"i-cstrea.ads" 212 0 0# 
   (name : BV32.t) : int
 
 predicate file_exists__function_guard #"i-cstrea.ads" 42 0 0# 
   (result : int) (name : BV32.t) 

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:215, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__is_regular_file__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 215 0 0# "model" "model_trace:17693" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:215, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__is_regular_file__handle___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_regular_file" defined at i-cstrea.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__is_regular_file
 use import "_gnatprove_standard".Main

 function is_regular_file #"i-cstrea.ads" 215 0 0# 
   (handle : int) : int
 
 predicate is_regular_file__function_guard #"i-cstrea.ads" 42 0 0# 
   (result : int) (handle : int) 

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:223, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_binary_mode__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 223 0 0# "model" "model_trace:17712" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_binary_mode__handle___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_text_mode__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 224 0 0# "model" "model_trace:17730" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_text_mode__handle___axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "content_encoding" defined at i-cstrea.ads:230, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type content_encoding #"i-cstrea.ads" 230 0 0# 
 
 function first #"i-cstrea.ads" 230 0 0# 
   : int =
  0
 
 function last #"i-cstrea.ads" 230 0 0# 
   : int =
  5
 
 predicate in_range #"i-cstrea.ads" 230 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 230 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type content_encoding__ref #"i-cstrea.ads" 230 0 0# =
  { mutable content_encoding__content "model_trace:" : content_encoding }
 
 function content_encoding__ref___projection #"i-cstrea.ads" 230 0 0# 
   (a : content_encoding__ref) : content_encoding =
  a.content_encoding__content
 
 meta "model_projection" function content_encoding__ref___projection
 
 meta "inline : no" function content_encoding__ref___projection
 
 val content_encoding__havoc #"i-cstrea.ads" 230 0 0# 
   (x : content_encoding__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "content_encoding" defined at i-cstrea.ads:230, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__content_encoding__rep
 use        Interfaces__c_streams__content_encoding
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c_streams__content_encoding.content_encoding, 
 predicate in_range = Interfaces__c_streams__content_encoding.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "text_content_encoding" defined at i-cstrea.ads:248, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__text_content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type text_content_encoding #"i-cstrea.ads" 248 0 0# 
 
 function first #"i-cstrea.ads" 248 0 0# 
   : int =
  1
 
 function last #"i-cstrea.ads" 248 0 0# 
   : int =
  5
 
 predicate in_range #"i-cstrea.ads" 248 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 248 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type text_content_encoding__ref #"i-cstrea.ads" 248 0 0# =
  { mutable text_content_encoding__content "model_trace:" : text_content_encoding }
 
 function text_content_encoding__ref___projection #"i-cstrea.ads" 248 0 0# 
   (a : text_content_encoding__ref) : text_content_encoding =
  a.text_content_encoding__content
 
 meta "model_projection" function text_content_encoding__ref___projection
 
 meta "inline : no" function text_content_encoding__ref___projection
 
 val text_content_encoding__havoc #"i-cstrea.ads" 248 0 0# 
   (x : text_content_encoding__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "text_content_encoding" defined at i-cstrea.ads:248, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__text_content_encoding__rep
 use        Interfaces__c_streams__text_content_encoding
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c_streams__text_content_encoding.text_content_encoding, 
 predicate in_range = Interfaces__c_streams__text_content_encoding.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "non_default_text_content_encoding" defined at i-cstrea.ads:251, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__non_default_text_content_encoding
 use import "_gnatprove_standard".Main
 use import "int".Int

 type non_default_text_content_encoding #"i-cstrea.ads" 251 0 0# 
 
 function first #"i-cstrea.ads" 251 0 0# 
   : int =
  2
 
 function last #"i-cstrea.ads" 251 0 0# 
   : int =
  5
 
 predicate in_range #"i-cstrea.ads" 251 0 0# 
   (x : int)  =
  #"i-cstrea.ads" 251 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = non_default_text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type non_default_text_content_encoding__ref #"i-cstrea.ads" 251 0 0# =
  { mutable non_default_text_content_encoding__content "model_trace:" : non_default_text_content_encoding }
 
 function non_default_text_content_encoding__ref___projection #"i-cstrea.ads" 251 0 0# 
   (a : non_default_text_content_encoding__ref) : non_default_text_content_encoding =
  a.non_default_text_content_encoding__content
 
 meta "model_projection" function non_default_text_content_encoding__ref___projection
 
 meta "inline : no" function non_default_text_content_encoding__ref___projection
 
 val non_default_text_content_encoding__havoc #"i-cstrea.ads" 251 0 0# 
   (x : non_default_text_content_encoding__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "non_default_text_content_encoding" defined at i-cstrea.ads:251, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__non_default_text_content_encoding__rep
 use        Interfaces__c_streams__non_default_text_content_encoding
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Interfaces__c_streams__non_default_text_content_encoding.non_default_text_content_encoding, 
 predicate in_range = Interfaces__c_streams__non_default_text_content_encoding.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__handle
 use import "_gnatprove_standard".Main

 function handle #"i-cstrea.ads" 254 0 0# "model" "model_trace:17844" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 42 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:254, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__handle___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:254, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__mode
 use import "_gnatprove_standard".Main

 function mode #"i-cstrea.ads" 254 0 0# "model" "model_trace:17853" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 230 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:254, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "nam" defined at i-cstrea.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__nam
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function nam #"i-cstrea.ads" 262 0 0# "model" "model_trace:17871" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "nam" defined at i-cstrea.ads:262, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__nam___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:262, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__buffer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 function buffer #"i-cstrea.ads" 262 0 0# "model" "model_trace:17880" 
   : BV32.t
 
 function attr__ATTRIBUTE_ADDRESS #"i-cstrea.ads" 40 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:262, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__buffer___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "max_path_len" defined at i-cstrea.ads:270, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__max_path_len
 use import "_gnatprove_standard".Main

 function max_path_len #"i-cstrea.ads" 270 0 0# "model" "model_trace:17894" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for axiomatizing type "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_mode #"s-ficobl.ads" 63 0 0# 
 
 function first #"s-ficobl.ads" 63 0 0# 
   : int =
  0
 
 function last #"s-ficobl.ads" 63 0 0# 
   : int =
  3
 
 predicate in_range #"s-ficobl.ads" 63 0 0# 
   (x : int)  =
  #"s-ficobl.ads" 63 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type file_mode__ref #"s-ficobl.ads" 63 0 0# =
  { mutable file_mode__content "model_trace:" : file_mode }
 
 function file_mode__ref___projection #"s-ficobl.ads" 63 0 0# 
   (a : file_mode__ref) : file_mode =
  a.file_mode__content
 
 meta "model_projection" function file_mode__ref___projection
 
 meta "inline : no" function file_mode__ref___projection
 
 val file_mode__havoc #"s-ficobl.ads" 63 0 0# 
   (x : file_mode__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__file_mode__rep
 use        System__file_control_block__file_mode
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__file_control_block__file_mode.file_mode, 
 predicate in_range = System__file_control_block__file_mode.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__read_file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type read_file_mode #"s-ficobl.ads" 64 0 0# 
 
 function first #"s-ficobl.ads" 64 0 0# 
   : int =
  0
 
 function last #"s-ficobl.ads" 64 0 0# 
   : int =
  1
 
 predicate in_range #"s-ficobl.ads" 64 0 0# 
   (x : int)  =
  #"s-ficobl.ads" 64 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = read_file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type read_file_mode__ref #"s-ficobl.ads" 64 0 0# =
  { mutable read_file_mode__content "model_trace:" : read_file_mode }
 
 function read_file_mode__ref___projection #"s-ficobl.ads" 64 0 0# 
   (a : read_file_mode__ref) : read_file_mode =
  a.read_file_mode__content
 
 meta "model_projection" function read_file_mode__ref___projection
 
 meta "inline : no" function read_file_mode__ref___projection
 
 val read_file_mode__havoc #"s-ficobl.ads" 64 0 0# 
   (x : read_file_mode__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__read_file_mode__rep
 use        System__file_control_block__read_file_mode
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__file_control_block__read_file_mode.read_file_mode, 
 predicate in_range = System__file_control_block__read_file_mode.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__shared_status_type
 use import "_gnatprove_standard".Main
 use import "int".Int

 type shared_status_type #"s-ficobl.ads" 69 0 0# 
 
 function first #"s-ficobl.ads" 69 0 0# 
   : int =
  0
 
 function last #"s-ficobl.ads" 69 0 0# 
   : int =
  2
 
 predicate in_range #"s-ficobl.ads" 69 0 0# 
   (x : int)  =
  #"s-ficobl.ads" 69 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = shared_status_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type shared_status_type__ref #"s-ficobl.ads" 69 0 0# =
  { mutable shared_status_type__content "model_trace:" : shared_status_type }
 
 function shared_status_type__ref___projection #"s-ficobl.ads" 69 0 0# 
   (a : shared_status_type__ref) : shared_status_type =
  a.shared_status_type__content
 
 meta "model_projection" function shared_status_type__ref___projection
 
 meta "inline : no" function shared_status_type__ref___projection
 
 val shared_status_type__havoc #"s-ficobl.ads" 69 0 0# 
   (x : shared_status_type__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__shared_status_type__rep
 use        System__file_control_block__shared_status_type
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__file_control_block__shared_status_type.shared_status_type, 
 predicate in_range = System__file_control_block__shared_status_type.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_methodB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type twc_encoding_methodB #"s-wchcon.ads" 94 0 0# 
 
 function first #"s-wchcon.ads" 94 0 0# 
   : int =
  ( -128 )
 
 function last #"s-wchcon.ads" 94 0 0# 
   : int =
  127
 
 predicate in_range #"s-wchcon.ads" 94 0 0# 
   (x : int)  =
  #"s-wchcon.ads" 94 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = twc_encoding_methodB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type twc_encoding_methodB__ref #"s-wchcon.ads" 94 0 0# =
  { mutable twc_encoding_methodB__content "model_trace:" : twc_encoding_methodB }
 
 function twc_encoding_methodB__ref___projection #"s-wchcon.ads" 94 0 0# 
   (a : twc_encoding_methodB__ref) : twc_encoding_methodB =
  a.twc_encoding_methodB__content
 
 meta "model_projection" function twc_encoding_methodB__ref___projection
 
 meta "inline : no" function twc_encoding_methodB__ref___projection
 
 val twc_encoding_methodB__havoc #"s-wchcon.ads" 94 0 0# 
   (x : twc_encoding_methodB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_methodB__rep
 use        System__wch_con__Twc_encoding_methodB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 predicate in_range = System__wch_con__Twc_encoding_methodB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_encoding_method #"s-wchcon.ads" 94 0 0# 
 
 function first #"s-wchcon.ads" 94 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 94 0 0# 
   : int =
  6
 
 predicate in_range #"s-wchcon.ads" 94 0 0# 
   (x : int)  =
  #"s-wchcon.ads" 94 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wc_encoding_method__ref #"s-wchcon.ads" 94 0 0# =
  { mutable wc_encoding_method__content "model_trace:" : wc_encoding_method }
 
 function wc_encoding_method__ref___projection #"s-wchcon.ads" 94 0 0# 
   (a : wc_encoding_method__ref) : wc_encoding_method =
  a.wc_encoding_method__content
 
 meta "model_projection" function wc_encoding_method__ref___projection
 
 meta "inline : no" function wc_encoding_method__ref___projection
 
 val wc_encoding_method__havoc #"s-wchcon.ads" 94 0 0# 
   (x : wc_encoding_method__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_encoding_method__rep
 use        System__wch_con__wc_encoding_method
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__wch_con__wc_encoding_method.wc_encoding_method, 
 predicate in_range = System__wch_con__wc_encoding_method.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_hex
 use import "_gnatprove_standard".Main

 function wcem_hex #"s-wchcon.ads" 100 0 0# "model" "model_trace:19872" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_upper
 use import "_gnatprove_standard".Main

 function wcem_upper #"s-wchcon.ads" 108 0 0# "model" "model_trace:19882" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_shift_jis
 use import "_gnatprove_standard".Main

 function wcem_shift_jis #"s-wchcon.ads" 117 0 0# "model" "model_trace:19892" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_euc
 use import "_gnatprove_standard".Main

 function wcem_euc #"s-wchcon.ads" 126 0 0# "model" "model_trace:19902" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_utf8
 use import "_gnatprove_standard".Main

 function wcem_utf8 #"s-wchcon.ads" 134 0 0# "model" "model_trace:19912" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for defining the constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_brackets
 use import "_gnatprove_standard".Main

 function wcem_brackets #"s-wchcon.ads" 156 0 0# "model" "model_trace:19922" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module for axiomatizing type "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character
 use        System__wch_con__Twc_encoding_methodB
 use        System__wch_con__Twc_encoding_methodB__rep
 use        System__wch_con__wc_encoding_method

 type component_type #"s-wchcon.ads" 94 0 0# =
  Standard__character.character
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 type index_rep_type = int, 
 function to_rep = System__wch_con__Twc_encoding_methodB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate index_dynamic_property = System__wch_con__wc_encoding_method.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type twc_encoding_lettersB #"s-wchcon.ads" 169 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type twc_encoding_lettersB__ref #"s-wchcon.ads" 169 0 0# =
  { mutable twc_encoding_lettersB__content "model_trace:" : twc_encoding_lettersB }
 
 function twc_encoding_lettersB__ref___projection #"s-wchcon.ads" 169 0 0# 
   (a : twc_encoding_lettersB__ref) : twc_encoding_lettersB =
  a.twc_encoding_lettersB__content
 
 meta "model_projection" function twc_encoding_lettersB__ref___projection
 
 meta "inline : no" function twc_encoding_lettersB__ref___projection
 
 val twc_encoding_lettersB__havoc #"s-wchcon.ads" 169 0 0# 
   (x : twc_encoding_lettersB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-wchcon.ads" 169 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T3s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3s #"s-wchcon.ads" 170 0 0# 
 
 function first #"s-wchcon.ads" 170 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 170 0 0# 
   : int =
  6
 
 predicate in_range #"s-wchcon.ads" 170 0 0# 
   (x : int)  =
  #"s-wchcon.ads" 170 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t3s__ref #"s-wchcon.ads" 170 0 0# =
  { mutable t3s__content "model_trace:" : t3s }
 
 function t3s__ref_2__projection #"s-wchcon.ads" 170 0 0# 
   (a : t3s__ref) : t3s =
  a.t3s__content
 
 meta "model_projection" function t3s__ref_2__projection
 
 meta "inline : no" function t3s__ref_2__projection
 
 val t3s__havoc #"s-wchcon.ads" 170 0 0# 
   (x : t3s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T3s__rep
 use        System__wch_con__T3s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__wch_con__T3s.t3s, 
 predicate in_range = System__wch_con__T3s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T4s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Array__Int__Standard__character

 type component_type #"s-wchcon.ads" 170 0 0# =
  Standard__character.character
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_encoding_letters
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function wc_encoding_letters #"s-wchcon.ads" 169 0 0# "model_projected" "model_trace:19932" 
   : Array__Int__Standard__character.map
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 169 0 0# 
   : int

end

(* Module for axiomatizing type "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_esc_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_esc_encoding_method #"s-wchcon.ads" 180 0 0# 
 
 function first #"s-wchcon.ads" 180 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 180 0 0# 
   : int =
  1
 
 predicate in_range #"s-wchcon.ads" 180 0 0# 
   (x : int)  =
  #"s-wchcon.ads" 180 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_esc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wc_esc_encoding_method__ref #"s-wchcon.ads" 180 0 0# =
  { mutable wc_esc_encoding_method__content "model_trace:" : wc_esc_encoding_method }
 
 function wc_esc_encoding_method__ref___projection #"s-wchcon.ads" 180 0 0# 
   (a : wc_esc_encoding_method__ref) : wc_esc_encoding_method =
  a.wc_esc_encoding_method__content
 
 meta "model_projection" function wc_esc_encoding_method__ref___projection
 
 meta "inline : no" function wc_esc_encoding_method__ref___projection
 
 val wc_esc_encoding_method__havoc #"s-wchcon.ads" 180 0 0# 
   (x : wc_esc_encoding_method__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_esc_encoding_method__rep
 use        System__wch_con__wc_esc_encoding_method
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__wch_con__wc_esc_encoding_method.wc_esc_encoding_method, 
 predicate in_range = System__wch_con__wc_esc_encoding_method.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_upper_half_encoding_method
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wc_upper_half_encoding_method #"s-wchcon.ads" 184 0 0# 
 
 function first #"s-wchcon.ads" 184 0 0# 
   : int =
  2
 
 function last #"s-wchcon.ads" 184 0 0# 
   : int =
  5
 
 predicate in_range #"s-wchcon.ads" 184 0 0# 
   (x : int)  =
  #"s-wchcon.ads" 184 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_upper_half_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wc_upper_half_encoding_method__ref #"s-wchcon.ads" 184 0 0# =
  { mutable wc_upper_half_encoding_method__content "model_trace:" : wc_upper_half_encoding_method }
 
 function wc_upper_half_encoding_method__ref___projection #"s-wchcon.ads" 184 0 0# 
   (a : wc_upper_half_encoding_method__ref) : wc_upper_half_encoding_method =
  a.wc_upper_half_encoding_method__content
 
 meta "model_projection" function wc_upper_half_encoding_method__ref___projection
 
 meta "inline : no" function wc_upper_half_encoding_method__ref___projection
 
 val wc_upper_half_encoding_method__havoc #"s-wchcon.ads" 184 0 0# 
   (x : wc_upper_half_encoding_method__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_upper_half_encoding_method__rep
 use        System__wch_con__wc_upper_half_encoding_method
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__wch_con__wc_upper_half_encoding_method.wc_upper_half_encoding_method, 
 predicate in_range = System__wch_con__wc_upper_half_encoding_method.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__natural__rep

 function index_I1_one #"s-wchcon.ads" 184 0 0# 
   : int =
  1
 
 type component_type #"s-wchcon.ads" 184 0 0# =
  Standard__natural.natural
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq #"system.ads" 1 0 0# 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_219 #"system.ads" 1 0 0#  : int.
   (if (( (a__first <= temp___idx_219) /\ (temp___idx_219 <= a__last) )) then (
    ((Standard__natural__rep.to_rep (get a temp___idx_219)) = (Standard__natural__rep.to_rep (get b ((b__first - a__first) + temp___idx_219))))) else true)) )
 
 axiom bool_eq_rev :
  (forall a #"system.ads" 1 0 0#  b #"system.ads" 1 0 0#  : map.
  (forall a__first #"system.ads" 1 0 0#  a__last #"system.ads" 1 0 0#  b__first #"system.ads" 1 0 0#  b__last #"system.ads" 1 0 0#  : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_219 #"system.ads" 1 0 0#  : int.
    (if (( (a__first <= temp___idx_219) /\ (temp___idx_219 <= a__last) )) then (
     ((Standard__natural__rep.to_rep (get a temp___idx_219)) = (Standard__natural__rep.to_rep (get b ((b__first - a__first) + temp___idx_219))))) else true)) ) )))
 
 function index_Index_one #"system.ads" 1 0 0# 
   : int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__natural__rep.to_rep, 
 type map = map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = get, 
 function bool_eq = bool_eq

end

(* Module for axiomatizing type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        System__wch_con__Twc_encoding_methodB
 use        System__wch_con__Twc_encoding_methodB__rep
 use        System__wch_con__wc_encoding_method
 use        Array__Int__Standard__natural

 type component_type #"system.ads" 1 0 0# =
  Standard__natural.natural
 
 function index_1_id #"system.ads" 1 0 0# 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int__Standard__natural.map, 
 function array_bool_eq = Array__Int__Standard__natural.bool_eq, 
 type index_base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 type index_rep_type = int, 
 function to_rep = System__wch_con__Twc_encoding_methodB__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate index_dynamic_property = System__wch_con__wc_encoding_method.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type twc_longest_sequencesB #"s-wchcon.ads" 193 0 0# =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline : no" function to_array
 
 meta "model_projection" function first
 
 meta "inline : no" function first
 
 meta "model_projection" function last
 
 meta "inline : no" function last
 
 type twc_longest_sequencesB__ref #"s-wchcon.ads" 193 0 0# =
  { mutable twc_longest_sequencesB__content "model_trace:" : twc_longest_sequencesB }
 
 function twc_longest_sequencesB__ref___projection #"s-wchcon.ads" 193 0 0# 
   (a : twc_longest_sequencesB__ref) : twc_longest_sequencesB =
  a.twc_longest_sequencesB__content
 
 meta "model_projection" function twc_longest_sequencesB__ref___projection
 
 meta "inline : no" function twc_longest_sequencesB__ref___projection
 
 val twc_longest_sequencesB__havoc #"s-wchcon.ads" 193 0 0# 
   (x : twc_longest_sequencesB__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesT
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int__Standard__natural

 type component_type #"s-wchcon.ads" 193 0 0# =
  Standard__natural.natural
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__natural.map, 
 function array_bool_eq = Array__Int__Standard__natural.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T7s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7s #"s-wchcon.ads" 194 0 0# 
 
 function first #"s-wchcon.ads" 194 0 0# 
   : int =
  1
 
 function last #"s-wchcon.ads" 194 0 0# 
   : int =
  6
 
 predicate in_range #"s-wchcon.ads" 194 0 0# 
   (x : int)  =
  #"s-wchcon.ads" 194 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type t7s__ref #"s-wchcon.ads" 194 0 0# =
  { mutable t7s__content "model_trace:" : t7s }
 
 function t7s__ref_2__projection #"s-wchcon.ads" 194 0 0# 
   (a : t7s__ref) : t7s =
  a.t7s__content
 
 meta "model_projection" function t7s__ref_2__projection
 
 meta "inline : no" function t7s__ref_2__projection
 
 val t7s__havoc #"s-wchcon.ads" 194 0 0# 
   (x : t7s__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T7s__rep
 use        System__wch_con__T7s
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = System__wch_con__T7s.t7s, 
 predicate in_range = System__wch_con__T7s.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T8s
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int__Standard__natural

 type component_type #"s-wchcon.ads" 194 0 0# =
  Standard__natural.natural
 
 function first #"system.ads" 1 0 0# 
   : int =
  1
 
 function last #"system.ads" 1 0 0# 
   : int =
  6
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int__Standard__natural.map, 
 function array_bool_eq = Array__Int__Standard__natural.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_longest_sequences
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__natural

 function wc_longest_sequences #"s-wchcon.ads" 193 0 0# "model_projected" "model_trace:20000" 
   : Array__Int__Standard__natural.map
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 193 0 0# 
   : int

end

(* Module for defining the constant "c" defined at s-wchcon.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__c
 use import "_gnatprove_standard".Main

 function c #"s-wchcon.ads" 203 0 0# "model" "model_trace:20038" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__c___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method
 use import "_gnatprove_standard".Main

 function get_wc_encoding_method #"s-wchcon.ads" 203 0 0# 
   (c : int) : int
 
 predicate get_wc_encoding_method__function_guard #"s-wchcon.ads" 94 0 0# 
   (result : int) (c : int) 

end

(* Module for defining the constant "s" defined at s-wchcon.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__2__s
 use import "_gnatprove_standard".Main
 use        Standard__string

 function s #"s-wchcon.ads" 207 0 0# "model_projected" "model_trace:20057" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "s" defined at s-wchcon.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__2__s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method__2
 use import "_gnatprove_standard".Main
 use        Standard__string

 function get_wc_encoding_method__2 #"s-wchcon.ads" 207 0 0# 
   (s : Standard__string.string) : int
 
 predicate get_wc_encoding_method__2__function_guard #"s-wchcon.ads" 94 0 0# 
   (result : int) (s : Standard__string.string) 

end

(* Module for defining the constant "c" defined at s-wchcon.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__c
 use import "_gnatprove_standard".Main

 function c #"s-wchcon.ads" 213 0 0# "model" "model_trace:20076" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__c___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "em" defined at s-wchcon.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__em
 use import "_gnatprove_standard".Main

 function em #"s-wchcon.ads" 214 0 0# "model" "model_trace:20085" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "em" defined at s-wchcon.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__em___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__is_start_of_encoding
 use import "_gnatprove_standard".Main

 function is_start_of_encoding #"s-wchcon.ads" 212 0 0# 
   (c : int) (em : int) : bool
 
 predicate is_start_of_encoding__function_guard #"s-wchcon.ads" 94 0 0# 
   (result : bool) (c : int) (em : int) 

end

(* Module for axiomatizing the record theory associated to type "file_type" defined at a-textio.ads:52, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Ada__text_io__file_type__rep
 use import "_gnatprove_standard".Main

 type __main_type #"s-wchcon.ads" 94 0 0# 
 
 function __main_eq #"s-wchcon.ads" 94 0 0# 
   (a : __main_type) (b : __main_type) : bool
 
 type __rep #"s-wchcon.ads" 94 0 0# 
 
 function to_base #"s-wchcon.ads" 94 0 0# 
   (a : __rep) : __rep =
  a
 
 function of_base #"s-wchcon.ads" 94 0 0# 
   (a : __rep) : __rep =
  a
 
 function bool_eq #"s-wchcon.ads" 94 0 0# 
   (a : __rep) (b : __rep) : bool
 
 function user_eq #"s-wchcon.ads" 94 0 0# 
   (a : __rep) (b : __rep) : bool

end

(* Module for axiomatizing type "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_type
 use export Ada__text_io__file_type__rep
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_type #"a-textio.ads" 52 0 0# =
  __rep
 
 function value__size #"a-textio.ads" 52 0 0# 
   : int
 
 function object__size #"a-textio.ads" 52 0 0# 
   (a : file_type) : int
 
 function value__alignment #"a-textio.ads" 52 0 0# 
   : int
 
 function object__alignment #"a-textio.ads" 52 0 0# 
   (a : file_type) : int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a #"a-textio.ads" 52 0 0#  : file_type.
   ((object__size a) >= 0))
 
 axiom value__alignment_axiom :
  ((value__alignment ) >= 0)
 
 axiom object__alignment_axiom :
  (forall a #"a-textio.ads" 52 0 0#  : file_type.
   ((object__alignment a) >= 0))
 
 function dummy #"a-textio.ads" 52 0 0# 
   : file_type
 
 type file_type__ref #"a-textio.ads" 52 0 0# =
  { mutable file_type__content "model_trace:" : file_type }
 
 function file_type__ref___projection #"a-textio.ads" 52 0 0# 
   (a : file_type__ref) : file_type =
  a.file_type__content
 
 meta "model_projection" function file_type__ref___projection
 
 meta "inline : no" function file_type__ref___projection
 
 val file_type__havoc #"a-textio.ads" 52 0 0# 
   (x : file_type__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_mode
 use import "_gnatprove_standard".Main
 use import "int".Int

 type file_mode #"a-textio.ads" 53 0 0# 
 
 function first #"a-textio.ads" 53 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 53 0 0# 
   : int =
  2
 
 predicate in_range #"a-textio.ads" 53 0 0# 
   (x : int)  =
  #"a-textio.ads" 53 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type file_mode__ref #"a-textio.ads" 53 0 0# =
  { mutable file_mode__content "model_trace:" : file_mode }
 
 function file_mode__ref_2__projection #"a-textio.ads" 53 0 0# 
   (a : file_mode__ref) : file_mode =
  a.file_mode__content
 
 meta "model_projection" function file_mode__ref_2__projection
 
 meta "inline : no" function file_mode__ref_2__projection
 
 val file_mode__havoc #"a-textio.ads" 53 0 0# 
   (x : file_mode__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_mode__rep
 use        Ada__text_io__file_mode
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__text_io__file_mode.file_mode, 
 predicate in_range = Ada__text_io__file_mode.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__TcountB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tcountB #"a-textio.ads" 64 0 0# 
 
 function first #"a-textio.ads" 64 0 0# 
   : int =
  ( -2147483648 )
 
 function last #"a-textio.ads" 64 0 0# 
   : int =
  2147483647
 
 predicate in_range #"a-textio.ads" 64 0 0# 
   (x : int)  =
  #"a-textio.ads" 64 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcountB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tcountB__ref #"a-textio.ads" 64 0 0# =
  { mutable tcountB__content "model_trace:" : tcountB }
 
 function tcountB__ref___projection #"a-textio.ads" 64 0 0# 
   (a : tcountB__ref) : tcountB =
  a.tcountB__content
 
 meta "model_projection" function tcountB__ref___projection
 
 meta "inline : no" function tcountB__ref___projection
 
 val tcountB__havoc #"a-textio.ads" 64 0 0# 
   (x : tcountB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__TcountB__rep
 use        Ada__text_io__TcountB
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__text_io__TcountB.tcountB, 
 predicate in_range = Ada__text_io__TcountB.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type count #"a-textio.ads" 64 0 0# 
 
 function first #"a-textio.ads" 64 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 64 0 0# 
   : int =
  2147483647
 
 predicate in_range #"a-textio.ads" 64 0 0# 
   (x : int)  =
  #"a-textio.ads" 64 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type count__ref #"a-textio.ads" 64 0 0# =
  { mutable count__content "model_trace:" : count }
 
 function count__ref___projection #"a-textio.ads" 64 0 0# 
   (a : count__ref) : count =
  a.count__content
 
 meta "model_projection" function count__ref___projection
 
 meta "inline : no" function count__ref___projection
 
 val count__havoc #"a-textio.ads" 64 0 0# 
   (x : count__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__count__rep
 use        Ada__text_io__count
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__text_io__count.count, 
 predicate in_range = Ada__text_io__count.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__positive_count
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive_count #"a-textio.ads" 68 0 0# 
 
 function first #"a-textio.ads" 68 0 0# 
   : int =
  1
 
 function last #"a-textio.ads" 68 0 0# 
   : int =
  2147483647
 
 predicate in_range #"a-textio.ads" 68 0 0# 
   (x : int)  =
  #"a-textio.ads" 68 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type positive_count__ref #"a-textio.ads" 68 0 0# =
  { mutable positive_count__content "model_trace:" : positive_count }
 
 function positive_count__ref___projection #"a-textio.ads" 68 0 0# 
   (a : positive_count__ref) : positive_count =
  a.positive_count__content
 
 meta "model_projection" function positive_count__ref___projection
 
 meta "inline : no" function positive_count__ref___projection
 
 val positive_count__havoc #"a-textio.ads" 68 0 0# 
   (x : positive_count__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__positive_count__rep
 use        Ada__text_io__positive_count
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__text_io__positive_count.positive_count, 
 predicate in_range = Ada__text_io__positive_count.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__unbounded
 use import "_gnatprove_standard".Main

 function unbounded #"a-textio.ads" 70 0 0# "model" "model_trace:13863" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module for axiomatizing type "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__field
 use import "_gnatprove_standard".Main
 use import "int".Int

 type field #"a-textio.ads" 73 0 0# 
 
 function first #"a-textio.ads" 73 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 73 0 0# 
   : int =
  255
 
 predicate in_range #"a-textio.ads" 73 0 0# 
   (x : int)  =
  #"a-textio.ads" 73 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = field, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type field__ref #"a-textio.ads" 73 0 0# =
  { mutable field__content "model_trace:" : field }
 
 function field__ref___projection #"a-textio.ads" 73 0 0# 
   (a : field__ref) : field =
  a.field__content
 
 meta "model_projection" function field__ref___projection
 
 meta "inline : no" function field__ref___projection
 
 val field__havoc #"a-textio.ads" 73 0 0# 
   (x : field__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__field__rep
 use        Ada__text_io__field
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__text_io__field.field, 
 predicate in_range = Ada__text_io__field.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__number_base
 use import "_gnatprove_standard".Main
 use import "int".Int

 type number_base #"a-textio.ads" 78 0 0# 
 
 function first #"a-textio.ads" 78 0 0# 
   : int =
  2
 
 function last #"a-textio.ads" 78 0 0# 
   : int =
  16
 
 predicate in_range #"a-textio.ads" 78 0 0# 
   (x : int)  =
  #"a-textio.ads" 78 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = number_base, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type number_base__ref #"a-textio.ads" 78 0 0# =
  { mutable number_base__content "model_trace:" : number_base }
 
 function number_base__ref___projection #"a-textio.ads" 78 0 0# 
   (a : number_base__ref) : number_base =
  a.number_base__content
 
 meta "model_projection" function number_base__ref___projection
 
 meta "inline : no" function number_base__ref___projection
 
 val number_base__havoc #"a-textio.ads" 78 0 0# 
   (x : number_base__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__number_base__rep
 use        Ada__text_io__number_base
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__text_io__number_base.number_base, 
 predicate in_range = Ada__text_io__number_base.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for axiomatizing type "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__type_set
 use import "_gnatprove_standard".Main
 use import "int".Int

 type type_set #"a-textio.ads" 80 0 0# 
 
 function first #"a-textio.ads" 80 0 0# 
   : int =
  0
 
 function last #"a-textio.ads" 80 0 0# 
   : int =
  1
 
 predicate in_range #"a-textio.ads" 80 0 0# 
   (x : int)  =
  #"a-textio.ads" 80 0 0# ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = type_set, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type type_set__ref #"a-textio.ads" 80 0 0# =
  { mutable type_set__content "model_trace:" : type_set }
 
 function type_set__ref___projection #"a-textio.ads" 80 0 0# 
   (a : type_set__ref) : type_set =
  a.type_set__content
 
 meta "model_projection" function type_set__ref___projection
 
 meta "inline : no" function type_set__ref___projection
 
 val type_set__havoc #"a-textio.ads" 80 0 0# 
   (x : type_set__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__type_set__rep
 use        Ada__text_io__type_set
 use import "_gnatprove_standard".Main

 clone export "ada__model".Rep_Proj_Int with
 type t = Ada__text_io__type_set.type_set, 
 predicate in_range = Ada__text_io__type_set.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline : no" function to_rep

end

(* Module for defining the constant "mode" defined at a-textio.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__mode
 use import "_gnatprove_standard".Main

 function mode #"a-textio.ads" 88 0 0# "model" "model_trace:13941" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"a-textio.ads" 89 0 0# "model_projected" "model_trace:13951" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function form #"a-textio.ads" 90 0 0# "model_projected" "model_trace:13961" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__form___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__mode
 use import "_gnatprove_standard".Main

 function mode #"a-textio.ads" 94 0 0# "model" "model_trace:13989" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__name
 use import "_gnatprove_standard".Main
 use        Standard__string

 function name #"a-textio.ads" 95 0 0# "model_projected" "model_trace:13998" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__name___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__form
 use import "_gnatprove_standard".Main
 use        Standard__string

 function form #"a-textio.ads" 96 0 0# "model_projected" "model_trace:14007" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__form___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__reset__mode
 use import "_gnatprove_standard".Main

 function mode #"a-textio.ads" 100 0 0# "model" "model_trace:14071" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 53 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__mode___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__mode__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 103 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__mode__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mode" defined at a-textio.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function mode #"a-textio.ads" 103 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
 
 predicate mode__function_guard #"a-textio.ads" 53 0 0# 
   (result : int) (file : Ada__text_io__file_type.file_type) 

end

(* Module for defining the constant "file" defined at a-textio.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__name__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 104 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__name__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "name" defined at a-textio.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function name #"a-textio.ads" 104 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
 
 predicate name__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (file : Ada__text_io__file_type.file_type) 

end

(* Module for defining the constant "file" defined at a-textio.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__form__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 105 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__form__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "form" defined at a-textio.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__form
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function form #"a-textio.ads" 105 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
 
 predicate form__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (file : Ada__text_io__file_type.file_type) 

end

(* Module for defining the constant "file" defined at a-textio.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__is_open__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 107 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__is_open__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "is_open" defined at a-textio.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__is_open
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function is_open #"a-textio.ads" 107 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
 
 predicate is_open__function_guard #"a-textio.ads" 52 0 0# 
   (result : bool) (file : Ada__text_io__file_type.file_type) 

end

(* Module for defining the constant "file" defined at a-textio.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_input__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 113 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_input__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_output__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 114 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_output__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_error__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 115 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_error__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_input
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_input #"a-textio.ads" 117 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
 
 predicate standard_input__function_guard #"a-textio.ads" 52 0 0# 
   (result : Ada__text_io__file_type.file_type) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_output
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_output #"a-textio.ads" 118 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
 
 predicate standard_output__function_guard #"a-textio.ads" 52 0 0# 
   (result : Ada__text_io__file_type.file_type) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_error
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function standard_error #"a-textio.ads" 119 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
 
 predicate standard_error__function_guard #"a-textio.ads" 52 0 0# 
   (result : Ada__text_io__file_type.file_type) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "current_input" defined at a-textio.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_input
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_input #"a-textio.ads" 121 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
 
 predicate current_input__function_guard #"a-textio.ads" 52 0 0# 
   (result : Ada__text_io__file_type.file_type) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "current_output" defined at a-textio.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_output
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_output #"a-textio.ads" 122 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
 
 predicate current_output__function_guard #"a-textio.ads" 52 0 0# 
   (result : Ada__text_io__file_type.file_type) (__void_param : unit) 

end

(* Module for possibly declaring a logic function for "current_error" defined at a-textio.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_error
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function current_error #"a-textio.ads" 123 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
 
 predicate current_error__function_guard #"a-textio.ads" 52 0 0# 
   (result : Ada__text_io__file_type.file_type) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__flush__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 142 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__flush__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 149 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 149 0 0# "model" "model_trace:14403" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 150 0 0# "model" "model_trace:14421" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__2__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 152 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 152 0 0# "model" "model_trace:14448" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 153 0 0# "model" "model_trace:14466" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__2__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 155 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line_length__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line_length" defined at a-textio.ads:155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function line_length #"a-textio.ads" 155 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
 
 predicate line_length__function_guard #"a-textio.ads" 64 0 0# 
   (result : int) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length__2
 use import "_gnatprove_standard".Main

 function line_length__2 #"a-textio.ads" 156 0 0# 
   (__void_param : unit) : int
 
 predicate line_length__2__function_guard #"a-textio.ads" 64 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page_length__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 158 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page_length__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page_length" defined at a-textio.ads:158, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function page_length #"a-textio.ads" 158 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
 
 predicate page_length__function_guard #"a-textio.ads" 64 0 0# 
   (result : int) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length__2
 use import "_gnatprove_standard".Main

 function page_length__2 #"a-textio.ads" 159 0 0# 
   (__void_param : unit) : int
 
 predicate page_length__2__function_guard #"a-textio.ads" 64 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 165 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 165 0 0# "model" "model_trace:14551" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__spacing___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__2__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 166 0 0# "model" "model_trace:14570" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__2__spacing___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 168 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 168 0 0# "model" "model_trace:14598" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__spacing___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__2__spacing
 use import "_gnatprove_standard".Main

 function spacing #"a-textio.ads" 169 0 0# "model" "model_trace:14617" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__2__spacing___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 171 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_line__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_line #"a-textio.ads" 171 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
 
 predicate end_of_line__function_guard #"a-textio.ads" 52 0 0# 
   (result : bool) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line__2
 use import "_gnatprove_standard".Main

 function end_of_line__2 #"a-textio.ads" 172 0 0# 
   (__void_param : unit) : bool
 
 predicate end_of_line__2__function_guard #"a-textio.ads" 172 0 0# 
   (result : bool) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 174 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_page__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 177 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_page__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 180 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_page__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_page #"a-textio.ads" 180 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
 
 predicate end_of_page__function_guard #"a-textio.ads" 52 0 0# 
   (result : bool) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page__2
 use import "_gnatprove_standard".Main

 function end_of_page__2 #"a-textio.ads" 181 0 0# 
   (__void_param : unit) : bool
 
 predicate end_of_page__2__function_guard #"a-textio.ads" 181 0 0# 
   (result : bool) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_file__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 183 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_file__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function end_of_file #"a-textio.ads" 183 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
 
 predicate end_of_file__function_guard #"a-textio.ads" 52 0 0# 
   (result : bool) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file__2
 use import "_gnatprove_standard".Main

 function end_of_file__2 #"a-textio.ads" 184 0 0# 
   (__void_param : unit) : bool
 
 predicate end_of_file__2__function_guard #"a-textio.ads" 184 0 0# 
   (result : bool) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 186 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 186 0 0# "model" "model_trace:14786" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 187 0 0# "model" "model_trace:14804" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__2__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 189 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 189 0 0# "model" "model_trace:14831" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__2__to
 use import "_gnatprove_standard".Main

 function to__ #"a-textio.ads" 190 0 0# "model" "model_trace:14849" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 68 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:190, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__2__to___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__col__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 192 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__col__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "col" defined at a-textio.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function col #"a-textio.ads" 192 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
 
 predicate col__function_guard #"a-textio.ads" 68 0 0# 
   (result : int) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "col__2" defined at a-textio.ads:193, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col__2
 use import "_gnatprove_standard".Main

 function col__2 #"a-textio.ads" 193 0 0# 
   (__void_param : unit) : int
 
 predicate col__2__function_guard #"a-textio.ads" 68 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:195, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 195 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:195, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "line" defined at a-textio.ads:195, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function line #"a-textio.ads" 195 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
 
 predicate line__function_guard #"a-textio.ads" 68 0 0# 
   (result : int) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "line__2" defined at a-textio.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line__2
 use import "_gnatprove_standard".Main

 function line__2 #"a-textio.ads" 196 0 0# 
   (__void_param : unit) : int
 
 predicate line__2__function_guard #"a-textio.ads" 68 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 198 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "page" defined at a-textio.ads:198, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function page #"a-textio.ads" 198 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
 
 predicate page__function_guard #"a-textio.ads" 68 0 0# 
   (result : int) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "page__2" defined at a-textio.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page__2
 use import "_gnatprove_standard".Main

 function page__2 #"a-textio.ads" 199 0 0# 
   (__void_param : unit) : int
 
 predicate page__2__function_guard #"a-textio.ads" 68 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 205 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 207 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__item
 use import "_gnatprove_standard".Main

 function item #"a-textio.ads" 207 0 0# "model" "model_trace:15008" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__2__item
 use import "_gnatprove_standard".Main

 function item #"a-textio.ads" 208 0 0# "model" "model_trace:15026" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__look_ahead__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 211 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 220 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 227 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 239 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 241 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 241 0 0# "model_projected" "model_trace:15269" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:242, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 242 0 0# "model_projected" "model_trace:15287" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:242, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:245, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 245 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:245, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:253, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__3__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 253 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__3__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__3
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 function get_line__3 #"a-textio.ads" 253 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
 
 predicate get_line__3__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (file : Ada__text_io__file_type.file_type) 

end

(* Module for possibly declaring a logic function for "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__4
 use import "_gnatprove_standard".Main
 use        Standard__string

 function get_line__4 #"a-textio.ads" 256 0 0# 
   (__void_param : unit) : Standard__string.string
 
 predicate get_line__4__function_guard #"system.ads" 1 0 0# 
   (result : Standard__string.string) (__void_param : unit) 

end

(* Module for defining the constant "file" defined at a-textio.ads:260, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 function file #"a-textio.ads" 260 0 0# 
   : Ada__text_io__file_type.file_type
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:260, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:261, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 261 0 0# "model_projected" "model_trace:15414" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:261, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:264, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string

 function item #"a-textio.ads" 264 0 0# "model_projected" "model_trace:15432" 
   : Standard__string.string
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:264, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:439, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__write__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array

 function item #"a-textio.ads" 439 0 0# "model_projected" "model_trace:15923" 
   : Ada__streams__stream_element_array.stream_element_array
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 54 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__write__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__eof_char
 use import "_gnatprove_standard".Main

 function eof_char #"a-textio.ads" 460 0 0# 
   (__void_param : unit) : int
 
 predicate eof_char__function_guard #"system.ads" 1 0 0# 
   (result : int) (__void_param : unit) 

end

(* Module for defining the constant "http_port" defined at network_ns.ads:9, created in Gnat2Why.Decls.Translate_Constant *)
module Network_ns__http_port
 use import "_gnatprove_standard".Main

 function http_port #"network_ns.ads" 9 0 0# "model" "model_trace:13642" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "max_cxns" defined at network_ns.ads:10, created in Gnat2Why.Decls.Translate_Constant *)
module Network_ns__max_cxns
 use import "_gnatprove_standard".Main

 function max_cxns #"network_ns.ads" 10 0 0# "model" "model_trace:13652" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module for defining the constant "server_socket" defined at network_ns.ads:18, created in Gnat2Why.Decls.Translate_Constant *)
module Network_ns__get_client_cxn__server_socket
 use import "_gnatprove_standard".Main

 function server_socket #"network_ns.ads" 18 0 0# "model" "model_trace:13704" 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server_socket" defined at network_ns.ads:18, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Network_ns__get_client_cxn__server_socket___axiom
 use import "_gnatprove_standard".Main


end
(* Module for defining a ref holding the value of variable "local_partition_id" defined at s-stalib.ads:213, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__local_partition_id
 use import "_gnatprove_standard".Main

 val local_partition_id #"s-stalib.ads" 213 0 0# "model_projected" "model_trace:9254"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "local_partition_id" defined at s-stalib.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__local_partition_id___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "exception_trace" defined at s-stalib.ads:246, created in Gnat2Why.Decls.Translate_Variable *)
module System__standard_library__exception_trace
 use import "_gnatprove_standard".Main

 val exception_trace #"s-stalib.ads" 246 0 0# "model_projected" "model_trace:9302"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-stalib.ads" 218 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "exception_trace" defined at s-stalib.ads:246, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__standard_library__exception_trace___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at a-except.ads:124, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__exceptions__save_occurrence__target
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val target__split_fields #"a-except.ads" 124 0 0# "model_projected" "model_trace:6854"  : Ada__exceptions__exception_occurrence.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-except.ads" 286 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at a-except.ads:124, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__exceptions__save_occurrence__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "stream" defined at a-stream.ads:58, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__stream
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 val stream__split_fields #"a-stream.ads" 58 0 0# "model_projected" "model_trace:9602"  : Ada__streams__root_stream_type.__split_fields__ref 
 
 function stream__attr__tag #"a-stream.ads" 58 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 58 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at a-stream.ads:58, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-stream.ads:59, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val item #"a-stream.ads" 59 0 0# "model_projected" "model_trace:9611"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function item__first #"a-stream.ads" 59 0 0# "model_projected" "model_trace:9611'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last #"a-stream.ads" 59 0 0# "model_projected" "model_trace:9611'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-stream.ads:59, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-stream.ads:60, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read__last
 use import "_gnatprove_standard".Main

 val last #"a-stream.ads" 60 0 0# "model_projected" "model_trace:9620"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-stream.ads:60, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "stream" defined at a-stream.ads:64, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__write__stream
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 val stream__split_fields #"a-stream.ads" 64 0 0# "model_projected" "model_trace:9638"  : Ada__streams__root_stream_type.__split_fields__ref 
 
 function stream__attr__tag #"a-stream.ads" 64 0 0# 
   : int
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 64 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "stream" defined at a-stream.ads:64, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write__stream___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "v" defined at a-stream.ads:78, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val v #"a-stream.ads" 78 0 0# "model_projected" "model_trace:9687"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function v__first #"a-stream.ads" 78 0 0# "model_projected" "model_trace:9687'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function v__last #"a-stream.ads" 78 0 0# "model_projected" "model_trace:9687'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read_sea__v___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "v" defined at a-stream.ads:84, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__stream_element_arraySR__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val v #"a-stream.ads" 84 0 0#  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function v__first #"a-stream.ads" 84 0 0# 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function v__last #"a-stream.ads" 84 0 0# 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__stream_element_arraySR__v___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:94, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__3__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV32__Interfaces__c__char

 val target #"i-c.ads" 94 0 0# "model_projected" "model_trace:11087"  : Array__BV32__Interfaces__c__char.map__ref 
 
 function target__first #"i-c.ads" 94 0 0# "model_projected" "model_trace:11087'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 94 0 0# "model_projected" "model_trace:11087'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:95, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__3__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val count #"i-c.ads" 95 0 0# "model_projected" "model_trace:11096"  : BV32.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__3__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:100, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__3__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val target #"i-c.ads" 100 0 0# "model_projected" "model_trace:11133"  : Array__Int__Standard__character.map__ref 
 
 function target__first #"i-c.ads" 100 0 0# "model_projected" "model_trace:11133'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 100 0 0# "model_projected" "model_trace:11133'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__3__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 101 0 0# "model_projected" "model_trace:11142"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__3__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:130, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__6__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV32__Interfaces__c__wchar_t

 val target #"i-c.ads" 130 0 0# "model_projected" "model_trace:11336"  : Array__BV32__Interfaces__c__wchar_t.map__ref 
 
 function target__first #"i-c.ads" 130 0 0# "model_projected" "model_trace:11336'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 130 0 0# "model_projected" "model_trace:11336'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:131, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__6__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val count #"i-c.ads" 131 0 0# "model_projected" "model_trace:11345"  : BV32.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__6__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:136, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__6__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__wide_character

 val target #"i-c.ads" 136 0 0# "model_projected" "model_trace:11382"  : Array__Int__Standard__wide_character.map__ref 
 
 function target__first #"i-c.ads" 136 0 0# "model_projected" "model_trace:11382'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 136 0 0# "model_projected" "model_trace:11382'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:137, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__6__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 137 0 0# "model_projected" "model_trace:11391"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__6__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:176, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__9__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV32__Interfaces__c__char16_t

 val target #"i-c.ads" 176 0 0# "model_projected" "model_trace:11621"  : Array__BV32__Interfaces__c__char16_t.map__ref 
 
 function target__first #"i-c.ads" 176 0 0# "model_projected" "model_trace:11621'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 176 0 0# "model_projected" "model_trace:11621'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:176, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:177, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__9__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val count #"i-c.ads" 177 0 0# "model_projected" "model_trace:11630"  : BV32.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__9__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:183, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__9__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__wide_character

 val target #"i-c.ads" 183 0 0# "model_projected" "model_trace:11671"  : Array__Int__Standard__wide_character.map__ref 
 
 function target__first #"i-c.ads" 183 0 0# "model_projected" "model_trace:11671'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 183 0 0# "model_projected" "model_trace:11671'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:184, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__9__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 184 0 0# "model_projected" "model_trace:11680"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:184, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__9__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:218, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__12__target
 use import "_gnatprove_standard".Main
 use        Interfaces__c__size_t
 use        Array__BV32__Interfaces__c__char32_t

 val target #"i-c.ads" 218 0 0# "model_projected" "model_trace:11903"  : Array__BV32__Interfaces__c__char32_t.map__ref 
 
 function target__first #"i-c.ads" 218 0 0# "model_projected" "model_trace:11903'First" 
   : Interfaces__c__size_t.size_t
 
 function target__last #"i-c.ads" 218 0 0# "model_projected" "model_trace:11903'Last" 
   : Interfaces__c__size_t.size_t
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:218, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:219, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_c__12__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val count #"i-c.ads" 219 0 0# "model_projected" "model_trace:11912"  : BV32.t__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"i-c.ads" 60 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:219, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_c__12__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at i-c.ads:225, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__12__target
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__wide_wide_character

 val target #"i-c.ads" 225 0 0# "model_projected" "model_trace:11953"  : Array__Int__Standard__wide_wide_character.map__ref 
 
 function target__first #"i-c.ads" 225 0 0# "model_projected" "model_trace:11953'First" 
   : Standard__integer.integer
 
 function target__last #"i-c.ads" 225 0 0# "model_projected" "model_trace:11953'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at i-c.ads:225, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at i-c.ads:226, created in Gnat2Why.Decls.Translate_Variable *)
module Interfaces__c__to_ada__12__count
 use import "_gnatprove_standard".Main

 val count #"i-c.ads" 226 0 0# "model_projected" "model_trace:11962"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at i-c.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c__to_ada__12__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "socket" defined at g-socket.ads:818, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__create_socket__socket
 use import "_gnatprove_standard".Main

 val socket #"g-socket.ads" 818 0 0# "model_projected" "model_trace:4356"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:818, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__create_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "socket" defined at g-socket.ads:825, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__accept_socket__socket
 use import "_gnatprove_standard".Main

 val socket #"g-socket.ads" 825 0 0# "model_projected" "model_trace:4403"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:825, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "address" defined at g-socket.ads:826, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__accept_socket__address
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val address__split_fields #"g-socket.ads" 826 0 0# "model_projected" "model_trace:4412"  : Gnat__sockets__sock_addr_type.__split_fields__ref 
 
 val address__split_discrs #"g-socket.ads" 826 0 0#  : Gnat__sockets__sock_addr_type.__split_discrs__ref 
 
 function address__attr__constrained #"g-socket.ads" 826 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 826 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "address" defined at g-socket.ads:826, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__address___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "socket" defined at g-socket.ads:836, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__accept_socket__2__socket
 use import "_gnatprove_standard".Main

 val socket #"g-socket.ads" 836 0 0# "model_projected" "model_trace:4439"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:836, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__2__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "address" defined at g-socket.ads:837, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__accept_socket__2__address
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val address__split_fields #"g-socket.ads" 837 0 0# "model_projected" "model_trace:4448"  : Gnat__sockets__sock_addr_type.__split_fields__ref 
 
 val address__split_discrs #"g-socket.ads" 837 0 0#  : Gnat__sockets__sock_addr_type.__split_discrs__ref 
 
 function address__attr__constrained #"g-socket.ads" 837 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 837 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "address" defined at g-socket.ads:837, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__2__address___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "status" defined at g-socket.ads:840, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__accept_socket__2__status
 use import "_gnatprove_standard".Main

 val status #"g-socket.ads" 840 0 0# "model_projected" "model_trace:4477"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 444 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "status" defined at g-socket.ads:840, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__accept_socket__2__status___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "status" defined at g-socket.ads:868, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__connect_socket__2__status
 use import "_gnatprove_standard".Main

 val status #"g-socket.ads" 868 0 0# "model_projected" "model_trace:4605"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 444 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "status" defined at g-socket.ads:868, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__connect_socket__2__status___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "request" defined at g-socket.ads:880, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__control_socket__request
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__request_type

 val request__split_fields #"g-socket.ads" 880 0 0# "model_projected" "model_trace:4632"  : Gnat__sockets__request_type.__split_fields__ref 
 
 val request__split_discrs #"g-socket.ads" 880 0 0#  : Gnat__sockets__request_type.__split_discrs__ref 
 
 function request__attr__constrained #"g-socket.ads" 880 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 880 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "request" defined at g-socket.ads:880, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__control_socket__request___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at g-socket.ads:913, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__receive_socket__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val item #"g-socket.ads" 913 0 0# "model_projected" "model_trace:4778"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function item__first #"g-socket.ads" 913 0 0# "model_projected" "model_trace:4778'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last #"g-socket.ads" 913 0 0# "model_projected" "model_trace:4778'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:913, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at g-socket.ads:914, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__receive_socket__last
 use import "_gnatprove_standard".Main

 val last #"g-socket.ads" 914 0 0# "model_projected" "model_trace:4791"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at g-socket.ads:914, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at g-socket.ads:926, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__receive_socket__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val item #"g-socket.ads" 926 0 0# "model_projected" "model_trace:4832"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function item__first #"g-socket.ads" 926 0 0# "model_projected" "model_trace:4832'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last #"g-socket.ads" 926 0 0# "model_projected" "model_trace:4832'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:926, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at g-socket.ads:927, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__receive_socket__2__last
 use import "_gnatprove_standard".Main

 val last #"g-socket.ads" 927 0 0# "model_projected" "model_trace:4845"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at g-socket.ads:927, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__2__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "from" defined at g-socket.ads:928, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__receive_socket__2__from
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val from__split_fields #"g-socket.ads" 928 0 0# "model_projected" "model_trace:4858"  : Gnat__sockets__sock_addr_type.__split_fields__ref 
 
 val from__split_discrs #"g-socket.ads" 928 0 0#  : Gnat__sockets__sock_addr_type.__split_discrs__ref 
 
 function from__attr__constrained #"g-socket.ads" 928 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 928 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "from" defined at g-socket.ads:928, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_socket__2__from___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at g-socket.ads:938, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__receive_vector__count
 use import "_gnatprove_standard".Main

 val count #"g-socket.ads" 938 0 0# "model_projected" "model_trace:4904"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at g-socket.ads:938, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__receive_vector__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at g-socket.ads:954, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__send_socket__last
 use import "_gnatprove_standard".Main

 val last #"g-socket.ads" 954 0 0# "model_projected" "model_trace:4981"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at g-socket.ads:954, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at g-socket.ads:972, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__send_socket__2__last
 use import "_gnatprove_standard".Main

 val last #"g-socket.ads" 972 0 0# "model_projected" "model_trace:5049"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at g-socket.ads:972, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__2__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at g-socket.ads:981, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__send_socket__3__last
 use import "_gnatprove_standard".Main

 val last #"g-socket.ads" 981 0 0# "model_projected" "model_trace:5103"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at g-socket.ads:981, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_socket__3__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "count" defined at g-socket.ads:991, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__send_vector__count
 use import "_gnatprove_standard".Main

 val count #"g-socket.ads" 991 0 0# "model_projected" "model_trace:5162"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 51 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "count" defined at g-socket.ads:991, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__send_vector__count___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "status" defined at g-socket.ads:1000, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__set_close_on_exec__status
 use import "_gnatprove_standard".Main

 val status #"g-socket.ads" 1000 0 0# "model_projected" "model_trace:5212"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1000 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "status" defined at g-socket.ads:1000, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set_close_on_exec__status___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at g-socket.ads:1056, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__clear__item
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val item__split_fields #"g-socket.ads" 1056 0 0# "model_projected" "model_trace:5406"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:1056, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__clear__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "target" defined at g-socket.ads:1059, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__copy__target
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val target__split_fields #"g-socket.ads" 1059 0 0# "model_projected" "model_trace:5442"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "target" defined at g-socket.ads:1059, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__copy__target___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at g-socket.ads:1062, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__empty__item
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val item__split_fields #"g-socket.ads" 1062 0 0# "model_projected" "model_trace:5460"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:1062, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__empty__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at g-socket.ads:1065, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__get__item
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val item__split_fields #"g-socket.ads" 1065 0 0# "model_projected" "model_trace:5478"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:1065, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "socket" defined at g-socket.ads:1065, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__get__socket
 use import "_gnatprove_standard".Main

 val socket #"g-socket.ads" 1065 0 0# "model_projected" "model_trace:5487"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "socket" defined at g-socket.ads:1065, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__get__socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at g-socket.ads:1077, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__set__item
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val item__split_fields #"g-socket.ads" 1077 0 0# "model_projected" "model_trace:5552"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at g-socket.ads:1077, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__set__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "selector" defined at g-socket.ads:1106, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__create_selector__selector
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type

 val selector__split_fields #"g-socket.ads" 1106 0 0# "model_projected" "model_trace:5598"  : Gnat__sockets__selector_type.__split_fields__ref 
 
 val selector__split_discrs #"g-socket.ads" 1106 0 0#  : Gnat__sockets__selector_type.__split_discrs__ref 
 
 function selector__attr__constrained #"g-socket.ads" 1106 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1106 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "selector" defined at g-socket.ads:1106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__create_selector__selector___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "selector" defined at g-socket.ads:1109, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__close_selector__selector
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type

 val selector__split_fields #"g-socket.ads" 1109 0 0# "model_projected" "model_trace:5616"  : Gnat__sockets__selector_type.__split_fields__ref 
 
 val selector__split_discrs #"g-socket.ads" 1109 0 0#  : Gnat__sockets__selector_type.__split_discrs__ref 
 
 function selector__attr__constrained #"g-socket.ads" 1109 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1109 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "selector" defined at g-socket.ads:1109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__close_selector__selector___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "selector" defined at g-socket.ads:1117, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__selector
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type

 val selector__split_fields #"g-socket.ads" 1117 0 0# "model_projected" "model_trace:5634"  : Gnat__sockets__selector_type.__split_fields__ref 
 
 val selector__split_discrs #"g-socket.ads" 1117 0 0#  : Gnat__sockets__selector_type.__split_discrs__ref 
 
 function selector__attr__constrained #"g-socket.ads" 1117 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1117 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "selector" defined at g-socket.ads:1117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__selector___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_socket_set" defined at g-socket.ads:1118, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__r_socket_set
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val r_socket_set__split_fields #"g-socket.ads" 1118 0 0# "model_projected" "model_trace:5643"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_socket_set" defined at g-socket.ads:1118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__r_socket_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "w_socket_set" defined at g-socket.ads:1119, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__w_socket_set
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val w_socket_set__split_fields #"g-socket.ads" 1119 0 0# "model_projected" "model_trace:5652"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "w_socket_set" defined at g-socket.ads:1119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__w_socket_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "status" defined at g-socket.ads:1120, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__status
 use import "_gnatprove_standard".Main

 val status #"g-socket.ads" 1120 0 0# "model_projected" "model_trace:5661"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 444 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "status" defined at g-socket.ads:1120, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__status___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "selector" defined at g-socket.ads:1141, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__2__selector
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type

 val selector__split_fields #"g-socket.ads" 1141 0 0# "model_projected" "model_trace:5689"  : Gnat__sockets__selector_type.__split_fields__ref 
 
 val selector__split_discrs #"g-socket.ads" 1141 0 0#  : Gnat__sockets__selector_type.__split_discrs__ref 
 
 function selector__attr__constrained #"g-socket.ads" 1141 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1141 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "selector" defined at g-socket.ads:1141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__2__selector___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "r_socket_set" defined at g-socket.ads:1142, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__2__r_socket_set
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val r_socket_set__split_fields #"g-socket.ads" 1142 0 0# "model_projected" "model_trace:5698"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "r_socket_set" defined at g-socket.ads:1142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__2__r_socket_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "w_socket_set" defined at g-socket.ads:1143, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__2__w_socket_set
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val w_socket_set__split_fields #"g-socket.ads" 1143 0 0# "model_projected" "model_trace:5707"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "w_socket_set" defined at g-socket.ads:1143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__2__w_socket_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "e_socket_set" defined at g-socket.ads:1144, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__2__e_socket_set
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type

 val e_socket_set__split_fields #"g-socket.ads" 1144 0 0# "model_projected" "model_trace:5716"  : Gnat__sockets__socket_set_type.__split_fields__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1202 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "e_socket_set" defined at g-socket.ads:1144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__2__e_socket_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "status" defined at g-socket.ads:1145, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__check_selector__2__status
 use import "_gnatprove_standard".Main

 val status #"g-socket.ads" 1145 0 0# "model_projected" "model_trace:5725"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 444 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "status" defined at g-socket.ads:1145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__check_selector__2__status___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "selector" defined at g-socket.ads:1152, created in Gnat2Why.Decls.Translate_Variable *)
module Gnat__sockets__abort_selector__selector
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type

 val selector__split_fields #"g-socket.ads" 1152 0 0# "model_projected" "model_trace:5753"  : Gnat__sockets__selector_type.__split_fields__ref 
 
 val selector__split_discrs #"g-socket.ads" 1152 0 0#  : Gnat__sockets__selector_type.__split_discrs__ref 
 
 function selector__attr__constrained #"g-socket.ads" 1152 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1152 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "selector" defined at g-socket.ads:1152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Gnat__sockets__abort_selector__selector___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:87, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__create__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 87 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:93, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__open__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 93 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:98, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__close__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 98 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__close__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:99, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__delete__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 99 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__delete__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 100 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__2__file
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val file #"a-textio.ads" 101 0 0#  : Ada__text_io__file_type.file_type__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 52 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__2__file___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 205 0 0# "model_projected" "model_trace:14963"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:206, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__2__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 206 0 0# "model_projected" "model_trace:14981"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:212, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 212 0 0# "model_projected" "model_trace:15053"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line #"a-textio.ads" 213 0 0# "model_projected" "model_trace:15062"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 213 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__end_of_line___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:216, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 216 0 0# "model_projected" "model_trace:15080"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__end_of_line
 use import "_gnatprove_standard".Main

 val end_of_line #"a-textio.ads" 217 0 0# "model_projected" "model_trace:15089"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 217 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__end_of_line___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:221, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 221 0 0# "model_projected" "model_trace:15116"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:221, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:224, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__2__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 224 0 0# "model_projected" "model_trace:15134"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:228, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 228 0 0# "model_projected" "model_trace:15161"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:228, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:229, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__available
 use import "_gnatprove_standard".Main

 val available #"a-textio.ads" 229 0 0# "model_projected" "model_trace:15170"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 229 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__available___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:232, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__item
 use import "_gnatprove_standard".Main

 val item #"a-textio.ads" 232 0 0# "model_projected" "model_trace:15188"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:233, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__available
 use import "_gnatprove_standard".Main

 val available #"a-textio.ads" 233 0 0# "model_projected" "model_trace:15197"  : bool__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-textio.ads" 233 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__available___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__3__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 239 0 0# "model_projected" "model_trace:15224"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 239 0 0# "model_projected" "model_trace:15224'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 239 0 0# "model_projected" "model_trace:15224'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:240, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__4__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 240 0 0# "model_projected" "model_trace:15242"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 240 0 0# "model_projected" "model_trace:15242'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 240 0 0# "model_projected" "model_trace:15242'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:240, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__4__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:246, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 246 0 0# "model_projected" "model_trace:15314"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 246 0 0# "model_projected" "model_trace:15314'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 246 0 0# "model_projected" "model_trace:15314'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:246, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:247, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__last
 use import "_gnatprove_standard".Main

 val last #"a-textio.ads" 247 0 0# "model_projected" "model_trace:15323"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:247, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:250, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Array__Int__Standard__character

 val item #"a-textio.ads" 250 0 0# "model_projected" "model_trace:15341"  : Array__Int__Standard__character.map__ref 
 
 function item__first #"a-textio.ads" 250 0 0# "model_projected" "model_trace:15341'First" 
   : Standard__integer.integer
 
 function item__last #"a-textio.ads" 250 0 0# "model_projected" "model_trace:15341'Last" 
   : Standard__integer.integer
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:250, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:251, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__last
 use import "_gnatprove_standard".Main

 val last #"a-textio.ads" 251 0 0# "model_projected" "model_trace:15350"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"system.ads" 1 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:251, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__default_wcem
 use import "_gnatprove_standard".Main

 val default_wcem #"a-textio.ads" 362 0 0# "model_projected" "model_trace:15617"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"s-wchcon.ads" 94 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__default_wcem___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:433, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__Tstream_element_offsetB
 use        Array__Int__Ada__streams__stream_element

 val item #"a-textio.ads" 433 0 0# "model_projected" "model_trace:15879"  : Array__Int__Ada__streams__stream_element.map__ref 
 
 function item__first #"a-textio.ads" 433 0 0# "model_projected" "model_trace:15879'First" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item__last #"a-textio.ads" 433 0 0# "model_projected" "model_trace:15879'Last" 
   : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:433, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__item___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:434, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__last
 use import "_gnatprove_standard".Main

 val last #"a-textio.ads" 434 0 0# "model_projected" "model_trace:15892"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"a-stream.ads" 44 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:434, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__last___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "server_socket" defined at network_ns.ads:13, created in Gnat2Why.Decls.Translate_Variable *)
module Network_ns__initialize_tcp_state__server_socket
 use import "_gnatprove_standard".Main

 val server_socket #"network_ns.ads" 13 0 0# "model_projected" "model_trace:13669"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server_socket" defined at network_ns.ads:13, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Network_ns__initialize_tcp_state__server_socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "server_socket_addr" defined at network_ns.ads:14, created in Gnat2Why.Decls.Translate_Variable *)
module Network_ns__initialize_tcp_state__server_socket_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val server_socket_addr__split_fields #"network_ns.ads" 14 0 0# "model_projected" "model_trace:13682"  : Gnat__sockets__sock_addr_type.__split_fields__ref 
 
 val server_socket_addr__split_discrs #"network_ns.ads" 14 0 0#  : Gnat__sockets__sock_addr_type.__split_discrs__ref 
 
 function server_socket_addr__attr__constrained #"network_ns.ads" 14 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"network_ns.ads" 14 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server_socket_addr" defined at network_ns.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Network_ns__initialize_tcp_state__server_socket_addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "client_socket" defined at network_ns.ads:19, created in Gnat2Why.Decls.Translate_Variable *)
module Network_ns__get_client_cxn__client_socket
 use import "_gnatprove_standard".Main

 val client_socket #"network_ns.ads" 19 0 0# "model_projected" "model_trace:13717"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "client_socket" defined at network_ns.ads:19, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Network_ns__get_client_cxn__client_socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "client_socket_addr" defined at network_ns.ads:20, created in Gnat2Why.Decls.Translate_Variable *)
module Network_ns__get_client_cxn__client_socket_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val client_socket_addr__split_fields #"network_ns.ads" 20 0 0# "model_projected" "model_trace:13730"  : Gnat__sockets__sock_addr_type.__split_fields__ref 
 
 val client_socket_addr__split_discrs #"network_ns.ads" 20 0 0#  : Gnat__sockets__sock_addr_type.__split_discrs__ref 
 
 function client_socket_addr__attr__constrained #"network_ns.ads" 20 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"network_ns.ads" 20 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "client_socket_addr" defined at network_ns.ads:20, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Network_ns__get_client_cxn__client_socket_addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "server_socket" defined at main.adb:8, created in Gnat2Why.Decls.Translate_Variable *)
module Main__server_socket
 use import "_gnatprove_standard".Main

 val server_socket #"main.adb" 8 0 0# "model_projected" "model_trace:2321"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server_socket" defined at main.adb:8, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__server_socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "server_socket_addr" defined at main.adb:9, created in Gnat2Why.Decls.Translate_Variable *)
module Main__server_socket_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val server_socket_addr__split_fields #"main.adb" 9 0 0# "model_projected" "model_trace:2334"  : Gnat__sockets__sock_addr_type.__split_fields__ref 
 
 val server_socket_addr__split_discrs #"main.adb" 9 0 0#  : Gnat__sockets__sock_addr_type.__split_discrs__ref 
 
 function server_socket_addr__attr__constrained #"main.adb" 9 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"main.adb" 9 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "server_socket_addr" defined at main.adb:9, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__server_socket_addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "client_socket" defined at main.adb:10, created in Gnat2Why.Decls.Translate_Variable *)
module Main__client_socket
 use import "_gnatprove_standard".Main

 val client_socket #"main.adb" 10 0 0# "model_projected" "model_trace:2347"  : int__ref 
 
 function attr__ATTRIBUTE_ADDRESS #"g-socket.ads" 1167 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "client_socket" defined at main.adb:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__client_socket___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "client_socket_addr" defined at main.adb:11, created in Gnat2Why.Decls.Translate_Variable *)
module Main__client_socket_addr
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val client_socket_addr__split_fields #"main.adb" 11 0 0# "model_projected" "model_trace:2360"  : Gnat__sockets__sock_addr_type.__split_fields__ref 
 
 val client_socket_addr__split_discrs #"main.adb" 11 0 0#  : Gnat__sockets__sock_addr_type.__split_discrs__ref 
 
 function client_socket_addr__attr__constrained #"main.adb" 11 0 0# 
   : bool
 
 function attr__ATTRIBUTE_ADDRESS #"main.adb" 11 0 0# 
   : int

end

(* Module giving an empty axiom for the entity "client_socket_addr" defined at main.adb:11, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__client_socket_addr___axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "network_ns__initialize_tcp_state__E6b__e," created in Gnat2Why.Decls.Translate_External_Object *)
module Network_ns__initialize_tcp_state__E6b__e
 use import "_gnatprove_standard".Main

 val e #"main.adb" 11 0 0#  : Main.__private__ref 

end

(* Module giving an empty axiom for the entity "network_ns__initialize_tcp_state__E6b__e", created in Gnat2Why.Decls.Translate_External_Object *)
module Network_ns__initialize_tcp_state__E6b__e___axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_short_integer

 predicate dynamic_invariant #"main.adb" 11 0 0# "inline" 
   (temp___expr_3 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_3)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_4 : int) (temp___skip_top_level_5 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__short_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_9 : int) (temp___is_init_6 : bool) (temp___skip_constant_7 : bool) (temp___do_toplevel_8 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_6 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_9)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_10 : int) (temp___skip_top_level_11 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_15 : int) (temp___is_init_12 : bool) (temp___skip_constant_13 : bool) (temp___do_toplevel_14 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_12 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_15)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_16 : int) (temp___skip_top_level_17 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_21 : int) (temp___is_init_18 : bool) (temp___skip_constant_19 : bool) (temp___do_toplevel_20 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_18 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_21)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_22 : int) (temp___skip_top_level_23 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__long_long_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_27 : int) (temp___is_init_24 : bool) (temp___skip_constant_25 : bool) (temp___do_toplevel_26 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_24 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_27)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_28 : int) (temp___skip_top_level_29 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_33 : int) (temp___is_init_30 : bool) (temp___skip_constant_31 : bool) (temp___do_toplevel_32 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_30 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_33)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_34 : int) (temp___skip_top_level_35 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_39 : int) (temp___is_init_36 : bool) (temp___skip_constant_37 : bool) (temp___do_toplevel_38 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_36 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_39)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_40 : int) (temp___skip_top_level_41 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Standard__short_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_45 : Float32.t) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_42 \/ (Float32.le Standard__short_float.first Standard__short_float.last) )) then (
   (Standard__short_float.dynamic_property Standard__short_float.first Standard__short_float.last temp___expr_45)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_46 : Float32.t) (temp___skip_top_level_47 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Standard__float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_51 : Float32.t) (temp___is_init_48 : bool) (temp___skip_constant_49 : bool) (temp___do_toplevel_50 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_48 \/ (Float32.le Standard__float.first Standard__float.last) )) then (
   (Standard__float.dynamic_property Standard__float.first Standard__float.last temp___expr_51)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_52 : Float32.t) (temp___skip_top_level_53 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64
 use        Standard__long_float

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_57 : Float64.t) (temp___is_init_54 : bool) (temp___skip_constant_55 : bool) (temp___do_toplevel_56 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_54 \/ (Float64.le Standard__long_float.first Standard__long_float.last) )) then (
   (Standard__long_float.dynamic_property Standard__long_float.first Standard__long_float.last temp___expr_57)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_58 : Float64.t) (temp___skip_top_level_59 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_63 : int) (temp___is_init_60 : bool) (temp___skip_constant_61 : bool) (temp___do_toplevel_62 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_60 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_63)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_64 : int) (temp___skip_top_level_65 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_69 : int) (temp___is_init_66 : bool) (temp___skip_constant_67 : bool) (temp___do_toplevel_68 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_66 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_69)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_70 : int) (temp___skip_top_level_71 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__wide_wide_character

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_75 : int) (temp___is_init_72 : bool) (temp___skip_constant_73 : bool) (temp___do_toplevel_74 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_72 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_75)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_76 : int) (temp___skip_top_level_77 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_82 : Standard__string.string) (temp___is_init_79 : bool) (temp___skip_constant_80 : bool) (temp___do_toplevel_81 : bool)  =
  #"system.ads" 1 0 0# (if (temp___skip_constant_80) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_82) (Standard__string.last temp___expr_82))))

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_88 : Standard__wide_string.wide_string) (temp___is_init_85 : bool) (temp___skip_constant_86 : bool) (temp___do_toplevel_87 : bool)  =
  #"system.ads" 1 0 0# (if (temp___skip_constant_86) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_88) (Standard__wide_string.last temp___expr_88))))

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_string

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_94 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_91 : bool) (temp___skip_constant_92 : bool) (temp___do_toplevel_93 : bool)  =
  #"system.ads" 1 0 0# (if (temp___skip_constant_92) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_94) (Standard__wide_wide_string.last temp___expr_94))))

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration___axiom
 use import "_gnatprove_standard".Main
 use        Standard__duration

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_99 : Standard__duration.duration) (temp___is_init_96 : bool) (temp___skip_constant_97 : bool) (temp___do_toplevel_98 : bool)  =
  #"system.ads" 1 0 0# true
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_100 : Standard__duration.duration) (temp___skip_top_level_101 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_8

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_105 : int) (temp___is_init_102 : bool) (temp___skip_constant_103 : bool) (temp___do_toplevel_104 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_102 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_105)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_106 : int) (temp___skip_top_level_107 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_16

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_111 : int) (temp___is_init_108 : bool) (temp___skip_constant_109 : bool) (temp___do_toplevel_110 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_108 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_111)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_112 : int) (temp___skip_top_level_113 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_32

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_117 : int) (temp___is_init_114 : bool) (temp___skip_constant_115 : bool) (temp___do_toplevel_116 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_114 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_117)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_118 : int) (temp___skip_top_level_119 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer_64

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_123 : int) (temp___is_init_120 : bool) (temp___skip_constant_121 : bool) (temp___do_toplevel_122 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_120 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_123)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_124 : int) (temp___skip_top_level_125 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__universal_integer

 predicate dynamic_invariant #"system.ads" 1 0 0# "inline" 
   (temp___expr_129 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool)  =
  #"system.ads" 1 0 0# (if (( temp___is_init_126 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_129)) else true)
 
 predicate default_initial_assumption #"system.ads" 1 0 0# "inline" 
   (temp___expr_130 : int) (temp___skip_top_level_131 : bool)  =
  #"system.ads" 1 0 0# true

end

(* Module for defining the value of the aggregate at system.ads:166, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__underlying_priorities__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__integer__rep
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 function system__underlying_priorities__aggregate_def #"system.ads" 166 0 0# 
   (temp___134 : int) (temp___135 : int) (temp___136 : int) (temp___137 : int) (temp___138 : int) (temp___139 : int) (temp___140 : int) (temp___141 : int) (temp___142 : int) (temp___143 : int) (temp___144 : int) (temp___145 : int) (temp___146 : int) (temp___147 : int) (temp___148 : int) (temp___149 : int) : Array__Int__Standard__integer.map
 
 axiom def_axiom :
  (forall temp___134 #"system.ads" 166 0 0#  temp___135 #"system.ads" 166 0 0#  temp___136 #"system.ads" 166 0 0#  temp___137 #"system.ads" 166 0 0#  temp___138 #"system.ads" 166 0 0#  temp___139 #"system.ads" 166 0 0#  temp___140 #"system.ads" 166 0 0#  temp___141 #"system.ads" 166 0 0#  temp___142 #"system.ads" 166 0 0#  temp___143 #"system.ads" 166 0 0#  temp___144 #"system.ads" 166 0 0#  temp___145 #"system.ads" 166 0 0#  temp___146 #"system.ads" 166 0 0#  temp___147 #"system.ads" 166 0 0#  temp___148 #"system.ads" 166 0 0#  temp___149 #"system.ads" 166 0 0#  : int.
   (let temp___133 = (system__underlying_priorities__aggregate_def temp___134 temp___135 temp___136 temp___137 temp___138 temp___139 temp___140 temp___141 temp___142 temp___143 temp___144 temp___145 temp___146 temp___147 temp___148 temp___149) in (
    (forall temp___150 #"system.ads" 166 0 0#  : int.
     (if (( (31 <= temp___150) /\ (temp___150 <= 31) )) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___149))) else if (( (21 <= temp___150) /\ (temp___150 <= 30) )) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___148)))  else if ((temp___150 = 20)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___147)))  else if ((temp___150 = 19)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___146)))  else if ((temp___150 = 18)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___145)))  else if ((temp___150 = 17)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___144)))  else if ((temp___150 = 16)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___143)))  else if ((temp___150 = 15)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___142)))  else if ((temp___150 = 14)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___141)))  else if ((temp___150 = 13)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___140)))  else if ((temp___150 = 12)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___139)))  else if ((temp___150 = 11)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___138)))  else if ((temp___150 = 10)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___137)))  else if ((temp___150 = 9)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___136)))  else if ((temp___150 = 8)) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___135)))  else if (( (0 <= temp___150) /\ (temp___150 <= 7) )) then (
      ((Array__Int__Standard__integer.get temp___133 temp___150) = (Standard__integer__rep.of_rep temp___134))) else (
      true)))))
  )

end

(* Module for defining a value for string literal  defined at s-parame.ads:119, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_151
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_151 #"s-parame.ads" 119 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_151__def_axiom :
  (forall __void_param #"s-parame.ads" 119 0 0#  : unit [(temp___String_Literal_151 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 1)) = 95) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 2)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 3)) = 103) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 4)) = 110) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 5)) = 97) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 6)) = 116) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 7)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 8)) = 109) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 9)) = 97) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 10)) = 108) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 11)) = 108) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 12)) = 111) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_151 __void_param) 13)) = 99) ))

end

(* Module for defining a value for string literal  defined at s-stalib.ads:142, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_152
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_152 #"s-stalib.ads" 142 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_152__def_axiom :
  (forall __void_param #"s-stalib.ads" 142 0 0#  : unit [(temp___String_Literal_152 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 1)) = 67) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 2)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 3)) = 78) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 4)) = 83) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 5)) = 84) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 6)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 7)) = 65) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 8)) = 73) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 9)) = 78) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 10)) = 84) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 11)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 12)) = 69) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 13)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 14)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 15)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 16)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_152 __void_param) 17)) = 0) ))

end

(* Module for defining a value for string literal  defined at s-stalib.ads:143, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_153
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_153 #"s-stalib.ads" 143 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_153__def_axiom :
  (forall __void_param #"s-stalib.ads" 143 0 0#  : unit [(temp___String_Literal_153 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 1)) = 80) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 2)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 3)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 4)) = 71) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 5)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 6)) = 65) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 7)) = 77) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 8)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 9)) = 69) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 10)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 11)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 12)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 13)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_153 __void_param) 14)) = 0) ))

end

(* Module for defining a value for string literal  defined at s-stalib.ads:144, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_154
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_154 #"s-stalib.ads" 144 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_154__def_axiom :
  (forall __void_param #"s-stalib.ads" 144 0 0#  : unit [(temp___String_Literal_154 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 1)) = 83) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 2)) = 84) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 3)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 4)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 5)) = 65) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 6)) = 71) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 7)) = 69) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 8)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 9)) = 69) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 10)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 11)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 12)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 13)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_154 __void_param) 14)) = 0) ))

end

(* Module for defining a value for string literal  defined at s-stalib.ads:145, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_155
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_155 #"s-stalib.ads" 145 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_155__def_axiom :
  (forall __void_param #"s-stalib.ads" 145 0 0#  : unit [(temp___String_Literal_155 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 1)) = 84) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 2)) = 65) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 3)) = 83) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 4)) = 75) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 5)) = 73) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 6)) = 78) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 7)) = 71) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 8)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 9)) = 69) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 10)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 11)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 12)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 13)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_155 __void_param) 14)) = 0) ))

end

(* Module for defining a value for string literal  defined at s-stalib.ads:146, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_156
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_156 #"s-stalib.ads" 146 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_156__def_axiom :
  (forall __void_param #"s-stalib.ads" 146 0 0#  : unit [(temp___String_Literal_156 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 1)) = 95) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 2)) = 65) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 3)) = 66) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 4)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 5)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 6)) = 84) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 7)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 8)) = 83) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 9)) = 73) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 10)) = 71) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 11)) = 78) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 12)) = 65) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 13)) = 76) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_156 __void_param) 14)) = 0) ))

end

(* Module for defining a value for string literal  defined at s-stalib.ads:148, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_157
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_157 #"s-stalib.ads" 148 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_157__def_axiom :
  (forall __void_param #"s-stalib.ads" 148 0 0#  : unit [(temp___String_Literal_157 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 1)) = 78) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 2)) = 85) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 3)) = 77) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 4)) = 69) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 5)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 6)) = 73) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 7)) = 67) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 8)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 9)) = 69) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 10)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 11)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 12)) = 79) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 13)) = 82) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_157 __void_param) 14)) = 0) ))

end

(* Module for possibly declaring a logic function for "abort_undefer_direct" defined at s-stalib.ads:254, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__standard_library__abort_undefer_direct
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "adafinal" defined at s-stalib.ads:259, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__standard_library__adafinal
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_exception" defined at a-except.ads:90, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_exception
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence" defined at a-except.ads:96, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "save_occurrence" defined at a-except.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__save_occurrence
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_exception_always" defined at a-except.ads:188, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_exception_always
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_from_signal_handler" defined at a-except.ads:197, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_from_signal_handler
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "raise_from_controlled_operation" defined at a-except.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__raise_from_controlled_operation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_library_exception_if_any" defined at a-except.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_library_exception_if_any
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence_always" defined at a-except.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence_always
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reraise_occurrence_no_defer" defined at a-except.ads:238, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__reraise_occurrence_no_defer
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "poll" defined at a-except.ads:270, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__exceptions__poll
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "read" defined at a-stream.ads:57, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__streams__read
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "write" defined at a-stream.ads:63, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__streams__write
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__3" defined at i-c.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__3" defined at i-c.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__6" defined at i-c.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__6
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__6" defined at i-c.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__6
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__9" defined at i-c.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__9
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__9" defined at i-c.ads:181, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__9
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_c__12" defined at i-c.ads:216, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_c__12
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "to_ada__12" defined at i-c.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c__to_ada__12
 use import "_gnatprove_standard".Main


end

(* Module for defining a value for string literal  defined at s-oscons.ads:59, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_164
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_164 #"s-oscons.ads" 59 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_164__def_axiom :
  (forall __void_param #"s-oscons.ads" 59 0 0#  : unit [(temp___String_Literal_164 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 1)) = 105) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 2)) = 54) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 3)) = 56) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 4)) = 54) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 5)) = 45) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 6)) = 112) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 7)) = 99) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 8)) = 45) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 9)) = 109) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 10)) = 105) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 11)) = 110) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 12)) = 103) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 13)) = 119) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 14)) = 51) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_164 __void_param) 15)) = 50) ))

end

(* Module for defining a value for string literal  defined at s-oscons.ads:164, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_165
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character

 function temp___String_Literal_165 #"s-oscons.ads" 164 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_165__def_axiom :
  (forall __void_param #"s-oscons.ads" 164 0 0#  : unit [(temp___String_Literal_165 __void_param)].
   true)

end

(* Module for defining a value for string literal  defined at s-oscons.ads:273, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_166
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function temp___String_Literal_166 #"s-oscons.ads" 273 0 0# 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_166__def_axiom :
  (forall __void_param #"s-oscons.ads" 273 0 0#  : unit [(temp___String_Literal_166 __void_param)].
   ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 1)) = 95) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 2)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 3)) = 103) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 4)) = 110) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 5)) = 97) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 6)) = 116) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 7)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 8)) = 105) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 9)) = 110) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 10)) = 101) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 11)) = 116) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 12)) = 95) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 13)) = 112) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 14)) = 116) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 15)) = 111) ) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_166 __void_param) 16)) = 110) ))

end

(* Module for possibly declaring a logic function for "initialize" defined at g-socket.ads:379, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__initialize
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "initialize__2" defined at g-socket.ads:390, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__initialize__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "finalize" defined at g-socket.ads:403, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__finalize
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "create_socket" defined at g-socket.ads:817, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__create_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "accept_socket" defined at g-socket.ads:823, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__accept_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "bind_socket" defined at g-socket.ads:848, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__bind_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close_socket" defined at g-socket.ads:854, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__close_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "connect_socket" defined at g-socket.ads:857, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__connect_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "control_socket" defined at g-socket.ads:878, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__control_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "listen_socket" defined at g-socket.ads:901, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__listen_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "receive_socket" defined at g-socket.ads:911, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__receive_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "receive_socket__2" defined at g-socket.ads:924, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__receive_socket__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "send_socket__2" defined at g-socket.ads:969, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__send_socket__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "send_socket__3" defined at g-socket.ads:978, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__send_socket__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_close_on_exec" defined at g-socket.ads:997, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__set_close_on_exec
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_socket_option" defined at g-socket.ads:1008, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__set_socket_option
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "shutdown_socket" defined at g-socket.ads:1014, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__shutdown_socket
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clear" defined at g-socket.ads:1056, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__clear
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "copy" defined at g-socket.ads:1059, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__copy
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "empty" defined at g-socket.ads:1062, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__empty
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get" defined at g-socket.ads:1065, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__get
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set" defined at g-socket.ads:1077, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__set
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "create_selector" defined at g-socket.ads:1106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__create_selector
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close_selector" defined at g-socket.ads:1109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__close_selector
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "check_selector" defined at g-socket.ads:1116, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__check_selector
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "check_selector__2" defined at g-socket.ads:1140, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__check_selector__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "abort_selector" defined at g-socket.ads:1152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Gnat__sockets__abort_selector
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the aggregate at g-socket.ads:1234, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___171
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___171 #"g-socket.ads" 1234 0 0# 
   (temp___173 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___173 #"g-socket.ads" 1234 0 0#  : int.
   (let temp___172 = (temp___171 temp___173) in (
    (forall temp___174 #"g-socket.ads" 1234 0 0#  : int.
     ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___172 temp___174) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___173)))))
  )

end

(* Module for defining the value of the aggregate at g-socket.ads:1236, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___175
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___175 #"g-socket.ads" 1236 0 0# 
   (temp___177 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___177 #"g-socket.ads" 1236 0 0#  : int.
   (let temp___176 = (temp___175 temp___177) in (
    (forall temp___178 #"g-socket.ads" 1236 0 0#  : int.
     ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___176 temp___178) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___177)))))
  )

end

(* Module for defining the value of the aggregate at g-socket.ads:1238, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___179
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___179 #"g-socket.ads" 1238 0 0# 
   (temp___181 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___181 #"g-socket.ads" 1238 0 0#  : int.
   (let temp___180 = (temp___179 temp___181) in (
    (forall temp___182 #"g-socket.ads" 1238 0 0#  : int.
     ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___180 temp___182) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___181)))))
  )

end

(* Module for defining the value of the aggregate at g-socket.ads:1240, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___183
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___183 #"g-socket.ads" 1240 0 0# 
   (temp___185 : int) (temp___186 : int) (temp___187 : int) (temp___188 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___185 #"g-socket.ads" 1240 0 0#  temp___186 #"g-socket.ads" 1240 0 0#  temp___187 #"g-socket.ads" 1240 0 0#  temp___188 #"g-socket.ads" 1240 0 0#  : int.
   (let temp___184 = (temp___183 temp___185 temp___186 temp___187 temp___188) in (
    ( ( ( ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___184 1) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___185)) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___184 2) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___186)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___184 3) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___187)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___184 4) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___188)) )))
  )

end

(* Module for defining the value of the aggregate at g-socket.ads:1243, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___190
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___190 #"g-socket.ads" 1243 0 0# 
   (temp___192 : int) (temp___193 : int) (temp___194 : int) (temp___195 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___192 #"g-socket.ads" 1243 0 0#  temp___193 #"g-socket.ads" 1243 0 0#  temp___194 #"g-socket.ads" 1243 0 0#  temp___195 #"g-socket.ads" 1243 0 0#  : int.
   (let temp___191 = (temp___190 temp___192 temp___193 temp___194 temp___195) in (
    ( ( ( ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___191 1) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___192)) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___191 2) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___193)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___191 3) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___194)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___191 4) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___195)) )))
  )

end

(* Module for defining the value of the aggregate at g-socket.ads:1245, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___197
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___197 #"g-socket.ads" 1245 0 0# 
   (temp___199 : int) (temp___200 : int) (temp___201 : int) (temp___202 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___199 #"g-socket.ads" 1245 0 0#  temp___200 #"g-socket.ads" 1245 0 0#  temp___201 #"g-socket.ads" 1245 0 0#  temp___202 #"g-socket.ads" 1245 0 0#  : int.
   (let temp___198 = (temp___197 temp___199 temp___200 temp___201 temp___202) in (
    ( ( ( ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___198 1) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___199)) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___198 2) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___200)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___198 3) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___201)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___198 4) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___202)) )))
  )

end

(* Module for defining the value of the aggregate at g-socket.ads:1247, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___204
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___204 #"g-socket.ads" 1247 0 0# 
   (temp___206 : int) (temp___207 : int) (temp___208 : int) (temp___209 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___206 #"g-socket.ads" 1247 0 0#  temp___207 #"g-socket.ads" 1247 0 0#  temp___208 #"g-socket.ads" 1247 0 0#  temp___209 #"g-socket.ads" 1247 0 0#  : int.
   (let temp___205 = (temp___204 temp___206 temp___207 temp___208 temp___209) in (
    ( ( ( ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___205 1) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___206)) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___205 2) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___207)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___205 3) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___208)) ) /\ ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___205 4) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___209)) )))
  )

end

(* Module for possibly declaring a logic function for "strncpy" defined at s-crtl.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strncpy
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "clearerr" defined at s-crtl.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__clearerr
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "free" defined at s-crtl.ads:137, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__free
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "memcpy" defined at s-crtl.ads:177, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memcpy
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "memmove" defined at s-crtl.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memmove
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "mktemp" defined at s-crtl.ads:183, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mktemp
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "rewind" defined at s-crtl.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rewind
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "tmpnam" defined at s-crtl.ads:217, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpnam
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_binary_mode" defined at i-cstrea.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_binary_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_text_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_text_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_mode" defined at i-cstrea.ads:254, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_mode
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "full_name" defined at i-cstrea.ads:262, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__full_name
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the aggregate at s-wchcon.ads:170, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__wch_con__wc_encoding_letters__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__character
 use        Standard__character__rep
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 function system__wch_con__wc_encoding_letters__aggregate_def #"s-wchcon.ads" 170 0 0# 
   (temp___212 : int) (temp___213 : int) (temp___214 : int) (temp___215 : int) (temp___216 : int) (temp___217 : int) : Array__Int__Standard__character.map
 
 axiom def_axiom :
  (forall temp___212 #"s-wchcon.ads" 170 0 0#  temp___213 #"s-wchcon.ads" 170 0 0#  temp___214 #"s-wchcon.ads" 170 0 0#  temp___215 #"s-wchcon.ads" 170 0 0#  temp___216 #"s-wchcon.ads" 170 0 0#  temp___217 #"s-wchcon.ads" 170 0 0#  : int.
   (let temp___211 = (system__wch_con__wc_encoding_letters__aggregate_def temp___212 temp___213 temp___214 temp___215 temp___216 temp___217) in (
    ( ( ( ( ( ((Array__Int__Standard__character.get temp___211 1) = (Standard__character__rep.of_rep temp___212)) /\ ((Array__Int__Standard__character.get temp___211 2) = (Standard__character__rep.of_rep temp___213)) ) /\ ((Array__Int__Standard__character.get temp___211 3) = (Standard__character__rep.of_rep temp___214)) ) /\ ((Array__Int__Standard__character.get temp___211 4) = (Standard__character__rep.of_rep temp___215)) ) /\ ((Array__Int__Standard__character.get temp___211 5) = (Standard__character__rep.of_rep temp___216)) ) /\ ((Array__Int__Standard__character.get temp___211 6) = (Standard__character__rep.of_rep temp___217)) )))
  )

end

(* Module for defining the value of the aggregate at s-wchcon.ads:194, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module System__wch_con__wc_longest_sequences__aggregate_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__natural__rep
 use        Array__Int__Standard__natural
 use        Array__Int__Standard__natural
 use        Array__Int__Standard__natural

 function system__wch_con__wc_longest_sequences__aggregate_def #"s-wchcon.ads" 194 0 0# 
   (temp___221 : int) (temp___222 : int) (temp___223 : int) (temp___224 : int) (temp___225 : int) (temp___226 : int) : Array__Int__Standard__natural.map
 
 axiom def_axiom :
  (forall temp___221 #"s-wchcon.ads" 194 0 0#  temp___222 #"s-wchcon.ads" 194 0 0#  temp___223 #"s-wchcon.ads" 194 0 0#  temp___224 #"s-wchcon.ads" 194 0 0#  temp___225 #"s-wchcon.ads" 194 0 0#  temp___226 #"s-wchcon.ads" 194 0 0#  : int.
   (let temp___220 = (system__wch_con__wc_longest_sequences__aggregate_def temp___221 temp___222 temp___223 temp___224 temp___225 temp___226) in (
    ( ( ( ( ( ((Array__Int__Standard__natural.get temp___220 1) = (Standard__natural__rep.of_rep temp___221)) /\ ((Array__Int__Standard__natural.get temp___220 2) = (Standard__natural__rep.of_rep temp___222)) ) /\ ((Array__Int__Standard__natural.get temp___220 3) = (Standard__natural__rep.of_rep temp___223)) ) /\ ((Array__Int__Standard__natural.get temp___220 4) = (Standard__natural__rep.of_rep temp___224)) ) /\ ((Array__Int__Standard__natural.get temp___220 5) = (Standard__natural__rep.of_rep temp___225)) ) /\ ((Array__Int__Standard__natural.get temp___220 6) = (Standard__natural__rep.of_rep temp___226)) )))
  )

end

(* Module for possibly declaring a logic function for "create" defined at a-textio.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__create
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "open" defined at a-textio.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__open
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "close" defined at a-textio.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__close
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "delete" defined at a-textio.ads:99, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__delete
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset" defined at a-textio.ads:100, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_input" defined at a-textio.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_input
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_output" defined at a-textio.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_output
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_error" defined at a-textio.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_error
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush" defined at a-textio.ads:142, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line" defined at a-textio.ads:165, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_page" defined at a-textio.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_col" defined at a-textio.ads:186, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line" defined at a-textio.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get" defined at a-textio.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__2" defined at a-textio.ads:206, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put" defined at a-textio.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__2" defined at a-textio.ads:208, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__3" defined at a-textio.ads:239, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get__4" defined at a-textio.ads:240, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__3" defined at a-textio.ads:241, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__3
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put__4" defined at a-textio.ads:242, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__4
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line" defined at a-textio.ads:244, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line" defined at a-textio.ads:259, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line__2
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__initialize_standard_files
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "initialize_tcp_state" defined at network_ns.ads:12, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Network_ns__initialize_tcp_state
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "get_client_cxn" defined at network_ns.ads:17, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Network_ns__get_client_cxn
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "main" defined at main.adb:7, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main
 use import "_gnatprove_standard".Main


end

(* Module for defining the loop exit exception for the loop "L_1" defined at main.adb:17, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Main__L_1
 use import "_gnatprove_standard".Main

 exception L_1

end

(* Module giving an empty axiom for the entity "L_1" defined at main.adb:17, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__L_1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "name" defined at system.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__name

 predicate dynamic_invariant #"main.adb" 17 0 0# "inline" 
   (temp___expr_231 : int) (temp___is_init_228 : bool) (temp___skip_constant_229 : bool) (temp___do_toplevel_230 : bool)  =
  #"system.ads" 46 0 0# (if (( temp___is_init_228 \/ (System__name.first <= System__name.last) )) then (
   (System__name.dynamic_property System__name.first System__name.last temp___expr_231)) else true)
 
 predicate default_initial_assumption #"system.ads" 46 0 0# "inline" 
   (temp___expr_232 : int) (temp___skip_top_level_233 : bool)  =
  #"system.ads" 46 0 0# true

end

(* Module giving axioms for type "address" defined at system.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address

 predicate dynamic_invariant #"system.ads" 46 0 0# "inline" 
   (temp___expr_237 : BV32.t) (temp___is_init_234 : bool) (temp___skip_constant_235 : bool) (temp___do_toplevel_236 : bool)  =
  #"system.ads" 108 0 0# (if (( temp___is_init_234 \/ (BV32.ule System__address.first System__address.last) )) then (
   (System__address.dynamic_property System__address.first System__address.last temp___expr_237)) else true)
 
 predicate default_initial_assumption #"system.ads" 108 0 0# "inline" 
   (temp___expr_238 : BV32.t) (temp___skip_top_level_239 : bool)  =
  #"system.ads" 108 0 0# true

end

(* Module giving axioms for type "bit_order" defined at system.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__bit_order

 predicate dynamic_invariant #"system.ads" 108 0 0# "inline" 
   (temp___expr_243 : int) (temp___is_init_240 : bool) (temp___skip_constant_241 : bool) (temp___do_toplevel_242 : bool)  =
  #"system.ads" 91 0 0# (if (( temp___is_init_240 \/ (System__bit_order.first <= System__bit_order.last) )) then (
   (System__bit_order.dynamic_property System__bit_order.first System__bit_order.last temp___expr_243)) else true)
 
 predicate default_initial_assumption #"system.ads" 91 0 0# "inline" 
   (temp___expr_244 : int) (temp___skip_top_level_245 : bool)  =
  #"system.ads" 91 0 0# true

end

(* Module giving axioms for type "any_priority" defined at system.ads:100, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__any_priority

 predicate dynamic_invariant #"system.ads" 91 0 0# "inline" 
   (temp___expr_249 : int) (temp___is_init_246 : bool) (temp___skip_constant_247 : bool) (temp___do_toplevel_248 : bool)  =
  #"system.ads" 100 0 0# (if (( temp___is_init_246 \/ (System__any_priority.first <= System__any_priority.last) )) then (
   (System__any_priority.dynamic_property System__any_priority.first System__any_priority.last temp___expr_249)) else true)
 
 predicate default_initial_assumption #"system.ads" 100 0 0# "inline" 
   (temp___expr_250 : int) (temp___skip_top_level_251 : bool)  =
  #"system.ads" 100 0 0# true

end

(* Module giving axioms for type "priority" defined at system.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__priority

 predicate dynamic_invariant #"system.ads" 100 0 0# "inline" 
   (temp___expr_255 : int) (temp___is_init_252 : bool) (temp___skip_constant_253 : bool) (temp___do_toplevel_254 : bool)  =
  #"system.ads" 101 0 0# (if (( temp___is_init_252 \/ (System__priority.first <= System__priority.last) )) then (
   (System__priority.dynamic_property System__priority.first System__priority.last temp___expr_255)) else true)
 
 predicate default_initial_assumption #"system.ads" 101 0 0# "inline" 
   (temp___expr_256 : int) (temp___skip_top_level_257 : bool)  =
  #"system.ads" 101 0 0# true

end

(* Module giving axioms for type "interrupt_priority" defined at system.ads:102, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__interrupt_priority

 predicate dynamic_invariant #"system.ads" 101 0 0# "inline" 
   (temp___expr_261 : int) (temp___is_init_258 : bool) (temp___skip_constant_259 : bool) (temp___do_toplevel_260 : bool)  =
  #"system.ads" 102 0 0# (if (( temp___is_init_258 \/ (System__interrupt_priority.first <= System__interrupt_priority.last) )) then (
   (System__interrupt_priority.dynamic_property System__interrupt_priority.first System__interrupt_priority.last temp___expr_261)) else true)
 
 predicate default_initial_assumption #"system.ads" 102 0 0# "inline" 
   (temp___expr_262 : int) (temp___skip_top_level_263 : bool)  =
  #"system.ads" 102 0 0# true

end

(* Module giving axioms for type "Tpriorities_mappingB" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__Tpriorities_mappingB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "priorities_mapping" defined at system.ads:161, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priorities_mapping___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__integer
 use        Array__Int__Standard__integer

 predicate dynamic_invariant #"system.ads" 102 0 0# "inline" 
   (temp___expr_267 : Array__Int__Standard__integer.map) (temp___is_init_264 : bool) (temp___skip_constant_265 : bool) (temp___do_toplevel_266 : bool)  =
  #"system.ads" 161 0 0# true
 
 predicate default_initial_assumption #"system.ads" 161 0 0# "inline" 
   (temp___expr_269 : Array__Int__Standard__integer.map) (temp___skip_top_level_270 : bool)  =
  #"system.ads" 161 0 0# true

end

(* Module giving axioms for type "T3s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T3s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at system.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__T4s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Ttask_storage_sizeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__task_storage_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__task_storage_size

 predicate dynamic_invariant #"system.ads" 161 0 0# "inline" 
   (temp___expr_276 : int) (temp___is_init_273 : bool) (temp___skip_constant_274 : bool) (temp___do_toplevel_275 : bool)  =
  #"s-parame.ads" 58 0 0# (if (( temp___is_init_273 \/ (System__parameters__task_storage_size.first <= System__parameters__task_storage_size.last) )) then (
   (System__parameters__task_storage_size.dynamic_property System__parameters__task_storage_size.first System__parameters__task_storage_size.last temp___expr_276)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 58 0 0# "inline" 
   (temp___expr_277 : int) (temp___skip_top_level_278 : bool)  =
  #"s-parame.ads" 58 0 0# true

end

(* Module giving axioms for type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Tsize_typeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__size_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__size_type

 predicate dynamic_invariant #"s-parame.ads" 58 0 0# "inline" 
   (temp___expr_282 : int) (temp___is_init_279 : bool) (temp___skip_constant_280 : bool) (temp___do_toplevel_281 : bool)  =
  #"s-parame.ads" 61 0 0# (if (( temp___is_init_279 \/ (System__parameters__size_type.first <= System__parameters__size_type.last) )) then (
   (System__parameters__size_type.dynamic_property System__parameters__size_type.first System__parameters__size_type.last temp___expr_282)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 61 0 0# "inline" 
   (temp___expr_283 : int) (temp___skip_top_level_284 : bool)  =
  #"s-parame.ads" 61 0 0# true

end

(* Module giving axioms for type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__percentage___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__percentage

 predicate dynamic_invariant #"s-parame.ads" 61 0 0# "inline" 
   (temp___expr_288 : int) (temp___is_init_285 : bool) (temp___skip_constant_286 : bool) (temp___do_toplevel_287 : bool)  =
  #"s-parame.ads" 67 0 0# (if (( temp___is_init_285 \/ (System__parameters__percentage.first <= System__parameters__percentage.last) )) then (
   (System__parameters__percentage.dynamic_property System__parameters__percentage.first System__parameters__percentage.last temp___expr_288)) else true)
 
 predicate default_initial_assumption #"s-parame.ads" 67 0 0# "inline" 
   (temp___expr_289 : int) (temp___skip_top_level_290 : bool)  =
  #"s-parame.ads" 67 0 0# true

end

(* Module giving axioms for type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__c_address___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T1s" defined at s-parame.ads:119, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__T1s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tbig_stringP1" defined at s-stalib.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__Tbig_stringP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "big_string" defined at s-stalib.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__big_string___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Standard__character
 use        Array__Int__Standard__character

 predicate dynamic_invariant #"s-parame.ads" 67 0 0# "inline" 
   (temp___expr_294 : Array__Int__Standard__character.map) (temp___is_init_291 : bool) (temp___skip_constant_292 : bool) (temp___do_toplevel_293 : bool)  =
  #"s-stalib.ads" 62 0 0# true
 
 predicate default_initial_assumption #"s-stalib.ads" 62 0 0# "inline" 
   (temp___expr_296 : Array__Int__Standard__character.map) (temp___skip_top_level_297 : bool)  =
  #"s-stalib.ads" 62 0 0# true

end

(* Module giving axioms for type "source" defined at a-unccon.ads:17 instantiated at s-stalib.ads:76, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__to_ptr__source___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T2s" defined at s-stalib.ads:142, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T2s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at s-stalib.ads:143, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T3s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at s-stalib.ads:144, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T4s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T5s" defined at s-stalib.ads:145, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T5s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at s-stalib.ads:146, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T6s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at s-stalib.ads:148, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__T7s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "exception_trace_kind" defined at s-stalib.ads:218, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__standard_library__exception_trace_kind___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__standard_library__exception_trace_kind

 predicate dynamic_invariant #"s-stalib.ads" 62 0 0# "inline" 
   (temp___expr_303 : int) (temp___is_init_300 : bool) (temp___skip_constant_301 : bool) (temp___do_toplevel_302 : bool)  =
  #"s-stalib.ads" 218 0 0# (if (( temp___is_init_300 \/ (System__standard_library__exception_trace_kind.first <= System__standard_library__exception_trace_kind.last) )) then (
   (System__standard_library__exception_trace_kind.dynamic_property System__standard_library__exception_trace_kind.first System__standard_library__exception_trace_kind.last temp___expr_303)) else true)
 
 predicate default_initial_assumption #"s-stalib.ads" 218 0 0# "inline" 
   (temp___expr_304 : int) (temp___skip_top_level_305 : bool)  =
  #"s-stalib.ads" 218 0 0# true

end

(* Module giving axioms for type "traceback_entry" defined at s-traent.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__traceback_entries__traceback_entry___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "tracebacks_array" defined at s-traent.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__traceback_entries__tracebacks_array___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        System__traceback_entries__tracebacks_array

 predicate dynamic_invariant #"s-stalib.ads" 218 0 0# "inline" 
   (temp___expr_309 : System__traceback_entries__tracebacks_array.tracebacks_array) (temp___is_init_306 : bool) (temp___skip_constant_307 : bool) (temp___do_toplevel_308 : bool)  =
  #"s-traent.ads" 56 0 0# (if (temp___skip_constant_307) then (
   true) else (
   (System__traceback_entries__tracebacks_array.dynamic_property Standard__positive.first Standard__positive.last (System__traceback_entries__tracebacks_array.first temp___expr_309) (System__traceback_entries__tracebacks_array.last temp___expr_309))))

end

(* Module giving axioms for type "exception_id" defined at a-except.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_id___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id

 predicate dynamic_invariant #"s-traent.ads" 56 0 0# "inline" 
   (temp___expr_314 : Ada__exceptions__exception_id.exception_id) (temp___is_init_311 : bool) (temp___skip_constant_312 : bool) (temp___do_toplevel_313 : bool)  =
  #"a-except.ads" 58 0 0# true
 
 predicate default_initial_assumption #"a-except.ads" 58 0 0# "inline" 
   (temp___expr_315 : Ada__exceptions__exception_id.exception_id) (temp___skip_top_level_316 : bool)  =
  #"a-except.ads" 58 0 0# true

end

(* Module giving axioms for type "T5s" defined at a-except.ads:297, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T5s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T6s" defined at a-except.ads:297, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T6s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at a-except.ads:312, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence__T7s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Ttracebacks_arrayP1" defined at a-except.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__Ttracebacks_arrayP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "tracebacks_array" defined at a-except.ads:283, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__tracebacks_array___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__System__traceback_entries__traceback_entry
 use        Array__Int__System__traceback_entries__traceback_entry

 predicate dynamic_invariant #"a-except.ads" 58 0 0# "inline" 
   (temp___expr_320 : Array__Int__System__traceback_entries__traceback_entry.map) (temp___is_init_317 : bool) (temp___skip_constant_318 : bool) (temp___do_toplevel_319 : bool)  =
  #"a-except.ads" 283 0 0# true
 
 predicate default_initial_assumption #"a-except.ads" 283 0 0# "inline" 
   (temp___expr_322 : Array__Int__System__traceback_entries__traceback_entry.map) (temp___skip_top_level_323 : bool)  =
  #"a-except.ads" 283 0 0# true

end

(* Module giving axioms for type "exception_occurrence" defined at a-except.ads:286, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__exception_occurrence___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Standard__natural__rep
 use        Ada__exceptions__exception_occurrence__T7s
 use        Ada__exceptions__exception_occurrence__T7s__rep
 use        Ada__exceptions__exception_occurrence

 predicate dynamic_invariant #"a-except.ads" 283 0 0# "inline" 
   (temp___expr_329 : Ada__exceptions__exception_occurrence.exception_occurrence) (temp___is_init_326 : bool) (temp___skip_constant_327 : bool) (temp___do_toplevel_328 : bool)  =
  #"a-except.ads" 286 0 0# true
 
 predicate default_initial_assumption #"a-except.ads" 286 0 0# "inline" 
   (temp___expr_332 : Ada__exceptions__exception_occurrence.exception_occurrence) (temp___skip_top_level_333 : bool)  =
  #"a-except.ads" 286 0 0# ( ( ( (if ((Ada__exceptions__exception_occurrence.ada__exceptions__exception_occurrence__msg_length__pred temp___expr_332)) then (
   ((Standard__natural__rep.to_rep (Ada__exceptions__exception_occurrence.rec__ada__exceptions__exception_occurrence__msg_length (Ada__exceptions__exception_occurrence.__split_fields temp___expr_332))) = 0)) else true) /\ (if ((Ada__exceptions__exception_occurrence.ada__exceptions__exception_occurrence__exception_raised__pred temp___expr_332)) then (
   ((Ada__exceptions__exception_occurrence.rec__ada__exceptions__exception_occurrence__exception_raised (Ada__exceptions__exception_occurrence.__split_fields temp___expr_332)) = (Boolean.of_int 0))) else true) ) /\ (if ((Ada__exceptions__exception_occurrence.ada__exceptions__exception_occurrence__pid__pred temp___expr_332)) then (
   ((Standard__natural__rep.to_rep (Ada__exceptions__exception_occurrence.rec__ada__exceptions__exception_occurrence__pid (Ada__exceptions__exception_occurrence.__split_fields temp___expr_332))) = 0)) else true) ) /\ (if ((Ada__exceptions__exception_occurrence.ada__exceptions__exception_occurrence__num_tracebacks__pred temp___expr_332)) then (
   ((Ada__exceptions__exception_occurrence__T7s__rep.to_rep (Ada__exceptions__exception_occurrence.rec__ada__exceptions__exception_occurrence__num_tracebacks (Ada__exceptions__exception_occurrence.__split_fields temp___expr_332))) = 0)) else true) )

end

(* Module giving axioms for type "code_loc" defined at a-except.ads:159, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__code_loc___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T9s" defined at a-except.ads:343, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T9s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T10s" defined at a-except.ads:343, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T10s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T11s" defined at a-except.ads:347, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T11s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T12s" defined at a-except.ads:347, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__exceptions__T12s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "root_stream_type" defined at a-stream.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__root_stream_type___axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 predicate dynamic_invariant #"a-except.ads" 286 0 0# "inline" 
   (temp___expr_392 : Ada__streams__root_stream_type.root_stream_type) (temp___is_init_389 : bool) (temp___skip_constant_390 : bool) (temp___do_toplevel_391 : bool)  =
  #"a-stream.ads" 70 0 0# true
 
 predicate default_initial_assumption #"a-stream.ads" 70 0 0# "inline" 
   (temp___expr_393 : Ada__streams__root_stream_type.root_stream_type) (temp___skip_top_level_394 : bool)  =
  #"a-stream.ads" 70 0 0# ((Ada__streams__root_stream_type.attr__tag temp___expr_393) = Ada__streams__root_stream_type.__tag)

end

(* Module giving axioms for type "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Ada__streams__stream_element

 predicate dynamic_invariant #"a-stream.ads" 70 0 0# "inline" 
   (temp___expr_398 : BV8.t) (temp___is_init_395 : bool) (temp___skip_constant_396 : bool) (temp___do_toplevel_397 : bool)  =
  #"a-stream.ads" 42 0 0# (if (( temp___is_init_395 \/ (BV8.ule Ada__streams__stream_element.first Ada__streams__stream_element.last) )) then (
   (Ada__streams__stream_element.dynamic_property Ada__streams__stream_element.first Ada__streams__stream_element.last temp___expr_398)) else true)
 
 predicate default_initial_assumption #"a-stream.ads" 42 0 0# "inline" 
   (temp___expr_399 : BV8.t) (temp___skip_top_level_400 : bool)  =
  #"a-stream.ads" 42 0 0# true

end

(* Module giving axioms for type "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__Tstream_element_offsetB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_offset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__streams__stream_element_offset

 predicate dynamic_invariant #"a-stream.ads" 42 0 0# "inline" 
   (temp___expr_404 : int) (temp___is_init_401 : bool) (temp___skip_constant_402 : bool) (temp___do_toplevel_403 : bool)  =
  #"a-stream.ads" 44 0 0# (if (( temp___is_init_401 \/ (Ada__streams__stream_element_offset.first <= Ada__streams__stream_element_offset.last) )) then (
   (Ada__streams__stream_element_offset.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last temp___expr_404)) else true)
 
 predicate default_initial_assumption #"a-stream.ads" 44 0 0# "inline" 
   (temp___expr_405 : int) (temp___skip_top_level_406 : bool)  =
  #"a-stream.ads" 44 0 0# true

end

(* Module giving axioms for type "stream_element_count" defined at a-stream.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__streams__stream_element_count

 predicate dynamic_invariant #"a-stream.ads" 44 0 0# "inline" 
   (temp___expr_410 : int) (temp___is_init_407 : bool) (temp___skip_constant_408 : bool) (temp___do_toplevel_409 : bool)  =
  #"a-stream.ads" 51 0 0# (if (( temp___is_init_407 \/ (Ada__streams__stream_element_count.first <= Ada__streams__stream_element_count.last) )) then (
   (Ada__streams__stream_element_count.dynamic_property Ada__streams__stream_element_count.first Ada__streams__stream_element_count.last temp___expr_410)) else true)
 
 predicate default_initial_assumption #"a-stream.ads" 51 0 0# "inline" 
   (temp___expr_411 : int) (temp___skip_top_level_412 : bool)  =
  #"a-stream.ads" 51 0 0# true

end

(* Module giving axioms for type "stream_element_array" defined at a-stream.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_array___axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_offset
 use        Ada__streams__stream_element_array

 predicate dynamic_invariant #"a-stream.ads" 51 0 0# "inline" 
   (temp___expr_416 : Ada__streams__stream_element_array.stream_element_array) (temp___is_init_413 : bool) (temp___skip_constant_414 : bool) (temp___do_toplevel_415 : bool)  =
  #"a-stream.ads" 54 0 0# (if (temp___skip_constant_414) then (
   true) else (
   (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last (Ada__streams__stream_element_array.first temp___expr_416) (Ada__streams__stream_element_array.last temp___expr_416))))

end

(* Module giving axioms for type "Troot_stream_typeC" defined at a-stream.ads:39, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__Troot_stream_typeC___axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 predicate dynamic_invariant #"a-stream.ads" 54 0 0# "inline" 
   (temp___expr_426 : Ada__streams__root_stream_type.root_stream_type) (temp___is_init_423 : bool) (temp___skip_constant_424 : bool) (temp___do_toplevel_425 : bool)  =
  #"a-stream.ads" 70 0 0# true

end

(* Module giving axioms for type "Tinteger_8B" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_8B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_8" defined at interfac.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_8

 predicate dynamic_invariant #"a-stream.ads" 70 0 0# "inline" 
   (temp___expr_430 : int) (temp___is_init_427 : bool) (temp___skip_constant_428 : bool) (temp___do_toplevel_429 : bool)  =
  #"interfac.ads" 46 0 0# (if (( temp___is_init_427 \/ (Interfaces__integer_8.first <= Interfaces__integer_8.last) )) then (
   (Interfaces__integer_8.dynamic_property Interfaces__integer_8.first Interfaces__integer_8.last temp___expr_430)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 46 0 0# "inline" 
   (temp___expr_431 : int) (temp___skip_top_level_432 : bool)  =
  #"interfac.ads" 46 0 0# true

end

(* Module giving axioms for type "Tinteger_16B" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_16B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_16" defined at interfac.ads:49, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_16___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_16

 predicate dynamic_invariant #"interfac.ads" 46 0 0# "inline" 
   (temp___expr_436 : int) (temp___is_init_433 : bool) (temp___skip_constant_434 : bool) (temp___do_toplevel_435 : bool)  =
  #"interfac.ads" 49 0 0# (if (( temp___is_init_433 \/ (Interfaces__integer_16.first <= Interfaces__integer_16.last) )) then (
   (Interfaces__integer_16.dynamic_property Interfaces__integer_16.first Interfaces__integer_16.last temp___expr_436)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 49 0 0# "inline" 
   (temp___expr_437 : int) (temp___skip_top_level_438 : bool)  =
  #"interfac.ads" 49 0 0# true

end

(* Module giving axioms for type "Tinteger_32B" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_32B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_32" defined at interfac.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_32___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_32

 predicate dynamic_invariant #"interfac.ads" 49 0 0# "inline" 
   (temp___expr_442 : int) (temp___is_init_439 : bool) (temp___skip_constant_440 : bool) (temp___do_toplevel_441 : bool)  =
  #"interfac.ads" 52 0 0# (if (( temp___is_init_439 \/ (Interfaces__integer_32.first <= Interfaces__integer_32.last) )) then (
   (Interfaces__integer_32.dynamic_property Interfaces__integer_32.first Interfaces__integer_32.last temp___expr_442)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 52 0 0# "inline" 
   (temp___expr_443 : int) (temp___skip_top_level_444 : bool)  =
  #"interfac.ads" 52 0 0# true

end

(* Module giving axioms for type "Tinteger_64B" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_64B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "integer_64" defined at interfac.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__integer_64

 predicate dynamic_invariant #"interfac.ads" 52 0 0# "inline" 
   (temp___expr_448 : int) (temp___is_init_445 : bool) (temp___skip_constant_446 : bool) (temp___do_toplevel_447 : bool)  =
  #"interfac.ads" 55 0 0# (if (( temp___is_init_445 \/ (Interfaces__integer_64.first <= Interfaces__integer_64.last) )) then (
   (Interfaces__integer_64.dynamic_property Interfaces__integer_64.first Interfaces__integer_64.last temp___expr_448)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 55 0 0# "inline" 
   (temp___expr_449 : int) (temp___skip_top_level_450 : bool)  =
  #"interfac.ads" 55 0 0# true

end

(* Module giving axioms for type "unsigned_8" defined at interfac.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_8___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__unsigned_8

 predicate dynamic_invariant #"interfac.ads" 55 0 0# "inline" 
   (temp___expr_454 : BV8.t) (temp___is_init_451 : bool) (temp___skip_constant_452 : bool) (temp___do_toplevel_453 : bool)  =
  #"interfac.ads" 63 0 0# (if (( temp___is_init_451 \/ (BV8.ule Interfaces__unsigned_8.first Interfaces__unsigned_8.last) )) then (
   (Interfaces__unsigned_8.dynamic_property Interfaces__unsigned_8.first Interfaces__unsigned_8.last temp___expr_454)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 63 0 0# "inline" 
   (temp___expr_455 : BV8.t) (temp___skip_top_level_456 : bool)  =
  #"interfac.ads" 63 0 0# true

end

(* Module giving axioms for type "unsigned_16" defined at interfac.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_16___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__unsigned_16

 predicate dynamic_invariant #"interfac.ads" 63 0 0# "inline" 
   (temp___expr_460 : BV16.t) (temp___is_init_457 : bool) (temp___skip_constant_458 : bool) (temp___do_toplevel_459 : bool)  =
  #"interfac.ads" 66 0 0# (if (( temp___is_init_457 \/ (BV16.ule Interfaces__unsigned_16.first Interfaces__unsigned_16.last) )) then (
   (Interfaces__unsigned_16.dynamic_property Interfaces__unsigned_16.first Interfaces__unsigned_16.last temp___expr_460)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 66 0 0# "inline" 
   (temp___expr_461 : BV16.t) (temp___skip_top_level_462 : bool)  =
  #"interfac.ads" 66 0 0# true

end

(* Module giving axioms for type "unsigned_24" defined at interfac.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_24___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_24

 predicate dynamic_invariant #"interfac.ads" 66 0 0# "inline" 
   (temp___expr_466 : BV32.t) (temp___is_init_463 : bool) (temp___skip_constant_464 : bool) (temp___do_toplevel_465 : bool)  =
  #"interfac.ads" 69 0 0# (if (( temp___is_init_463 \/ (BV32.ule Interfaces__unsigned_24.first Interfaces__unsigned_24.last) )) then (
   (Interfaces__unsigned_24.dynamic_property Interfaces__unsigned_24.first Interfaces__unsigned_24.last temp___expr_466)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 69 0 0# "inline" 
   (temp___expr_467 : BV32.t) (temp___skip_top_level_468 : bool)  =
  #"interfac.ads" 69 0 0# true

end

(* Module giving axioms for type "unsigned_32" defined at interfac.ads:74, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_32___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__unsigned_32

 predicate dynamic_invariant #"interfac.ads" 69 0 0# "inline" 
   (temp___expr_472 : BV32.t) (temp___is_init_469 : bool) (temp___skip_constant_470 : bool) (temp___do_toplevel_471 : bool)  =
  #"interfac.ads" 74 0 0# (if (( temp___is_init_469 \/ (BV32.ule Interfaces__unsigned_32.first Interfaces__unsigned_32.last) )) then (
   (Interfaces__unsigned_32.dynamic_property Interfaces__unsigned_32.first Interfaces__unsigned_32.last temp___expr_472)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 74 0 0# "inline" 
   (temp___expr_473 : BV32.t) (temp___skip_top_level_474 : bool)  =
  #"interfac.ads" 74 0 0# true

end

(* Module giving axioms for type "unsigned_64" defined at interfac.ads:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_64___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV64
 use        Interfaces__unsigned_64

 predicate dynamic_invariant #"interfac.ads" 74 0 0# "inline" 
   (temp___expr_478 : BV64.t) (temp___is_init_475 : bool) (temp___skip_constant_476 : bool) (temp___do_toplevel_477 : bool)  =
  #"interfac.ads" 77 0 0# (if (( temp___is_init_475 \/ (BV64.ule Interfaces__unsigned_64.first Interfaces__unsigned_64.last) )) then (
   (Interfaces__unsigned_64.dynamic_property Interfaces__unsigned_64.first Interfaces__unsigned_64.last temp___expr_478)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 77 0 0# "inline" 
   (temp___expr_479 : BV64.t) (temp___skip_top_level_480 : bool)  =
  #"interfac.ads" 77 0 0# true

end

(* Module giving axioms for type "Tieee_float_32B" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_32B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_32" defined at interfac.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_32___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Interfaces__ieee_float_32

 predicate dynamic_invariant #"interfac.ads" 77 0 0# "inline" 
   (temp___expr_484 : Float32.t) (temp___is_init_481 : bool) (temp___skip_constant_482 : bool) (temp___do_toplevel_483 : bool)  =
  #"interfac.ads" 169 0 0# (if (( temp___is_init_481 \/ (Float32.le Interfaces__ieee_float_32.first Interfaces__ieee_float_32.last) )) then (
   (Interfaces__ieee_float_32.dynamic_property Interfaces__ieee_float_32.first Interfaces__ieee_float_32.last temp___expr_484)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 169 0 0# "inline" 
   (temp___expr_485 : Float32.t) (temp___skip_top_level_486 : bool)  =
  #"interfac.ads" 169 0 0# true

end

(* Module giving axioms for type "Tieee_float_64B" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_64B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ieee_float_64" defined at interfac.ads:172, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_64___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64
 use        Interfaces__ieee_float_64

 predicate dynamic_invariant #"interfac.ads" 169 0 0# "inline" 
   (temp___expr_490 : Float64.t) (temp___is_init_487 : bool) (temp___skip_constant_488 : bool) (temp___do_toplevel_489 : bool)  =
  #"interfac.ads" 172 0 0# (if (( temp___is_init_487 \/ (Float64.le Interfaces__ieee_float_64.first Interfaces__ieee_float_64.last) )) then (
   (Interfaces__ieee_float_64.dynamic_property Interfaces__ieee_float_64.first Interfaces__ieee_float_64.last temp___expr_490)) else true)
 
 predicate default_initial_assumption #"interfac.ads" 172 0 0# "inline" 
   (temp___expr_491 : Float64.t) (temp___skip_top_level_492 : bool)  =
  #"interfac.ads" 172 0 0# true

end

(* Module giving axioms for type "TintB" defined at i-c.ads:35, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TintB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int" defined at i-c.ads:35, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__int

 predicate dynamic_invariant #"interfac.ads" 172 0 0# "inline" 
   (temp___expr_496 : int) (temp___is_init_493 : bool) (temp___skip_constant_494 : bool) (temp___do_toplevel_495 : bool)  =
  #"i-c.ads" 35 0 0# (if (( temp___is_init_493 \/ (Interfaces__c__int.first <= Interfaces__c__int.last) )) then (
   (Interfaces__c__int.dynamic_property Interfaces__c__int.first Interfaces__c__int.last temp___expr_496)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 35 0 0# "inline" 
   (temp___expr_497 : int) (temp___skip_top_level_498 : bool)  =
  #"i-c.ads" 35 0 0# true

end

(* Module giving axioms for type "TshortB" defined at i-c.ads:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TshortB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "short" defined at i-c.ads:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__short___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__short

 predicate dynamic_invariant #"i-c.ads" 35 0 0# "inline" 
   (temp___expr_502 : int) (temp___is_init_499 : bool) (temp___skip_constant_500 : bool) (temp___do_toplevel_501 : bool)  =
  #"i-c.ads" 36 0 0# (if (( temp___is_init_499 \/ (Interfaces__c__short.first <= Interfaces__c__short.last) )) then (
   (Interfaces__c__short.dynamic_property Interfaces__c__short.first Interfaces__c__short.last temp___expr_502)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 36 0 0# "inline" 
   (temp___expr_503 : int) (temp___skip_top_level_504 : bool)  =
  #"i-c.ads" 36 0 0# true

end

(* Module giving axioms for type "TlongB" defined at i-c.ads:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TlongB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "long" defined at i-c.ads:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__long___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__long

 predicate dynamic_invariant #"i-c.ads" 36 0 0# "inline" 
   (temp___expr_508 : int) (temp___is_init_505 : bool) (temp___skip_constant_506 : bool) (temp___do_toplevel_507 : bool)  =
  #"i-c.ads" 37 0 0# (if (( temp___is_init_505 \/ (Interfaces__c__long.first <= Interfaces__c__long.last) )) then (
   (Interfaces__c__long.dynamic_property Interfaces__c__long.first Interfaces__c__long.last temp___expr_508)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 37 0 0# "inline" 
   (temp___expr_509 : int) (temp___skip_top_level_510 : bool)  =
  #"i-c.ads" 37 0 0# true

end

(* Module giving axioms for type "Tsigned_charB" defined at i-c.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tsigned_charB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "signed_char" defined at i-c.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__signed_char___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__signed_char

 predicate dynamic_invariant #"i-c.ads" 37 0 0# "inline" 
   (temp___expr_514 : int) (temp___is_init_511 : bool) (temp___skip_constant_512 : bool) (temp___do_toplevel_513 : bool)  =
  #"i-c.ads" 40 0 0# (if (( temp___is_init_511 \/ (Interfaces__c__signed_char.first <= Interfaces__c__signed_char.last) )) then (
   (Interfaces__c__signed_char.dynamic_property Interfaces__c__signed_char.first Interfaces__c__signed_char.last temp___expr_514)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 40 0 0# "inline" 
   (temp___expr_515 : int) (temp___skip_top_level_516 : bool)  =
  #"i-c.ads" 40 0 0# true

end

(* Module giving axioms for type "unsigned" defined at i-c.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__unsigned

 predicate dynamic_invariant #"i-c.ads" 40 0 0# "inline" 
   (temp___expr_520 : BV32.t) (temp___is_init_517 : bool) (temp___skip_constant_518 : bool) (temp___do_toplevel_519 : bool)  =
  #"i-c.ads" 43 0 0# (if (( temp___is_init_517 \/ (BV32.ule Interfaces__c__unsigned.first Interfaces__c__unsigned.last) )) then (
   (Interfaces__c__unsigned.dynamic_property Interfaces__c__unsigned.first Interfaces__c__unsigned.last temp___expr_520)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 43 0 0# "inline" 
   (temp___expr_521 : BV32.t) (temp___skip_top_level_522 : bool)  =
  #"i-c.ads" 43 0 0# true

end

(* Module giving axioms for type "unsigned_short" defined at i-c.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned_short___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV16
 use        Interfaces__c__unsigned_short

 predicate dynamic_invariant #"i-c.ads" 43 0 0# "inline" 
   (temp___expr_526 : BV16.t) (temp___is_init_523 : bool) (temp___skip_constant_524 : bool) (temp___do_toplevel_525 : bool)  =
  #"i-c.ads" 44 0 0# (if (( temp___is_init_523 \/ (BV16.ule Interfaces__c__unsigned_short.first Interfaces__c__unsigned_short.last) )) then (
   (Interfaces__c__unsigned_short.dynamic_property Interfaces__c__unsigned_short.first Interfaces__c__unsigned_short.last temp___expr_526)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 44 0 0# "inline" 
   (temp___expr_527 : BV16.t) (temp___skip_top_level_528 : bool)  =
  #"i-c.ads" 44 0 0# true

end

(* Module giving axioms for type "unsigned_long" defined at i-c.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned_long___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__unsigned_long

 predicate dynamic_invariant #"i-c.ads" 44 0 0# "inline" 
   (temp___expr_532 : BV32.t) (temp___is_init_529 : bool) (temp___skip_constant_530 : bool) (temp___do_toplevel_531 : bool)  =
  #"i-c.ads" 45 0 0# (if (( temp___is_init_529 \/ (BV32.ule Interfaces__c__unsigned_long.first Interfaces__c__unsigned_long.last) )) then (
   (Interfaces__c__unsigned_long.dynamic_property Interfaces__c__unsigned_long.first Interfaces__c__unsigned_long.last temp___expr_532)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 45 0 0# "inline" 
   (temp___expr_533 : BV32.t) (temp___skip_top_level_534 : bool)  =
  #"i-c.ads" 45 0 0# true

end

(* Module giving axioms for type "unsigned_char" defined at i-c.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__unsigned_char___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__c__unsigned_char

 predicate dynamic_invariant #"i-c.ads" 45 0 0# "inline" 
   (temp___expr_538 : BV8.t) (temp___is_init_535 : bool) (temp___skip_constant_536 : bool) (temp___do_toplevel_537 : bool)  =
  #"i-c.ads" 47 0 0# (if (( temp___is_init_535 \/ (BV8.ule Interfaces__c__unsigned_char.first Interfaces__c__unsigned_char.last) )) then (
   (Interfaces__c__unsigned_char.dynamic_property Interfaces__c__unsigned_char.first Interfaces__c__unsigned_char.last temp___expr_538)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 47 0 0# "inline" 
   (temp___expr_539 : BV8.t) (temp___skip_top_level_540 : bool)  =
  #"i-c.ads" 47 0 0# true

end

(* Module giving axioms for type "plain_char" defined at i-c.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__plain_char___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Interfaces__c__plain_char

 predicate dynamic_invariant #"i-c.ads" 47 0 0# "inline" 
   (temp___expr_544 : BV8.t) (temp___is_init_541 : bool) (temp___skip_constant_542 : bool) (temp___do_toplevel_543 : bool)  =
  #"i-c.ads" 50 0 0# (if (( temp___is_init_541 \/ (BV8.ule Interfaces__c__plain_char.first Interfaces__c__plain_char.last) )) then (
   (Interfaces__c__plain_char.dynamic_property Interfaces__c__plain_char.first Interfaces__c__plain_char.last temp___expr_544)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 50 0 0# "inline" 
   (temp___expr_545 : BV8.t) (temp___skip_top_level_546 : bool)  =
  #"i-c.ads" 50 0 0# true

end

(* Module giving axioms for type "Tptrdiff_tB" defined at i-c.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tptrdiff_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ptrdiff_t" defined at i-c.ads:56, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__ptrdiff_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__ptrdiff_t

 predicate dynamic_invariant #"i-c.ads" 50 0 0# "inline" 
   (temp___expr_550 : int) (temp___is_init_547 : bool) (temp___skip_constant_548 : bool) (temp___do_toplevel_549 : bool)  =
  #"i-c.ads" 56 0 0# (if (( temp___is_init_547 \/ (Interfaces__c__ptrdiff_t.first <= Interfaces__c__ptrdiff_t.last) )) then (
   (Interfaces__c__ptrdiff_t.dynamic_property Interfaces__c__ptrdiff_t.first Interfaces__c__ptrdiff_t.last temp___expr_550)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 56 0 0# "inline" 
   (temp___expr_551 : int) (temp___skip_top_level_552 : bool)  =
  #"i-c.ads" 56 0 0# true

end

(* Module giving axioms for type "size_t" defined at i-c.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__size_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t

 predicate dynamic_invariant #"i-c.ads" 56 0 0# "inline" 
   (temp___expr_556 : BV32.t) (temp___is_init_553 : bool) (temp___skip_constant_554 : bool) (temp___do_toplevel_555 : bool)  =
  #"i-c.ads" 60 0 0# (if (( temp___is_init_553 \/ (BV32.ule Interfaces__c__size_t.first Interfaces__c__size_t.last) )) then (
   (Interfaces__c__size_t.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last temp___expr_556)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 60 0 0# "inline" 
   (temp___expr_557 : BV32.t) (temp___skip_top_level_558 : bool)  =
  #"i-c.ads" 60 0 0# true

end

(* Module giving axioms for type "Tc_floatB" defined at i-c.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tc_floatB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "c_float" defined at i-c.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__c_float___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float32
 use        Interfaces__c__c_float

 predicate dynamic_invariant #"i-c.ads" 60 0 0# "inline" 
   (temp___expr_562 : Float32.t) (temp___is_init_559 : bool) (temp___skip_constant_560 : bool) (temp___do_toplevel_561 : bool)  =
  #"i-c.ads" 64 0 0# (if (( temp___is_init_559 \/ (Float32.le Interfaces__c__c_float.first Interfaces__c__c_float.last) )) then (
   (Interfaces__c__c_float.dynamic_property Interfaces__c__c_float.first Interfaces__c__c_float.last temp___expr_562)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 64 0 0# "inline" 
   (temp___expr_563 : Float32.t) (temp___skip_top_level_564 : bool)  =
  #"i-c.ads" 64 0 0# true

end

(* Module giving axioms for type "TdoubleB" defined at i-c.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TdoubleB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "double" defined at i-c.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__double___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Float64
 use        Interfaces__c__double

 predicate dynamic_invariant #"i-c.ads" 64 0 0# "inline" 
   (temp___expr_568 : Float64.t) (temp___is_init_565 : bool) (temp___skip_constant_566 : bool) (temp___do_toplevel_567 : bool)  =
  #"i-c.ads" 65 0 0# (if (( temp___is_init_565 \/ (Float64.le Interfaces__c__double.first Interfaces__c__double.last) )) then (
   (Interfaces__c__double.dynamic_property Interfaces__c__double.first Interfaces__c__double.last temp___expr_568)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 65 0 0# "inline" 
   (temp___expr_569 : Float64.t) (temp___skip_top_level_570 : bool)  =
  #"i-c.ads" 65 0 0# true

end

(* Module giving axioms for type "TcharB" defined at i-c.ads:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__TcharB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "char" defined at i-c.ads:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char

 predicate dynamic_invariant #"i-c.ads" 65 0 0# "inline" 
   (temp___expr_574 : int) (temp___is_init_571 : bool) (temp___skip_constant_572 : bool) (temp___do_toplevel_573 : bool)  =
  #"i-c.ads" 72 0 0# (if (( temp___is_init_571 \/ (Interfaces__c__char.first <= Interfaces__c__char.last) )) then (
   (Interfaces__c__char.dynamic_property Interfaces__c__char.first Interfaces__c__char.last temp___expr_574)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 72 0 0# "inline" 
   (temp___expr_575 : int) (temp___skip_top_level_576 : bool)  =
  #"i-c.ads" 72 0 0# true

end

(* Module giving axioms for type "char_array" defined at i-c.ads:79, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__char_array

 predicate dynamic_invariant #"i-c.ads" 72 0 0# "inline" 
   (temp___expr_580 : Interfaces__c__char_array.char_array) (temp___is_init_577 : bool) (temp___skip_constant_578 : bool) (temp___do_toplevel_579 : bool)  =
  #"i-c.ads" 79 0 0# (if (temp___skip_constant_578) then (
   true) else (
   (Interfaces__c__char_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__char_array.first temp___expr_580) (Interfaces__c__char_array.last temp___expr_580))))

end

(* Module giving axioms for type "Twchar_tB" defined at i-c.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Twchar_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "wchar_t" defined at i-c.ads:108, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__wchar_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__wchar_t

 predicate dynamic_invariant #"i-c.ads" 79 0 0# "inline" 
   (temp___expr_601 : int) (temp___is_init_598 : bool) (temp___skip_constant_599 : bool) (temp___do_toplevel_600 : bool)  =
  #"i-c.ads" 108 0 0# (if (( temp___is_init_598 \/ (Interfaces__c__wchar_t.first <= Interfaces__c__wchar_t.last) )) then (
   (Interfaces__c__wchar_t.dynamic_property Interfaces__c__wchar_t.first Interfaces__c__wchar_t.last temp___expr_601)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 108 0 0# "inline" 
   (temp___expr_602 : int) (temp___skip_top_level_603 : bool)  =
  #"i-c.ads" 108 0 0# true

end

(* Module giving axioms for type "wchar_array" defined at i-c.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__wchar_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__wchar_array

 predicate dynamic_invariant #"i-c.ads" 108 0 0# "inline" 
   (temp___expr_607 : Interfaces__c__wchar_array.wchar_array) (temp___is_init_604 : bool) (temp___skip_constant_605 : bool) (temp___do_toplevel_606 : bool)  =
  #"i-c.ads" 116 0 0# (if (temp___skip_constant_605) then (
   true) else (
   (Interfaces__c__wchar_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__wchar_array.first temp___expr_607) (Interfaces__c__wchar_array.last temp___expr_607))))

end

(* Module giving axioms for type "Tchar16_tB" defined at i-c.ads:146, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tchar16_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "char16_t" defined at i-c.ads:146, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char16_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char16_t

 predicate dynamic_invariant #"i-c.ads" 116 0 0# "inline" 
   (temp___expr_628 : int) (temp___is_init_625 : bool) (temp___skip_constant_626 : bool) (temp___do_toplevel_627 : bool)  =
  #"i-c.ads" 146 0 0# (if (( temp___is_init_625 \/ (Interfaces__c__char16_t.first <= Interfaces__c__char16_t.last) )) then (
   (Interfaces__c__char16_t.dynamic_property Interfaces__c__char16_t.first Interfaces__c__char16_t.last temp___expr_628)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 146 0 0# "inline" 
   (temp___expr_629 : int) (temp___skip_top_level_630 : bool)  =
  #"i-c.ads" 146 0 0# true

end

(* Module giving axioms for type "char16_array" defined at i-c.ads:158, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char16_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__char16_array

 predicate dynamic_invariant #"i-c.ads" 146 0 0# "inline" 
   (temp___expr_634 : Interfaces__c__char16_array.char16_array) (temp___is_init_631 : bool) (temp___skip_constant_632 : bool) (temp___do_toplevel_633 : bool)  =
  #"i-c.ads" 158 0 0# (if (temp___skip_constant_632) then (
   true) else (
   (Interfaces__c__char16_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__char16_array.first temp___expr_634) (Interfaces__c__char16_array.last temp___expr_634))))

end

(* Module giving axioms for type "Tchar32_tB" defined at i-c.ads:188, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__Tchar32_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "char32_t" defined at i-c.ads:188, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char32_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char32_t

 predicate dynamic_invariant #"i-c.ads" 158 0 0# "inline" 
   (temp___expr_655 : int) (temp___is_init_652 : bool) (temp___skip_constant_653 : bool) (temp___do_toplevel_654 : bool)  =
  #"i-c.ads" 188 0 0# (if (( temp___is_init_652 \/ (Interfaces__c__char32_t.first <= Interfaces__c__char32_t.last) )) then (
   (Interfaces__c__char32_t.dynamic_property Interfaces__c__char32_t.first Interfaces__c__char32_t.last temp___expr_655)) else true)
 
 predicate default_initial_assumption #"i-c.ads" 188 0 0# "inline" 
   (temp___expr_656 : int) (temp___skip_top_level_657 : bool)  =
  #"i-c.ads" 188 0 0# true

end

(* Module giving axioms for type "char32_array" defined at i-c.ads:200, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c__char32_array___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c__size_t
 use        Interfaces__c__char32_array

 predicate dynamic_invariant #"i-c.ads" 188 0 0# "inline" 
   (temp___expr_661 : Interfaces__c__char32_array.char32_array) (temp___is_init_658 : bool) (temp___skip_constant_659 : bool) (temp___do_toplevel_660 : bool)  =
  #"i-c.ads" 200 0 0# (if (temp___skip_constant_659) then (
   true) else (
   (Interfaces__c__char32_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__char32_array.first temp___expr_661) (Interfaces__c__char32_array.last temp___expr_661))))

end

(* Module giving axioms for type "os_type" defined at s-oscons.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__os_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__os_type

 predicate dynamic_invariant #"i-c.ads" 200 0 0# "inline" 
   (temp___expr_682 : int) (temp___is_init_679 : bool) (temp___skip_constant_680 : bool) (temp___do_toplevel_681 : bool)  =
  #"s-oscons.ads" 52 0 0# (if (( temp___is_init_679 \/ (System__os_constants__os_type.first <= System__os_constants__os_type.last) )) then (
   (System__os_constants__os_type.dynamic_property System__os_constants__os_type.first System__os_constants__os_type.last temp___expr_682)) else true)
 
 predicate default_initial_assumption #"s-oscons.ads" 52 0 0# "inline" 
   (temp___expr_683 : int) (temp___skip_top_level_684 : bool)  =
  #"s-oscons.ads" 52 0 0# true

end

(* Module giving axioms for type "T1s" defined at s-oscons.ads:59, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__T1s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ioctl_req_t" defined at s-oscons.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__ioctl_req_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__ioctl_req_t

 predicate dynamic_invariant #"s-oscons.ads" 52 0 0# "inline" 
   (temp___expr_688 : int) (temp___is_init_685 : bool) (temp___skip_constant_686 : bool) (temp___do_toplevel_687 : bool)  =
  #"s-oscons.ads" 94 0 0# (if (( temp___is_init_685 \/ (System__os_constants__ioctl_req_t.first <= System__os_constants__ioctl_req_t.last) )) then (
   (System__os_constants__ioctl_req_t.dynamic_property System__os_constants__ioctl_req_t.first System__os_constants__ioctl_req_t.last temp___expr_688)) else true)
 
 predicate default_initial_assumption #"s-oscons.ads" 94 0 0# "inline" 
   (temp___expr_689 : int) (temp___skip_top_level_690 : bool)  =
  #"s-oscons.ads" 94 0 0# true

end

(* Module giving axioms for type "T2s" defined at s-oscons.ads:164, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__T2s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "msg_iovlen_t" defined at s-oscons.ads:261, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__msg_iovlen_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__os_constants__msg_iovlen_t

 predicate dynamic_invariant #"s-oscons.ads" 94 0 0# "inline" 
   (temp___expr_694 : BV32.t) (temp___is_init_691 : bool) (temp___skip_constant_692 : bool) (temp___do_toplevel_693 : bool)  =
  #"s-oscons.ads" 261 0 0# (if (( temp___is_init_691 \/ (BV32.ule System__os_constants__msg_iovlen_t.first System__os_constants__msg_iovlen_t.last) )) then (
   (System__os_constants__msg_iovlen_t.dynamic_property System__os_constants__msg_iovlen_t.first System__os_constants__msg_iovlen_t.last temp___expr_694)) else true)
 
 predicate default_initial_assumption #"s-oscons.ads" 261 0 0# "inline" 
   (temp___expr_695 : BV32.t) (temp___skip_top_level_696 : bool)  =
  #"s-oscons.ads" 261 0 0# true

end

(* Module giving axioms for type "T3s" defined at s-oscons.ads:273, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__os_constants__T3s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tstorage_offsetB" defined at s-stoele.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__Tstorage_offsetB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "storage_offset" defined at s-stoele.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_offset___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__storage_offset

 predicate dynamic_invariant #"s-oscons.ads" 261 0 0# "inline" 
   (temp___expr_700 : int) (temp___is_init_697 : bool) (temp___skip_constant_698 : bool) (temp___do_toplevel_699 : bool)  =
  #"s-stoele.ads" 54 0 0# (if (( temp___is_init_697 \/ (System__storage_elements__storage_offset.first <= System__storage_elements__storage_offset.last) )) then (
   (System__storage_elements__storage_offset.dynamic_property System__storage_elements__storage_offset.first System__storage_elements__storage_offset.last temp___expr_700)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 54 0 0# "inline" 
   (temp___expr_701 : int) (temp___skip_top_level_702 : bool)  =
  #"s-stoele.ads" 54 0 0# true

end

(* Module giving axioms for type "storage_count" defined at s-stoele.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__storage_elements__storage_count

 predicate dynamic_invariant #"s-stoele.ads" 54 0 0# "inline" 
   (temp___expr_706 : int) (temp___is_init_703 : bool) (temp___skip_constant_704 : bool) (temp___do_toplevel_705 : bool)  =
  #"s-stoele.ads" 62 0 0# (if (( temp___is_init_703 \/ (System__storage_elements__storage_count.first <= System__storage_elements__storage_count.last) )) then (
   (System__storage_elements__storage_count.dynamic_property System__storage_elements__storage_count.first System__storage_elements__storage_count.last temp___expr_706)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 62 0 0# "inline" 
   (temp___expr_707 : int) (temp___skip_top_level_708 : bool)  =
  #"s-stoele.ads" 62 0 0# true

end

(* Module giving axioms for type "storage_element" defined at s-stoele.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_element___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        System__storage_elements__storage_element

 predicate dynamic_invariant #"s-stoele.ads" 62 0 0# "inline" 
   (temp___expr_712 : BV8.t) (temp___is_init_709 : bool) (temp___skip_constant_710 : bool) (temp___do_toplevel_711 : bool)  =
  #"s-stoele.ads" 64 0 0# (if (( temp___is_init_709 \/ (BV8.ule System__storage_elements__storage_element.first System__storage_elements__storage_element.last) )) then (
   (System__storage_elements__storage_element.dynamic_property System__storage_elements__storage_element.first System__storage_elements__storage_element.last temp___expr_712)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 64 0 0# "inline" 
   (temp___expr_713 : BV8.t) (temp___skip_top_level_714 : bool)  =
  #"s-stoele.ads" 64 0 0# true

end

(* Module giving axioms for type "storage_array" defined at s-stoele.ads:70, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__storage_array___axiom
 use import "_gnatprove_standard".Main
 use        System__storage_elements__storage_offset
 use        System__storage_elements__storage_array

 predicate dynamic_invariant #"s-stoele.ads" 64 0 0# "inline" 
   (temp___expr_718 : System__storage_elements__storage_array.storage_array) (temp___is_init_715 : bool) (temp___skip_constant_716 : bool) (temp___do_toplevel_717 : bool)  =
  #"s-stoele.ads" 70 0 0# (if (temp___skip_constant_716) then (
   true) else (
   (System__storage_elements__storage_array.dynamic_property System__storage_elements__storage_offset.first System__storage_elements__storage_offset.last (System__storage_elements__storage_array.first temp___expr_718) (System__storage_elements__storage_array.last temp___expr_718))))

end

(* Module giving axioms for type "integer_address" defined at s-stoele.ads:105, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__storage_elements__integer_address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__storage_elements__integer_address

 predicate dynamic_invariant #"s-stoele.ads" 70 0 0# "inline" 
   (temp___expr_723 : BV32.t) (temp___is_init_720 : bool) (temp___skip_constant_721 : bool) (temp___do_toplevel_722 : bool)  =
  #"s-stoele.ads" 105 0 0# (if (( temp___is_init_720 \/ (BV32.ule System__storage_elements__integer_address.first System__storage_elements__integer_address.last) )) then (
   (System__storage_elements__integer_address.dynamic_property System__storage_elements__integer_address.first System__storage_elements__integer_address.last temp___expr_723)) else true)
 
 predicate default_initial_assumption #"s-stoele.ads" 105 0 0# "inline" 
   (temp___expr_724 : BV32.t) (temp___skip_top_level_725 : bool)  =
  #"s-stoele.ads" 105 0 0# true

end

(* Module giving axioms for type "Tsocket_typeB" defined at g-socket.ads:1167, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__Tsocket_typeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "socket_type" defined at g-socket.ads:1167, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__socket_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__socket_type

 predicate dynamic_invariant #"s-stoele.ads" 105 0 0# "inline" 
   (temp___expr_729 : int) (temp___is_init_726 : bool) (temp___skip_constant_727 : bool) (temp___do_toplevel_728 : bool)  =
  #"g-socket.ads" 1167 0 0# (if (( temp___is_init_726 \/ (Gnat__sockets__socket_type.first <= Gnat__sockets__socket_type.last) )) then (
   (Gnat__sockets__socket_type.dynamic_property Gnat__sockets__socket_type.first Gnat__sockets__socket_type.last temp___expr_729)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 1167 0 0# "inline" 
   (temp___expr_730 : int) (temp___skip_top_level_731 : bool)  =
  #"g-socket.ads" 1167 0 0# true

end

(* Module giving axioms for type "selector_type" defined at g-socket.ads:1175, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__selector_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Gnat__sockets__socket_type
 use        Gnat__sockets__socket_type__rep
 use        Gnat__sockets__no_socket
 use        Gnat__sockets__selector_type

 predicate dynamic_invariant #"g-socket.ads" 1167 0 0# "inline" 
   (temp___expr_735 : Gnat__sockets__selector_type.selector_type) (temp___is_init_732 : bool) (temp___skip_constant_733 : bool) (temp___do_toplevel_734 : bool)  =
  #"g-socket.ads" 1175 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 1175 0 0# "inline" 
   (temp___expr_737 : Gnat__sockets__selector_type.selector_type) (temp___skip_top_level_738 : bool)  =
  #"g-socket.ads" 1175 0 0# ( ((Gnat__sockets__selector_type.attr__constrained temp___expr_737) = False) /\ (let temp___739 = (Gnat__sockets__selector_type.rec__gnat__sockets__selector_type__is_null (Gnat__sockets__selector_type.__split_discrs temp___expr_737)) in (
   ( ( ((Gnat__sockets__selector_type.rec__gnat__sockets__selector_type__is_null (Gnat__sockets__selector_type.__split_discrs temp___expr_737)) = (Boolean.of_int 0)) /\ (if ((Gnat__sockets__selector_type.gnat__sockets__selector_type__r_sig_socket__pred temp___expr_737)) then (
    ((Gnat__sockets__socket_type__rep.to_rep (Gnat__sockets__selector_type.rec__gnat__sockets__selector_type__r_sig_socket (Gnat__sockets__selector_type.__split_fields temp___expr_737))) = Gnat__sockets__no_socket.no_socket)) else true) ) /\ (if ((Gnat__sockets__selector_type.gnat__sockets__selector_type__w_sig_socket__pred temp___expr_737)) then (
    ((Gnat__sockets__socket_type__rep.to_rep (Gnat__sockets__selector_type.rec__gnat__sockets__selector_type__w_sig_socket (Gnat__sockets__selector_type.__split_fields temp___expr_737))) = Gnat__sockets__no_socket.no_socket)) else true) )))
   )

end

(* Module giving axioms for type "timeval_duration" defined at g-socket.ads:439, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__timeval_duration___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__timeval_duration

 predicate dynamic_invariant #"g-socket.ads" 417 0 0# "inline" 
   (temp___expr_743 : Gnat__sockets__timeval_duration.timeval_duration) (temp___is_init_740 : bool) (temp___skip_constant_741 : bool) (temp___do_toplevel_742 : bool)  =
  #"g-socket.ads" 439 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 439 0 0# "inline" 
   (temp___expr_744 : Gnat__sockets__timeval_duration.timeval_duration) (temp___skip_top_level_745 : bool)  =
  #"g-socket.ads" 439 0 0# true

end

(* Module giving axioms for type "selector_duration" defined at g-socket.ads:441, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__selector_duration___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_duration

 predicate dynamic_invariant #"g-socket.ads" 439 0 0# "inline" 
   (temp___expr_749 : Gnat__sockets__selector_duration.selector_duration) (temp___is_init_746 : bool) (temp___skip_constant_747 : bool) (temp___do_toplevel_748 : bool)  =
  #"g-socket.ads" 441 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 441 0 0# "inline" 
   (temp___expr_750 : Gnat__sockets__selector_duration.selector_duration) (temp___skip_top_level_751 : bool)  =
  #"g-socket.ads" 441 0 0# true

end

(* Module giving axioms for type "selector_status" defined at g-socket.ads:444, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__selector_status___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__selector_status

 predicate dynamic_invariant #"g-socket.ads" 441 0 0# "inline" 
   (temp___expr_755 : int) (temp___is_init_752 : bool) (temp___skip_constant_753 : bool) (temp___do_toplevel_754 : bool)  =
  #"g-socket.ads" 444 0 0# (if (( temp___is_init_752 \/ (Gnat__sockets__selector_status.first <= Gnat__sockets__selector_status.last) )) then (
   (Gnat__sockets__selector_status.dynamic_property Gnat__sockets__selector_status.first Gnat__sockets__selector_status.last temp___expr_755)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 444 0 0# "inline" 
   (temp___expr_756 : int) (temp___skip_top_level_757 : bool)  =
  #"g-socket.ads" 444 0 0# true

end

(* Module giving axioms for type "family_type" defined at g-socket.ads:463, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__family_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type

 predicate dynamic_invariant #"g-socket.ads" 444 0 0# "inline" 
   (temp___expr_763 : int) (temp___is_init_760 : bool) (temp___skip_constant_761 : bool) (temp___do_toplevel_762 : bool)  =
  #"g-socket.ads" 463 0 0# (if (( temp___is_init_760 \/ (Gnat__sockets__family_type.first <= Gnat__sockets__family_type.last) )) then (
   (Gnat__sockets__family_type.dynamic_property Gnat__sockets__family_type.first Gnat__sockets__family_type.last temp___expr_763)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 463 0 0# "inline" 
   (temp___expr_764 : int) (temp___skip_top_level_765 : bool)  =
  #"g-socket.ads" 463 0 0# true

end

(* Module giving axioms for type "mode_type" defined at g-socket.ads:467, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__mode_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__mode_type

 predicate dynamic_invariant #"g-socket.ads" 463 0 0# "inline" 
   (temp___expr_769 : int) (temp___is_init_766 : bool) (temp___skip_constant_767 : bool) (temp___do_toplevel_768 : bool)  =
  #"g-socket.ads" 467 0 0# (if (( temp___is_init_766 \/ (Gnat__sockets__mode_type.first <= Gnat__sockets__mode_type.last) )) then (
   (Gnat__sockets__mode_type.dynamic_property Gnat__sockets__mode_type.first Gnat__sockets__mode_type.last temp___expr_769)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 467 0 0# "inline" 
   (temp___expr_770 : int) (temp___skip_top_level_771 : bool)  =
  #"g-socket.ads" 467 0 0# true

end

(* Module giving axioms for type "shutmode_type" defined at g-socket.ads:471, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__shutmode_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__shutmode_type

 predicate dynamic_invariant #"g-socket.ads" 467 0 0# "inline" 
   (temp___expr_775 : int) (temp___is_init_772 : bool) (temp___skip_constant_773 : bool) (temp___do_toplevel_774 : bool)  =
  #"g-socket.ads" 471 0 0# (if (( temp___is_init_772 \/ (Gnat__sockets__shutmode_type.first <= Gnat__sockets__shutmode_type.last) )) then (
   (Gnat__sockets__shutmode_type.dynamic_property Gnat__sockets__shutmode_type.first Gnat__sockets__shutmode_type.last temp___expr_775)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 471 0 0# "inline" 
   (temp___expr_776 : int) (temp___skip_top_level_777 : bool)  =
  #"g-socket.ads" 471 0 0# true

end

(* Module giving axioms for type "Tport_typeB" defined at g-socket.ads:479, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__Tport_typeB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "port_type" defined at g-socket.ads:479, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__port_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__port_type

 predicate dynamic_invariant #"g-socket.ads" 471 0 0# "inline" 
   (temp___expr_781 : int) (temp___is_init_778 : bool) (temp___skip_constant_779 : bool) (temp___do_toplevel_780 : bool)  =
  #"g-socket.ads" 479 0 0# (if (( temp___is_init_778 \/ (Gnat__sockets__port_type.first <= Gnat__sockets__port_type.last) )) then (
   (Gnat__sockets__port_type.dynamic_property Gnat__sockets__port_type.first Gnat__sockets__port_type.last temp___expr_781)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 479 0 0# "inline" 
   (temp___expr_782 : int) (temp___skip_top_level_783 : bool)  =
  #"g-socket.ads" 479 0 0# true

end

(* Module giving axioms for type "inet_addr_comp_type" defined at g-socket.ads:1212, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_comp_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__inet_addr_comp_type

 predicate dynamic_invariant #"g-socket.ads" 479 0 0# "inline" 
   (temp___expr_787 : int) (temp___is_init_784 : bool) (temp___skip_constant_785 : bool) (temp___do_toplevel_786 : bool)  =
  #"g-socket.ads" 1212 0 0# (if (( temp___is_init_784 \/ (Gnat__sockets__inet_addr_comp_type.first <= Gnat__sockets__inet_addr_comp_type.last) )) then (
   (Gnat__sockets__inet_addr_comp_type.dynamic_property Gnat__sockets__inet_addr_comp_type.first Gnat__sockets__inet_addr_comp_type.last temp___expr_787)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 1212 0 0# "inline" 
   (temp___expr_788 : int) (temp___skip_top_level_789 : bool)  =
  #"g-socket.ads" 1212 0 0# true

end

(* Module giving axioms for type "inet_addr_vn_type" defined at g-socket.ads:1215, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_vn_type___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Gnat__sockets__inet_addr_vn_type

 predicate dynamic_invariant #"g-socket.ads" 1212 0 0# "inline" 
   (temp___expr_793 : Gnat__sockets__inet_addr_vn_type.inet_addr_vn_type) (temp___is_init_790 : bool) (temp___skip_constant_791 : bool) (temp___do_toplevel_792 : bool)  =
  #"g-socket.ads" 1215 0 0# (if (temp___skip_constant_791) then (
   true) else (
   (Gnat__sockets__inet_addr_vn_type.dynamic_property Standard__natural.first Standard__natural.last (Gnat__sockets__inet_addr_vn_type.first temp___expr_793) (Gnat__sockets__inet_addr_vn_type.last temp___expr_793))))

end

(* Module giving axioms for type "Tinet_addr_v4_typeP1" defined at g-socket.ads:1217, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__Tinet_addr_v4_typeP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "inet_addr_v4_type" defined at g-socket.ads:1217, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_v4_type___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 predicate dynamic_invariant #"g-socket.ads" 1215 0 0# "inline" 
   (temp___expr_798 : Array__Int__Gnat__sockets__inet_addr_comp_type.map) (temp___is_init_795 : bool) (temp___skip_constant_796 : bool) (temp___do_toplevel_797 : bool)  =
  #"g-socket.ads" 1217 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 1217 0 0# "inline" 
   (temp___expr_800 : Array__Int__Gnat__sockets__inet_addr_comp_type.map) (temp___skip_top_level_801 : bool)  =
  #"g-socket.ads" 1217 0 0# true

end

(* Module giving axioms for type "T14s" defined at g-socket.ads:1223, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_type__T14s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T15s" defined at g-socket.ads:1223, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_type__T15s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tinet_addr_v6_typeP1" defined at g-socket.ads:1218, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__Tinet_addr_v6_typeP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "inet_addr_v6_type" defined at g-socket.ads:1218, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_v6_type___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 predicate dynamic_invariant #"g-socket.ads" 1217 0 0# "inline" 
   (temp___expr_807 : Array__Int__Gnat__sockets__inet_addr_comp_type.map) (temp___is_init_804 : bool) (temp___skip_constant_805 : bool) (temp___do_toplevel_806 : bool)  =
  #"g-socket.ads" 1218 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 1218 0 0# "inline" 
   (temp___expr_809 : Array__Int__Gnat__sockets__inet_addr_comp_type.map) (temp___skip_top_level_810 : bool)  =
  #"g-socket.ads" 1218 0 0# true

end

(* Module giving axioms for type "T16s" defined at g-socket.ads:1226, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_type__T16s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T17s" defined at g-socket.ads:1226, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_type__T17s___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the aggregate at g-socket.ads:1223, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___823
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___823 #"g-socket.ads" 1223 0 0# 
   (temp___825 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___825 #"g-socket.ads" 1223 0 0#  : int.
   (let temp___824 = (temp___823 temp___825) in (
    (forall temp___826 #"g-socket.ads" 1223 0 0#  : int.
     ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___824 temp___826) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___825)))))
  )

end

(* Module for defining the value of the aggregate at g-socket.ads:1226, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___827
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__inet_addr_comp_type
 use        Gnat__sockets__inet_addr_comp_type__rep
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 function temp___827 #"g-socket.ads" 1226 0 0# 
   (temp___829 : int) : Array__Int__Gnat__sockets__inet_addr_comp_type.map
 
 axiom def_axiom :
  (forall temp___829 #"g-socket.ads" 1226 0 0#  : int.
   (let temp___828 = (temp___827 temp___829) in (
    (forall temp___830 #"g-socket.ads" 1226 0 0#  : int.
     ((Array__Int__Gnat__sockets__inet_addr_comp_type.get temp___828 temp___830) = (Gnat__sockets__inet_addr_comp_type__rep.of_rep temp___829)))))
  )

end

(* Module giving axioms for type "inet_addr_type" defined at g-socket.ads:1220, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___823
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___827
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 predicate dynamic_invariant #"g-socket.ads" 1226 0 0# "inline" 
   (temp___expr_816 : Gnat__sockets__inet_addr_type.inet_addr_type) (temp___is_init_813 : bool) (temp___skip_constant_814 : bool) (temp___do_toplevel_815 : bool)  =
  #"g-socket.ads" 1220 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 1220 0 0# "inline" 
   (temp___expr_820 : Gnat__sockets__inet_addr_type.inet_addr_type) (temp___skip_top_level_821 : bool)  =
  #"g-socket.ads" 1220 0 0# ( ((Gnat__sockets__inet_addr_type.attr__constrained temp___expr_820) = False) /\ (let temp___822 = (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs temp___expr_820)) in (
   ( ( ((Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs temp___expr_820))) = 0) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v4__pred temp___expr_820)) then (
    ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v4 (Gnat__sockets__inet_addr_type.__split_fields temp___expr_820)) = (Temp___823.temp___823 0))) else true) ) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v6__pred temp___expr_820)) then (
    ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v6 (Gnat__sockets__inet_addr_type.__split_fields temp___expr_820)) = (Temp___827.temp___827 0))) else true) )))
   )

end

(* Module giving axioms for type "T4s" defined at g-socket.ads:506, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__sock_addr_type__T4s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "sock_addr_type" defined at g-socket.ads:505, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__sock_addr_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__sock_addr_type__T4s
 use        Gnat__sockets__sock_addr_type
 use        Temp___823
 use        Temp___827
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 predicate dynamic_invariant #"g-socket.ads" 1226 0 0# "inline" 
   (temp___expr_834 : Gnat__sockets__sock_addr_type.sock_addr_type) (temp___is_init_831 : bool) (temp___skip_constant_832 : bool) (temp___do_toplevel_833 : bool)  =
  #"g-socket.ads" 505 0 0# (let temp___835 = (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family (Gnat__sockets__sock_addr_type.__split_discrs temp___expr_834)) in (
   (if ((Gnat__sockets__sock_addr_type.gnat__sockets__sock_addr_type__addr__pred temp___expr_834)) then (
    ( ( (if (False) then (
     true) else (
     (Gnat__sockets__sock_addr_type__T4s.in_range (Gnat__sockets__family_type__rep.to_rep temp___835) (Gnat__sockets__sock_addr_type__T4s.to_base (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_834)))))) /\ ((Gnat__sockets__sock_addr_type__T4s.attr__constrained (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_834))) = True) ) /\ ((Gnat__sockets__sock_addr_type__T4s.attr__constrained (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_834))) = True) )) else true)))

 
 predicate default_initial_assumption #"g-socket.ads" 505 0 0# "inline" 
   (temp___expr_839 : Gnat__sockets__sock_addr_type.sock_addr_type) (temp___skip_top_level_840 : bool)  =
  #"g-socket.ads" 505 0 0# ( ((Gnat__sockets__sock_addr_type.attr__constrained temp___expr_839) = False) /\ (let temp___841 = (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family (Gnat__sockets__sock_addr_type.__split_discrs temp___expr_839)) in (
   ( ((Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family (Gnat__sockets__sock_addr_type.__split_discrs temp___expr_839))) = 0) /\ (if ((Gnat__sockets__sock_addr_type.gnat__sockets__sock_addr_type__addr__pred temp___expr_839)) then (
    (let temp___842 = (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_839)) in (
     ( ((Gnat__sockets__sock_addr_type__T4s.attr__constrained temp___842) = True) /\ (let temp___843 = (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__sock_addr_type__T4s.__split_discrs (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_839)))) in (
      ( ( ((Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__sock_addr_type__T4s.__split_discrs (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_839))))) = (Gnat__sockets__family_type__rep.to_rep temp___841)) /\ (if ((Gnat__sockets__sock_addr_type__T4s.gnat__sockets__inet_addr_type__sin_v4__pred (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_839)))) then (
       ((Gnat__sockets__sock_addr_type__T4s.rec__gnat__sockets__inet_addr_type__sin_v4 (Gnat__sockets__sock_addr_type__T4s.__split_fields (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_839)))) = (Temp___823.temp___823 0))) else true) ) /\ (if ((Gnat__sockets__sock_addr_type__T4s.gnat__sockets__inet_addr_type__sin_v6__pred (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_839)))) then (
       ((Gnat__sockets__sock_addr_type__T4s.rec__gnat__sockets__inet_addr_type__sin_v6 (Gnat__sockets__sock_addr_type__T4s.__split_fields (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__addr (Gnat__sockets__sock_addr_type.__split_fields temp___expr_839)))) = (Temp___827.temp___827 0))) else true) )))
      )))
   ) else true) )))
   )

end

(* Module giving axioms for type "name_index" defined at g-socket.ads:1254, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__name_index___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__name_index

 predicate dynamic_invariant #"g-socket.ads" 1226 0 0# "inline" 
   (temp___expr_874 : int) (temp___is_init_871 : bool) (temp___skip_constant_872 : bool) (temp___do_toplevel_873 : bool)  =
  #"g-socket.ads" 1254 0 0# (if (( temp___is_init_871 \/ (Gnat__sockets__name_index.first <= Gnat__sockets__name_index.last) )) then (
   (Gnat__sockets__name_index.dynamic_property Gnat__sockets__name_index.first Gnat__sockets__name_index.last temp___expr_874)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 1254 0 0# "inline" 
   (temp___expr_875 : int) (temp___skip_top_level_876 : bool)  =
  #"g-socket.ads" 1254 0 0# true

end

(* Module giving axioms for type "T41s" defined at g-socket.ads:1257, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__name_type__T41s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T42s" defined at g-socket.ads:1257, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__name_type__T42s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "name_type" defined at g-socket.ads:1256, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__name_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__name_index
 use        Gnat__sockets__name_index__rep
 use        Gnat__sockets__name_type__T42s
 use        Gnat__sockets__name_type

 predicate dynamic_invariant #"g-socket.ads" 1254 0 0# "inline" 
   (temp___expr_880 : Gnat__sockets__name_type.name_type) (temp___is_init_877 : bool) (temp___skip_constant_878 : bool) (temp___do_toplevel_879 : bool)  =
  #"g-socket.ads" 1256 0 0# (let temp___881 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs temp___expr_880)) in (
   (if ((Gnat__sockets__name_type.gnat__sockets__name_type__name__pred temp___expr_880)) then (
    (if (False) then (
     true) else (
     ( (Gnat__sockets__name_type__T42s.dynamic_property 1 (Gnat__sockets__name_index__rep.to_rep temp___881) (Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields temp___expr_880))) (Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields temp___expr_880)))) /\ ( ((Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields temp___expr_880))) = 1) /\ ((Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields temp___expr_880))) = (Gnat__sockets__name_index__rep.to_rep temp___881)) ) )))) else true)))

 
 predicate default_initial_assumption #"g-socket.ads" 1256 0 0# "inline" 
   (temp___expr_883 : Gnat__sockets__name_type.name_type) (temp___skip_top_level_884 : bool)  =
  #"g-socket.ads" 1256 0 0# ( ((Gnat__sockets__name_type.attr__constrained temp___expr_883) = False) /\ (let temp___885 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs temp___expr_883)) in (
   ((Gnat__sockets__name_index__rep.to_rep (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs temp___expr_883))) = 64)))
   )

end

(* Module giving axioms for type "name_array" defined at g-socket.ads:1261, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__name_array___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Gnat__sockets__name_index
 use        Gnat__sockets__name_index__rep
 use        Gnat__sockets__name_type__T42s
 use        Gnat__sockets__name_type
 use        Array__Int__Gnat__sockets__name_type
 use        Gnat__sockets__name_array
 use        Array__Int__Gnat__sockets__name_type

 predicate dynamic_invariant #"g-socket.ads" 1256 0 0# "inline" 
   (temp___expr_892 : Gnat__sockets__name_array.name_array) (temp___is_init_889 : bool) (temp___skip_constant_890 : bool) (temp___do_toplevel_891 : bool)  =
  #"g-socket.ads" 1261 0 0# ( (if (temp___skip_constant_890) then (
   true) else (
   (Gnat__sockets__name_array.dynamic_property Standard__natural.first Standard__natural.last (Gnat__sockets__name_array.first temp___expr_892) (Gnat__sockets__name_array.last temp___expr_892)))) /\ (forall temp___893 #"g-socket.ads" 1261 0 0#  : int.
   (if (( ((Gnat__sockets__name_array.first temp___expr_892) <= temp___893) /\ (temp___893 <= (Gnat__sockets__name_array.last temp___expr_892)) )) then (
    ( (let temp___894 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__name_array.to_array temp___expr_892) temp___893))) in (
     (if ((Gnat__sockets__name_type.gnat__sockets__name_type__name__pred (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__name_array.to_array temp___expr_892) temp___893))) then (
      (if (False) then (
       true) else (
       ( (Gnat__sockets__name_type__T42s.dynamic_property 1 (Gnat__sockets__name_index__rep.to_rep temp___894) (Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__name_array.to_array temp___expr_892) temp___893)))) (Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__name_array.to_array temp___expr_892) temp___893))))) /\ ( ((Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__name_array.to_array temp___expr_892) temp___893)))) = 1) /\ ((Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__name_array.to_array temp___expr_892) temp___893)))) = (Gnat__sockets__name_index__rep.to_rep temp___894)) ) )))) else true)))
     /\ ((Gnat__sockets__name_type.attr__constrained (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__name_array.to_array temp___expr_892) temp___893)) = False) )) else true)) )

end

(* Module giving axioms for type "T47s" defined at g-socket.ads:1266, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__host_entry_type__T47s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T48s" defined at g-socket.ads:1266, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__host_entry_type__T48s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "inet_addr_array" defined at g-socket.ads:1262, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__inet_addr_array___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Gnat__sockets__inet_addr_type
 use        Array__Int__Gnat__sockets__inet_addr_type
 use        Gnat__sockets__inet_addr_array
 use        Array__Int__Gnat__sockets__inet_addr_type

 predicate dynamic_invariant #"g-socket.ads" 1256 0 0# "inline" 
   (temp___expr_899 : Gnat__sockets__inet_addr_array.inet_addr_array) (temp___is_init_896 : bool) (temp___skip_constant_897 : bool) (temp___do_toplevel_898 : bool)  =
  #"g-socket.ads" 1262 0 0# ( (if (temp___skip_constant_897) then (
   true) else (
   (Gnat__sockets__inet_addr_array.dynamic_property Standard__natural.first Standard__natural.last (Gnat__sockets__inet_addr_array.first temp___expr_899) (Gnat__sockets__inet_addr_array.last temp___expr_899)))) /\ (forall temp___900 #"g-socket.ads" 1262 0 0#  : int.
   (if (( ((Gnat__sockets__inet_addr_array.first temp___expr_899) <= temp___900) /\ (temp___900 <= (Gnat__sockets__inet_addr_array.last temp___expr_899)) )) then (
    ((Gnat__sockets__inet_addr_type.attr__constrained (Array__Int__Gnat__sockets__inet_addr_type.get (Gnat__sockets__inet_addr_array.to_array temp___expr_899) temp___900)) = False)) else true)) )

end

(* Module giving axioms for type "T49s" defined at g-socket.ads:1267, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__host_entry_type__T49s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T50s" defined at g-socket.ads:1267, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__host_entry_type__T50s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "host_entry_type" defined at g-socket.ads:1264, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__host_entry_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__natural__rep
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__name_index
 use        Gnat__sockets__name_index__rep
 use        Gnat__sockets__name_type__T42s
 use        Gnat__sockets__name_type
 use        Array__Int__Gnat__sockets__name_type
 use        Gnat__sockets__host_entry_type__T48s
 use        Array__Int__Gnat__sockets__inet_addr_type
 use        Gnat__sockets__host_entry_type__T50s
 use        Gnat__sockets__host_entry_type
 use        Array__Int__Gnat__sockets__name_type
 use        Array__Int__Gnat__sockets__inet_addr_type

 predicate dynamic_invariant #"g-socket.ads" 1262 0 0# "inline" 
   (temp___expr_907 : Gnat__sockets__host_entry_type.host_entry_type) (temp___is_init_904 : bool) (temp___skip_constant_905 : bool) (temp___do_toplevel_906 : bool)  =
  #"g-socket.ads" 1264 0 0# (let temp___909 = (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses_length (Gnat__sockets__host_entry_type.__split_discrs temp___expr_907)) in (
  (let temp___908 = (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases_length (Gnat__sockets__host_entry_type.__split_discrs temp___expr_907)) in (
   ( ( (if ((Gnat__sockets__host_entry_type.gnat__sockets__host_entry_type__official__pred temp___expr_907)) then (
    ( (let temp___910 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__official (Gnat__sockets__host_entry_type.__split_fields temp___expr_907)))) in (
     (if ((Gnat__sockets__name_type.gnat__sockets__name_type__name__pred (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__official (Gnat__sockets__host_entry_type.__split_fields temp___expr_907)))) then (
      (if (False) then (
       true) else (
       ( (Gnat__sockets__name_type__T42s.dynamic_property 1 (Gnat__sockets__name_index__rep.to_rep temp___910) (Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__official (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))))) (Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__official (Gnat__sockets__host_entry_type.__split_fields temp___expr_907)))))) /\ ( ((Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__official (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))))) = 1) /\ ((Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__official (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))))) = (Gnat__sockets__name_index__rep.to_rep temp___910)) ) )))) else true)))
     /\ ((Gnat__sockets__name_type.attr__constrained (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__official (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) = False) )) else true) /\ (if ((Gnat__sockets__host_entry_type.gnat__sockets__host_entry_type__aliases__pred temp___expr_907)) then (
    ( (if (False) then (
     true) else (
     ( (Gnat__sockets__host_entry_type__T48s.dynamic_property 1 (Standard__natural__rep.to_rep temp___908) (Gnat__sockets__host_entry_type__T48s.first (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) (Gnat__sockets__host_entry_type__T48s.last (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907)))) /\ ( ((Gnat__sockets__host_entry_type__T48s.first (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) = 1) /\ ((Gnat__sockets__host_entry_type__T48s.last (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) = (Standard__natural__rep.to_rep temp___908)) ) ))) /\ (forall temp___912 #"g-socket.ads" 534 0 0#  : int.
     (if (( ((Gnat__sockets__host_entry_type__T48s.first (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) <= temp___912) /\ (temp___912 <= (Gnat__sockets__host_entry_type__T48s.last (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907)))) )) then (
      ( (let temp___913 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__host_entry_type__T48s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___912))) in (
       (if ((Gnat__sockets__name_type.gnat__sockets__name_type__name__pred (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__host_entry_type__T48s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___912))) then (
        (if (False) then (
         true) else (
         ( (Gnat__sockets__name_type__T42s.dynamic_property 1 (Gnat__sockets__name_index__rep.to_rep temp___913) (Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__host_entry_type__T48s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___912)))) (Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__host_entry_type__T48s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___912))))) /\ ( ((Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__host_entry_type__T48s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___912)))) = 1) /\ ((Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__host_entry_type__T48s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___912)))) = (Gnat__sockets__name_index__rep.to_rep temp___913)) ) )))) else true)))
       /\ ((Gnat__sockets__name_type.attr__constrained (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__host_entry_type__T48s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__aliases (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___912)) = False) )) else true)) )) else true) ) /\ (if ((Gnat__sockets__host_entry_type.gnat__sockets__host_entry_type__addresses__pred temp___expr_907)) then (
    ( (if (False) then (
     true) else (
     ( (Gnat__sockets__host_entry_type__T50s.dynamic_property 1 (Standard__natural__rep.to_rep temp___909) (Gnat__sockets__host_entry_type__T50s.first (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) (Gnat__sockets__host_entry_type__T50s.last (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses (Gnat__sockets__host_entry_type.__split_fields temp___expr_907)))) /\ ( ((Gnat__sockets__host_entry_type__T50s.first (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) = 1) /\ ((Gnat__sockets__host_entry_type__T50s.last (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) = (Standard__natural__rep.to_rep temp___909)) ) ))) /\ (forall temp___915 #"g-socket.ads" 534 0 0#  : int.
     (if (( ((Gnat__sockets__host_entry_type__T50s.first (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) <= temp___915) /\ (temp___915 <= (Gnat__sockets__host_entry_type__T50s.last (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses (Gnat__sockets__host_entry_type.__split_fields temp___expr_907)))) )) then (
      ((Gnat__sockets__inet_addr_type.attr__constrained (Array__Int__Gnat__sockets__inet_addr_type.get (Gnat__sockets__host_entry_type__T50s.to_array (Gnat__sockets__host_entry_type.rec__gnat__sockets__host_entry_type__addresses (Gnat__sockets__host_entry_type.__split_fields temp___expr_907))) temp___915)) = False)) else true)) )) else true) )))
  ))


end

(* Module giving axioms for type "T51s" defined at g-socket.ads:1274, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__service_entry_type__T51s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T52s" defined at g-socket.ads:1274, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__service_entry_type__T52s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "service_entry_type" defined at g-socket.ads:1270, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__service_entry_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Standard__natural__rep
 use        Gnat__sockets__name_index
 use        Gnat__sockets__name_index__rep
 use        Gnat__sockets__name_type__T42s
 use        Gnat__sockets__name_type
 use        Array__Int__Gnat__sockets__name_type
 use        Gnat__sockets__service_entry_type__T52s
 use        Gnat__sockets__service_entry_type
 use        Array__Int__Gnat__sockets__name_type

 predicate dynamic_invariant #"g-socket.ads" 1264 0 0# "inline" 
   (temp___expr_1096 : Gnat__sockets__service_entry_type.service_entry_type) (temp___is_init_1093 : bool) (temp___skip_constant_1094 : bool) (temp___do_toplevel_1095 : bool)  =
  #"g-socket.ads" 1270 0 0# (let temp___1097 = (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases_length (Gnat__sockets__service_entry_type.__split_discrs temp___expr_1096)) in (
   ( ( (if ((Gnat__sockets__service_entry_type.gnat__sockets__service_entry_type__official__pred temp___expr_1096)) then (
    ( (let temp___1098 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__official (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))) in (
     (if ((Gnat__sockets__name_type.gnat__sockets__name_type__name__pred (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__official (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))) then (
      (if (False) then (
       true) else (
       ( (Gnat__sockets__name_type__T42s.dynamic_property 1 (Gnat__sockets__name_index__rep.to_rep temp___1098) (Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__official (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))))) (Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__official (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))))) /\ ( ((Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__official (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))))) = 1) /\ ((Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__official (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))))) = (Gnat__sockets__name_index__rep.to_rep temp___1098)) ) )))) else true)))
     /\ ((Gnat__sockets__name_type.attr__constrained (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__official (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) = False) )) else true) /\ (if ((Gnat__sockets__service_entry_type.gnat__sockets__service_entry_type__protocol__pred temp___expr_1096)) then (
    ( (let temp___1100 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__protocol (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))) in (
     (if ((Gnat__sockets__name_type.gnat__sockets__name_type__name__pred (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__protocol (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))) then (
      (if (False) then (
       true) else (
       ( (Gnat__sockets__name_type__T42s.dynamic_property 1 (Gnat__sockets__name_index__rep.to_rep temp___1100) (Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__protocol (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))))) (Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__protocol (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))))) /\ ( ((Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__protocol (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))))) = 1) /\ ((Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__protocol (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))))) = (Gnat__sockets__name_index__rep.to_rep temp___1100)) ) )))) else true)))
     /\ ((Gnat__sockets__name_type.attr__constrained (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__protocol (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) = False) )) else true) ) /\ (if ((Gnat__sockets__service_entry_type.gnat__sockets__service_entry_type__aliases__pred temp___expr_1096)) then (
    ( (if (False) then (
     true) else (
     ( (Gnat__sockets__service_entry_type__T52s.dynamic_property 1 (Standard__natural__rep.to_rep temp___1097) (Gnat__sockets__service_entry_type__T52s.first (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) (Gnat__sockets__service_entry_type__T52s.last (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))) /\ ( ((Gnat__sockets__service_entry_type__T52s.first (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) = 1) /\ ((Gnat__sockets__service_entry_type__T52s.last (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) = (Standard__natural__rep.to_rep temp___1097)) ) ))) /\ (forall temp___1102 #"g-socket.ads" 576 0 0#  : int.
     (if (( ((Gnat__sockets__service_entry_type__T52s.first (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) <= temp___1102) /\ (temp___1102 <= (Gnat__sockets__service_entry_type__T52s.last (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096)))) )) then (
      ( (let temp___1103 = (Gnat__sockets__name_type.rec__gnat__sockets__name_type__length (Gnat__sockets__name_type.__split_discrs (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__service_entry_type__T52s.to_array (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) temp___1102))) in (
       (if ((Gnat__sockets__name_type.gnat__sockets__name_type__name__pred (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__service_entry_type__T52s.to_array (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) temp___1102))) then (
        (if (False) then (
         true) else (
         ( (Gnat__sockets__name_type__T42s.dynamic_property 1 (Gnat__sockets__name_index__rep.to_rep temp___1103) (Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__service_entry_type__T52s.to_array (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) temp___1102)))) (Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__service_entry_type__T52s.to_array (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) temp___1102))))) /\ ( ((Gnat__sockets__name_type__T42s.first (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__service_entry_type__T52s.to_array (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) temp___1102)))) = 1) /\ ((Gnat__sockets__name_type__T42s.last (Gnat__sockets__name_type.rec__gnat__sockets__name_type__name (Gnat__sockets__name_type.__split_fields (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__service_entry_type__T52s.to_array (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) temp___1102)))) = (Gnat__sockets__name_index__rep.to_rep temp___1103)) ) )))) else true)))
       /\ ((Gnat__sockets__name_type.attr__constrained (Array__Int__Gnat__sockets__name_type.get (Gnat__sockets__service_entry_type__T52s.to_array (Gnat__sockets__service_entry_type.rec__gnat__sockets__service_entry_type__aliases (Gnat__sockets__service_entry_type.__split_fields temp___expr_1096))) temp___1102)) = False) )) else true)) )) else true) )))


end

(* Module giving axioms for type "error_type" defined at g-socket.ads:621, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__error_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__error_type

 predicate dynamic_invariant #"g-socket.ads" 1270 0 0# "inline" 
   (temp___expr_1232 : int) (temp___is_init_1229 : bool) (temp___skip_constant_1230 : bool) (temp___do_toplevel_1231 : bool)  =
  #"g-socket.ads" 621 0 0# (if (( temp___is_init_1229 \/ (Gnat__sockets__error_type.first <= Gnat__sockets__error_type.last) )) then (
   (Gnat__sockets__error_type.dynamic_property Gnat__sockets__error_type.first Gnat__sockets__error_type.last temp___expr_1232)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 621 0 0# "inline" 
   (temp___expr_1233 : int) (temp___skip_top_level_1234 : bool)  =
  #"g-socket.ads" 621 0 0# true

end

(* Module giving axioms for type "level_type" defined at g-socket.ads:672, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__level_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__level_type

 predicate dynamic_invariant #"g-socket.ads" 621 0 0# "inline" 
   (temp___expr_1238 : int) (temp___is_init_1235 : bool) (temp___skip_constant_1236 : bool) (temp___do_toplevel_1237 : bool)  =
  #"g-socket.ads" 672 0 0# (if (( temp___is_init_1235 \/ (Gnat__sockets__level_type.first <= Gnat__sockets__level_type.last) )) then (
   (Gnat__sockets__level_type.dynamic_property Gnat__sockets__level_type.first Gnat__sockets__level_type.last temp___expr_1238)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 672 0 0# "inline" 
   (temp___expr_1239 : int) (temp___skip_top_level_1240 : bool)  =
  #"g-socket.ads" 672 0 0# true

end

(* Module giving axioms for type "option_name" defined at g-socket.ads:682, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__option_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__option_name

 predicate dynamic_invariant #"g-socket.ads" 672 0 0# "inline" 
   (temp___expr_1244 : int) (temp___is_init_1241 : bool) (temp___skip_constant_1242 : bool) (temp___do_toplevel_1243 : bool)  =
  #"g-socket.ads" 682 0 0# (if (( temp___is_init_1241 \/ (Gnat__sockets__option_name.first <= Gnat__sockets__option_name.last) )) then (
   (Gnat__sockets__option_name.dynamic_property Gnat__sockets__option_name.first Gnat__sockets__option_name.last temp___expr_1244)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 682 0 0# "inline" 
   (temp___expr_1245 : int) (temp___skip_top_level_1246 : bool)  =
  #"g-socket.ads" 682 0 0# true

end

(* Module giving axioms for type "specific_option_name" defined at g-socket.ads:701, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__specific_option_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__specific_option_name

 predicate dynamic_invariant #"g-socket.ads" 682 0 0# "inline" 
   (temp___expr_1250 : int) (temp___is_init_1247 : bool) (temp___skip_constant_1248 : bool) (temp___do_toplevel_1249 : bool)  =
  #"g-socket.ads" 701 0 0# (if (( temp___is_init_1247 \/ (Gnat__sockets__specific_option_name.first <= Gnat__sockets__specific_option_name.last) )) then (
   (Gnat__sockets__specific_option_name.dynamic_property Gnat__sockets__specific_option_name.first Gnat__sockets__specific_option_name.last temp___expr_1250)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 701 0 0# "inline" 
   (temp___expr_1251 : int) (temp___skip_top_level_1252 : bool)  =
  #"g-socket.ads" 701 0 0# true

end

(* Module giving axioms for type "option_type" defined at g-socket.ads:704, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__option_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__int
 use        Interfaces__c__int__rep
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__option_name
 use        Gnat__sockets__option_name__rep
 use        Gnat__sockets__option_type
 use        Temp___823
 use        Temp___827
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 predicate dynamic_invariant #"g-socket.ads" 701 0 0# "inline" 
   (temp___expr_1256 : Gnat__sockets__option_type.option_type) (temp___is_init_1253 : bool) (temp___skip_constant_1254 : bool) (temp___do_toplevel_1255 : bool)  =
  #"g-socket.ads" 704 0 0# (let temp___1257 = (Gnat__sockets__option_type.rec__gnat__sockets__option_type__name (Gnat__sockets__option_type.__split_discrs temp___expr_1256)) in (
   ( ( (if ((Gnat__sockets__option_type.gnat__sockets__option_type__multicast_address__pred temp___expr_1256)) then (
    ((Gnat__sockets__inet_addr_type.attr__constrained (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1256))) = False)) else true) /\ (if ((Gnat__sockets__option_type.gnat__sockets__option_type__local_interface__pred temp___expr_1256)) then (
    ((Gnat__sockets__inet_addr_type.attr__constrained (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1256))) = False)) else true) ) /\ (if ((Gnat__sockets__option_type.gnat__sockets__option_type__outgoing_if__pred temp___expr_1256)) then (
    ((Gnat__sockets__inet_addr_type.attr__constrained (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1256))) = False)) else true) )))

 
 predicate default_initial_assumption #"g-socket.ads" 704 0 0# "inline" 
   (temp___expr_1267 : Gnat__sockets__option_type.option_type) (temp___skip_top_level_1268 : bool)  =
  #"g-socket.ads" 704 0 0# ( ((Gnat__sockets__option_type.attr__constrained temp___expr_1267) = False) /\ (let temp___1269 = (Gnat__sockets__option_type.rec__gnat__sockets__option_type__name (Gnat__sockets__option_type.__split_discrs temp___expr_1267)) in (
   ( ( ( ( ((Gnat__sockets__option_name__rep.to_rep (Gnat__sockets__option_type.rec__gnat__sockets__option_type__name (Gnat__sockets__option_type.__split_discrs temp___expr_1267))) = 1) /\ (if ((Gnat__sockets__option_type.gnat__sockets__option_type__optname__pred temp___expr_1267)) then (
    ((Interfaces__c__int__rep.to_rep (Gnat__sockets__option_type.rec__gnat__sockets__option_type__optname (Gnat__sockets__option_type.__split_fields temp___expr_1267))) = ( -1 ))) else true) ) /\ (if ((Gnat__sockets__option_type.gnat__sockets__option_type__multicast_address__pred temp___expr_1267)) then (
    (let temp___1276 = (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1267)) in (
     ( ((Gnat__sockets__inet_addr_type.attr__constrained temp___1276) = False) /\ (let temp___1277 = (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) in (
      ( ( ((Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1267))))) = 0) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v4__pred (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) then (
       ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v4 (Gnat__sockets__inet_addr_type.__split_fields (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) = (Temp___823.temp___823 0))) else true) ) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v6__pred (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) then (
       ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v6 (Gnat__sockets__inet_addr_type.__split_fields (Gnat__sockets__option_type.rec__gnat__sockets__option_type__multicast_address (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) = (Temp___827.temp___827 0))) else true) )))
      )))
   ) else true) ) /\ (if ((Gnat__sockets__option_type.gnat__sockets__option_type__local_interface__pred temp___expr_1267)) then (
    (let temp___1278 = (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1267)) in (
     ( ((Gnat__sockets__inet_addr_type.attr__constrained temp___1278) = False) /\ (let temp___1279 = (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) in (
      ( ( ((Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1267))))) = 0) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v4__pred (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) then (
       ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v4 (Gnat__sockets__inet_addr_type.__split_fields (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) = (Temp___823.temp___823 0))) else true) ) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v6__pred (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) then (
       ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v6 (Gnat__sockets__inet_addr_type.__split_fields (Gnat__sockets__option_type.rec__gnat__sockets__option_type__local_interface (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) = (Temp___827.temp___827 0))) else true) )))
      )))
   ) else true) ) /\ (if ((Gnat__sockets__option_type.gnat__sockets__option_type__outgoing_if__pred temp___expr_1267)) then (
    (let temp___1280 = (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1267)) in (
     ( ((Gnat__sockets__inet_addr_type.attr__constrained temp___1280) = False) /\ (let temp___1281 = (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) in (
      ( ( ((Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__inet_addr_type.__split_discrs (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1267))))) = 0) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v4__pred (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) then (
       ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v4 (Gnat__sockets__inet_addr_type.__split_fields (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) = (Temp___823.temp___823 0))) else true) ) /\ (if ((Gnat__sockets__inet_addr_type.gnat__sockets__inet_addr_type__sin_v6__pred (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) then (
       ((Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__sin_v6 (Gnat__sockets__inet_addr_type.__split_fields (Gnat__sockets__option_type.rec__gnat__sockets__option_type__outgoing_if (Gnat__sockets__option_type.__split_fields temp___expr_1267)))) = (Temp___827.temp___827 0))) else true) )))
      )))
   ) else true) )))
   )

end

(* Module giving axioms for type "request_name" defined at g-socket.ads:759, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__request_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__request_name

 predicate dynamic_invariant #"g-socket.ads" 1226 0 0# "inline" 
   (temp___expr_1287 : int) (temp___is_init_1284 : bool) (temp___skip_constant_1285 : bool) (temp___do_toplevel_1286 : bool)  =
  #"g-socket.ads" 759 0 0# (if (( temp___is_init_1284 \/ (Gnat__sockets__request_name.first <= Gnat__sockets__request_name.last) )) then (
   (Gnat__sockets__request_name.dynamic_property Gnat__sockets__request_name.first Gnat__sockets__request_name.last temp___expr_1287)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 759 0 0# "inline" 
   (temp___expr_1288 : int) (temp___skip_top_level_1289 : bool)  =
  #"g-socket.ads" 759 0 0# true

end

(* Module giving axioms for type "request_type" defined at g-socket.ads:763, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__request_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__request_name
 use        Gnat__sockets__request_name__rep
 use        Gnat__sockets__request_type

 predicate dynamic_invariant #"g-socket.ads" 759 0 0# "inline" 
   (temp___expr_1293 : Gnat__sockets__request_type.request_type) (temp___is_init_1290 : bool) (temp___skip_constant_1291 : bool) (temp___do_toplevel_1292 : bool)  =
  #"g-socket.ads" 763 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 763 0 0# "inline" 
   (temp___expr_1295 : Gnat__sockets__request_type.request_type) (temp___skip_top_level_1296 : bool)  =
  #"g-socket.ads" 763 0 0# ( ((Gnat__sockets__request_type.attr__constrained temp___expr_1295) = False) /\ (let temp___1297 = (Gnat__sockets__request_type.rec__gnat__sockets__request_type__name (Gnat__sockets__request_type.__split_discrs temp___expr_1295)) in (
   ((Gnat__sockets__request_name__rep.to_rep (Gnat__sockets__request_type.rec__gnat__sockets__request_type__name (Gnat__sockets__request_type.__split_discrs temp___expr_1295))) = 0)))
   )

end

(* Module giving axioms for type "request_flag_type" defined at g-socket.ads:1277, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__request_flag_type___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Gnat__sockets__request_flag_type

 predicate dynamic_invariant #"g-socket.ads" 763 0 0# "inline" 
   (temp___expr_1303 : BV8.t) (temp___is_init_1300 : bool) (temp___skip_constant_1301 : bool) (temp___do_toplevel_1302 : bool)  =
  #"g-socket.ads" 1277 0 0# (if (( temp___is_init_1300 \/ (BV8.ule Gnat__sockets__request_flag_type.first Gnat__sockets__request_flag_type.last) )) then (
   (Gnat__sockets__request_flag_type.dynamic_property Gnat__sockets__request_flag_type.first Gnat__sockets__request_flag_type.last temp___expr_1303)) else true)
 
 predicate default_initial_assumption #"g-socket.ads" 1277 0 0# "inline" 
   (temp___expr_1304 : BV8.t) (temp___skip_top_level_1305 : bool)  =
  #"g-socket.ads" 1277 0 0# true

end

(* Module giving axioms for type "object" defined at a-uncdea.ads:17 instantiated at g-socket.ads:1041, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__free__object___axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type

 predicate dynamic_invariant #"g-socket.ads" 1277 0 0# "inline" 
   (temp___expr_1387 : Ada__streams__root_stream_type.root_stream_type) (temp___is_init_1384 : bool) (temp___skip_constant_1385 : bool) (temp___do_toplevel_1386 : bool)  =
  #"a-stream.ads" 70 0 0# true

end

(* Module giving axioms for type "Tfd_setB" defined at g-socket.ads:1191, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__Tfd_setB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Tfd_setP1" defined at g-socket.ads:1191, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__Tfd_setP1___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "fd_set" defined at g-socket.ads:1191, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__fd_set___axiom
 use import "_gnatprove_standard".Main
 use        Array__Int__System__storage_elements__storage_element
 use        Array__Int__System__storage_elements__storage_element

 predicate dynamic_invariant #"a-stream.ads" 70 0 0# "inline" 
   (temp___expr_1391 : Array__Int__System__storage_elements__storage_element.map) (temp___is_init_1388 : bool) (temp___skip_constant_1389 : bool) (temp___do_toplevel_1390 : bool)  =
  #"g-socket.ads" 1191 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 1191 0 0# "inline" 
   (temp___expr_1393 : Array__Int__System__storage_elements__storage_element.map) (temp___skip_top_level_1394 : bool)  =
  #"g-socket.ads" 1191 0 0# true

end

(* Module giving axioms for type "socket_set_type" defined at g-socket.ads:1202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__socket_set_type___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type
 use        Gnat__sockets__socket_type__rep
 use        Gnat__sockets__no_socket
 use        Gnat__sockets__socket_set_type

 predicate dynamic_invariant #"g-socket.ads" 1191 0 0# "inline" 
   (temp___expr_1400 : Gnat__sockets__socket_set_type.socket_set_type) (temp___is_init_1397 : bool) (temp___skip_constant_1398 : bool) (temp___do_toplevel_1399 : bool)  =
  #"g-socket.ads" 1202 0 0# true
 
 predicate default_initial_assumption #"g-socket.ads" 1202 0 0# "inline" 
   (temp___expr_1402 : Gnat__sockets__socket_set_type.socket_set_type) (temp___skip_top_level_1403 : bool)  =
  #"g-socket.ads" 1202 0 0# (if ((Gnat__sockets__socket_set_type.gnat__sockets__socket_set_type__last__pred temp___expr_1402)) then (
   ((Gnat__sockets__socket_type__rep.to_rep (Gnat__sockets__socket_set_type.rec__gnat__sockets__socket_set_type__last (Gnat__sockets__socket_set_type.__split_fields temp___expr_1402))) = Gnat__sockets__no_socket.no_socket)) else true)

end

(* Module giving axioms for type "T11s" defined at g-socket.ads:1189, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T11s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T18s" defined at g-socket.ads:1234, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T18s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T19s" defined at g-socket.ads:1234, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T19s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T20s" defined at g-socket.ads:1234, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T20s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T21s" defined at g-socket.ads:1236, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T21s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T22s" defined at g-socket.ads:1236, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T22s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T23s" defined at g-socket.ads:1236, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T23s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T24s" defined at g-socket.ads:1238, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T24s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T25s" defined at g-socket.ads:1238, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T25s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T26s" defined at g-socket.ads:1238, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T26s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T27s" defined at g-socket.ads:1240, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T27s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T28s" defined at g-socket.ads:1240, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T28s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T29s" defined at g-socket.ads:1240, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T29s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T30s" defined at g-socket.ads:1243, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T30s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T31s" defined at g-socket.ads:1243, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T31s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T32s" defined at g-socket.ads:1243, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T32s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T33s" defined at g-socket.ads:1245, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T33s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T34s" defined at g-socket.ads:1245, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T34s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T35s" defined at g-socket.ads:1245, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T35s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T36s" defined at g-socket.ads:1247, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T36s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T37s" defined at g-socket.ads:1247, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T37s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T38s" defined at g-socket.ads:1247, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T38s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T40s" defined at g-socket.ads:1249, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T39s__T40s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T39s" defined at g-socket.ads:1249, created in Gnat2Why.Types.Generate_Type_Completion *)
module Gnat__sockets__T39s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__chars___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__dirs___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__files___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__int

 predicate dynamic_invariant #"g-socket.ads" 417 0 0# "inline" 
   (temp___expr_1443 : int) (temp___is_init_1440 : bool) (temp___skip_constant_1441 : bool) (temp___do_toplevel_1442 : bool)  =
  #"s-crtl.ads" 53 0 0# (if (( temp___is_init_1440 \/ (System__crtl__int.first <= System__crtl__int.last) )) then (
   (System__crtl__int.dynamic_property System__crtl__int.first System__crtl__int.last temp___expr_1443)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 53 0 0# "inline" 
   (temp___expr_1444 : int) (temp___skip_top_level_1445 : bool)  =
  #"s-crtl.ads" 53 0 0# true

end

(* Module giving axioms for type "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__TlongB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__long___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__long

 predicate dynamic_invariant #"s-crtl.ads" 53 0 0# "inline" 
   (temp___expr_1449 : int) (temp___is_init_1446 : bool) (temp___skip_constant_1447 : bool) (temp___do_toplevel_1448 : bool)  =
  #"s-crtl.ads" 55 0 0# (if (( temp___is_init_1446 \/ (System__crtl__long.first <= System__crtl__long.last) )) then (
   (System__crtl__long.dynamic_property System__crtl__long.first System__crtl__long.last temp___expr_1449)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 55 0 0# "inline" 
   (temp___expr_1450 : int) (temp___skip_top_level_1451 : bool)  =
  #"s-crtl.ads" 55 0 0# true

end

(* Module giving axioms for type "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__off_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__off_t

 predicate dynamic_invariant #"s-crtl.ads" 55 0 0# "inline" 
   (temp___expr_1455 : int) (temp___is_init_1452 : bool) (temp___skip_constant_1453 : bool) (temp___do_toplevel_1454 : bool)  =
  #"s-crtl.ads" 58 0 0# (if (( temp___is_init_1452 \/ (System__crtl__off_t.first <= System__crtl__off_t.last) )) then (
   (System__crtl__off_t.dynamic_property System__crtl__off_t.first System__crtl__off_t.last temp___expr_1455)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 58 0 0# "inline" 
   (temp___expr_1456 : int) (temp___skip_top_level_1457 : bool)  =
  #"s-crtl.ads" 58 0 0# true

end

(* Module giving axioms for type "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__size_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__size_t

 predicate dynamic_invariant #"s-crtl.ads" 58 0 0# "inline" 
   (temp___expr_1461 : BV32.t) (temp___is_init_1458 : bool) (temp___skip_constant_1459 : bool) (temp___do_toplevel_1460 : bool)  =
  #"s-crtl.ads" 60 0 0# (if (( temp___is_init_1458 \/ (BV32.ule System__crtl__size_t.first System__crtl__size_t.last) )) then (
   (System__crtl__size_t.dynamic_property System__crtl__size_t.first System__crtl__size_t.last temp___expr_1461)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 60 0 0# "inline" 
   (temp___expr_1462 : BV32.t) (temp___skip_top_level_1463 : bool)  =
  #"s-crtl.ads" 60 0 0# true

end

(* Module giving axioms for type "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__Tssize_tB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__ssize_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__ssize_t

 predicate dynamic_invariant #"s-crtl.ads" 60 0 0# "inline" 
   (temp___expr_1467 : int) (temp___is_init_1464 : bool) (temp___skip_constant_1465 : bool) (temp___do_toplevel_1466 : bool)  =
  #"s-crtl.ads" 62 0 0# (if (( temp___is_init_1464 \/ (System__crtl__ssize_t.first <= System__crtl__ssize_t.last) )) then (
   (System__crtl__ssize_t.dynamic_property System__crtl__ssize_t.first System__crtl__ssize_t.last temp___expr_1467)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 62 0 0# "inline" 
   (temp___expr_1468 : int) (temp___skip_top_level_1469 : bool)  =
  #"s-crtl.ads" 62 0 0# true

end

(* Module giving axioms for type "Tint64B" defined at s-crtl.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__Tint64B___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int64" defined at s-crtl.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__int64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__int64

 predicate dynamic_invariant #"s-crtl.ads" 62 0 0# "inline" 
   (temp___expr_1473 : int) (temp___is_init_1470 : bool) (temp___skip_constant_1471 : bool) (temp___do_toplevel_1472 : bool)  =
  #"s-crtl.ads" 65 0 0# (if (( temp___is_init_1470 \/ (System__crtl__int64.first <= System__crtl__int64.last) )) then (
   (System__crtl__int64.dynamic_property System__crtl__int64.first System__crtl__int64.last temp___expr_1473)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 65 0 0# "inline" 
   (temp___expr_1474 : int) (temp___skip_top_level_1475 : bool)  =
  #"s-crtl.ads" 65 0 0# true

end

(* Module giving axioms for type "filename_encoding" defined at s-crtl.ads:72, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__filename_encoding___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__crtl__filename_encoding

 predicate dynamic_invariant #"s-crtl.ads" 65 0 0# "inline" 
   (temp___expr_1479 : int) (temp___is_init_1476 : bool) (temp___skip_constant_1477 : bool) (temp___do_toplevel_1478 : bool)  =
  #"s-crtl.ads" 72 0 0# (if (( temp___is_init_1476 \/ (System__crtl__filename_encoding.first <= System__crtl__filename_encoding.last) )) then (
   (System__crtl__filename_encoding.dynamic_property System__crtl__filename_encoding.first System__crtl__filename_encoding.last temp___expr_1479)) else true)
 
 predicate default_initial_assumption #"s-crtl.ads" 72 0 0# "inline" 
   (temp___expr_1480 : int) (temp___skip_top_level_1481 : bool)  =
  #"s-crtl.ads" 72 0 0# true

end

(* Module giving axioms for type "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__chars___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__files___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__int___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__int

 predicate dynamic_invariant #"s-crtl.ads" 72 0 0# "inline" 
   (temp___expr_1493 : int) (temp___is_init_1490 : bool) (temp___skip_constant_1491 : bool) (temp___do_toplevel_1492 : bool)  =
  #"i-cstrea.ads" 42 0 0# (if (( temp___is_init_1490 \/ (Interfaces__c_streams__int.first <= Interfaces__c_streams__int.last) )) then (
   (Interfaces__c_streams__int.dynamic_property Interfaces__c_streams__int.first Interfaces__c_streams__int.last temp___expr_1493)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 42 0 0# "inline" 
   (temp___expr_1494 : int) (temp___skip_top_level_1495 : bool)  =
  #"i-cstrea.ads" 42 0 0# true

end

(* Module giving axioms for type "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__long___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__long

 predicate dynamic_invariant #"i-cstrea.ads" 42 0 0# "inline" 
   (temp___expr_1499 : int) (temp___is_init_1496 : bool) (temp___skip_constant_1497 : bool) (temp___do_toplevel_1498 : bool)  =
  #"i-cstrea.ads" 43 0 0# (if (( temp___is_init_1496 \/ (Interfaces__c_streams__long.first <= Interfaces__c_streams__long.last) )) then (
   (Interfaces__c_streams__long.dynamic_property Interfaces__c_streams__long.first Interfaces__c_streams__long.last temp___expr_1499)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 43 0 0# "inline" 
   (temp___expr_1500 : int) (temp___skip_top_level_1501 : bool)  =
  #"i-cstrea.ads" 43 0 0# true

end

(* Module giving axioms for type "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__size_t___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__size_t

 predicate dynamic_invariant #"i-cstrea.ads" 43 0 0# "inline" 
   (temp___expr_1505 : BV32.t) (temp___is_init_1502 : bool) (temp___skip_constant_1503 : bool) (temp___do_toplevel_1504 : bool)  =
  #"i-cstrea.ads" 44 0 0# (if (( temp___is_init_1502 \/ (BV32.ule Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last) )) then (
   (Interfaces__c_streams__size_t.dynamic_property Interfaces__c_streams__size_t.first Interfaces__c_streams__size_t.last temp___expr_1505)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 44 0 0# "inline" 
   (temp___expr_1506 : BV32.t) (temp___skip_top_level_1507 : bool)  =
  #"i-cstrea.ads" 44 0 0# true

end

(* Module giving axioms for type "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__ssize_t___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__ssize_t

 predicate dynamic_invariant #"i-cstrea.ads" 44 0 0# "inline" 
   (temp___expr_1511 : int) (temp___is_init_1508 : bool) (temp___skip_constant_1509 : bool) (temp___do_toplevel_1510 : bool)  =
  #"i-cstrea.ads" 45 0 0# (if (( temp___is_init_1508 \/ (Interfaces__c_streams__ssize_t.first <= Interfaces__c_streams__ssize_t.last) )) then (
   (Interfaces__c_streams__ssize_t.dynamic_property Interfaces__c_streams__ssize_t.first Interfaces__c_streams__ssize_t.last temp___expr_1511)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 45 0 0# "inline" 
   (temp___expr_1512 : int) (temp___skip_top_level_1513 : bool)  =
  #"i-cstrea.ads" 45 0 0# true

end

(* Module giving axioms for type "int64" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__int64___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__int64

 predicate dynamic_invariant #"i-cstrea.ads" 45 0 0# "inline" 
   (temp___expr_1517 : int) (temp___is_init_1514 : bool) (temp___skip_constant_1515 : bool) (temp___do_toplevel_1516 : bool)  =
  #"i-cstrea.ads" 46 0 0# (if (( temp___is_init_1514 \/ (Interfaces__c_streams__int64.first <= Interfaces__c_streams__int64.last) )) then (
   (Interfaces__c_streams__int64.dynamic_property Interfaces__c_streams__int64.first Interfaces__c_streams__int64.last temp___expr_1517)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 46 0 0# "inline" 
   (temp___expr_1518 : int) (temp___skip_top_level_1519 : bool)  =
  #"i-cstrea.ads" 46 0 0# true

end

(* Module giving axioms for type "voids" defined at i-cstrea.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__voids___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "content_encoding" defined at i-cstrea.ads:230, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__content_encoding___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__content_encoding

 predicate dynamic_invariant #"i-cstrea.ads" 46 0 0# "inline" 
   (temp___expr_1523 : int) (temp___is_init_1520 : bool) (temp___skip_constant_1521 : bool) (temp___do_toplevel_1522 : bool)  =
  #"i-cstrea.ads" 230 0 0# (if (( temp___is_init_1520 \/ (Interfaces__c_streams__content_encoding.first <= Interfaces__c_streams__content_encoding.last) )) then (
   (Interfaces__c_streams__content_encoding.dynamic_property Interfaces__c_streams__content_encoding.first Interfaces__c_streams__content_encoding.last temp___expr_1523)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 230 0 0# "inline" 
   (temp___expr_1524 : int) (temp___skip_top_level_1525 : bool)  =
  #"i-cstrea.ads" 230 0 0# true

end

(* Module giving axioms for type "text_content_encoding" defined at i-cstrea.ads:248, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__text_content_encoding___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__text_content_encoding

 predicate dynamic_invariant #"i-cstrea.ads" 230 0 0# "inline" 
   (temp___expr_1529 : int) (temp___is_init_1526 : bool) (temp___skip_constant_1527 : bool) (temp___do_toplevel_1528 : bool)  =
  #"i-cstrea.ads" 248 0 0# (if (( temp___is_init_1526 \/ (Interfaces__c_streams__text_content_encoding.first <= Interfaces__c_streams__text_content_encoding.last) )) then (
   (Interfaces__c_streams__text_content_encoding.dynamic_property Interfaces__c_streams__text_content_encoding.first Interfaces__c_streams__text_content_encoding.last temp___expr_1529)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 248 0 0# "inline" 
   (temp___expr_1530 : int) (temp___skip_top_level_1531 : bool)  =
  #"i-cstrea.ads" 248 0 0# true

end

(* Module giving axioms for type "non_default_text_content_encoding" defined at i-cstrea.ads:251, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__non_default_text_content_encoding___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c_streams__non_default_text_content_encoding

 predicate dynamic_invariant #"i-cstrea.ads" 248 0 0# "inline" 
   (temp___expr_1535 : int) (temp___is_init_1532 : bool) (temp___skip_constant_1533 : bool) (temp___do_toplevel_1534 : bool)  =
  #"i-cstrea.ads" 251 0 0# (if (( temp___is_init_1532 \/ (Interfaces__c_streams__non_default_text_content_encoding.first <= Interfaces__c_streams__non_default_text_content_encoding.last) )) then (
   (Interfaces__c_streams__non_default_text_content_encoding.dynamic_property Interfaces__c_streams__non_default_text_content_encoding.first Interfaces__c_streams__non_default_text_content_encoding.last temp___expr_1535)) else true)
 
 predicate default_initial_assumption #"i-cstrea.ads" 251 0 0# "inline" 
   (temp___expr_1536 : int) (temp___skip_top_level_1537 : bool)  =
  #"i-cstrea.ads" 251 0 0# true

end

(* Module giving axioms for type "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__file_mode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__file_control_block__file_mode

 predicate dynamic_invariant #"i-cstrea.ads" 251 0 0# "inline" 
   (temp___expr_1541 : int) (temp___is_init_1538 : bool) (temp___skip_constant_1539 : bool) (temp___do_toplevel_1540 : bool)  =
  #"s-ficobl.ads" 63 0 0# (if (( temp___is_init_1538 \/ (System__file_control_block__file_mode.first <= System__file_control_block__file_mode.last) )) then (
   (System__file_control_block__file_mode.dynamic_property System__file_control_block__file_mode.first System__file_control_block__file_mode.last temp___expr_1541)) else true)
 
 predicate default_initial_assumption #"s-ficobl.ads" 63 0 0# "inline" 
   (temp___expr_1542 : int) (temp___skip_top_level_1543 : bool)  =
  #"s-ficobl.ads" 63 0 0# true

end

(* Module giving axioms for type "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__read_file_mode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__file_control_block__read_file_mode

 predicate dynamic_invariant #"s-ficobl.ads" 63 0 0# "inline" 
   (temp___expr_1547 : int) (temp___is_init_1544 : bool) (temp___skip_constant_1545 : bool) (temp___do_toplevel_1546 : bool)  =
  #"s-ficobl.ads" 64 0 0# (if (( temp___is_init_1544 \/ (System__file_control_block__read_file_mode.first <= System__file_control_block__read_file_mode.last) )) then (
   (System__file_control_block__read_file_mode.dynamic_property System__file_control_block__read_file_mode.first System__file_control_block__read_file_mode.last temp___expr_1547)) else true)
 
 predicate default_initial_assumption #"s-ficobl.ads" 64 0 0# "inline" 
   (temp___expr_1548 : int) (temp___skip_top_level_1549 : bool)  =
  #"s-ficobl.ads" 64 0 0# true

end

(* Module giving axioms for type "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__shared_status_type___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__file_control_block__shared_status_type

 predicate dynamic_invariant #"s-ficobl.ads" 64 0 0# "inline" 
   (temp___expr_1553 : int) (temp___is_init_1550 : bool) (temp___skip_constant_1551 : bool) (temp___do_toplevel_1552 : bool)  =
  #"s-ficobl.ads" 69 0 0# (if (( temp___is_init_1550 \/ (System__file_control_block__shared_status_type.first <= System__file_control_block__shared_status_type.last) )) then (
   (System__file_control_block__shared_status_type.dynamic_property System__file_control_block__shared_status_type.first System__file_control_block__shared_status_type.last temp___expr_1553)) else true)
 
 predicate default_initial_assumption #"s-ficobl.ads" 69 0 0# "inline" 
   (temp___expr_1554 : int) (temp___skip_top_level_1555 : bool)  =
  #"s-ficobl.ads" 69 0 0# true

end

(* Module giving axioms for type "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_methodB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_encoding_method___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_encoding_method

 predicate dynamic_invariant #"s-ficobl.ads" 69 0 0# "inline" 
   (temp___expr_1559 : int) (temp___is_init_1556 : bool) (temp___skip_constant_1557 : bool) (temp___do_toplevel_1558 : bool)  =
  #"s-wchcon.ads" 94 0 0# (if (( temp___is_init_1556 \/ (System__wch_con__wc_encoding_method.first <= System__wch_con__wc_encoding_method.last) )) then (
   (System__wch_con__wc_encoding_method.dynamic_property System__wch_con__wc_encoding_method.first System__wch_con__wc_encoding_method.last temp___expr_1559)) else true)
 
 predicate default_initial_assumption #"s-wchcon.ads" 94 0 0# "inline" 
   (temp___expr_1560 : int) (temp___skip_top_level_1561 : bool)  =
  #"s-wchcon.ads" 94 0 0# true

end

(* Module giving axioms for type "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersT___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T3s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T4s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_esc_encoding_method___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_esc_encoding_method

 predicate dynamic_invariant #"s-wchcon.ads" 94 0 0# "inline" 
   (temp___expr_1565 : int) (temp___is_init_1562 : bool) (temp___skip_constant_1563 : bool) (temp___do_toplevel_1564 : bool)  =
  #"s-wchcon.ads" 180 0 0# (if (( temp___is_init_1562 \/ (System__wch_con__wc_esc_encoding_method.first <= System__wch_con__wc_esc_encoding_method.last) )) then (
   (System__wch_con__wc_esc_encoding_method.dynamic_property System__wch_con__wc_esc_encoding_method.first System__wch_con__wc_esc_encoding_method.last temp___expr_1565)) else true)
 
 predicate default_initial_assumption #"s-wchcon.ads" 180 0 0# "inline" 
   (temp___expr_1566 : int) (temp___skip_top_level_1567 : bool)  =
  #"s-wchcon.ads" 180 0 0# true

end

(* Module giving axioms for type "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_upper_half_encoding_method___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_upper_half_encoding_method

 predicate dynamic_invariant #"s-wchcon.ads" 180 0 0# "inline" 
   (temp___expr_1571 : int) (temp___is_init_1568 : bool) (temp___skip_constant_1569 : bool) (temp___do_toplevel_1570 : bool)  =
  #"s-wchcon.ads" 184 0 0# (if (( temp___is_init_1568 \/ (System__wch_con__wc_upper_half_encoding_method.first <= System__wch_con__wc_upper_half_encoding_method.last) )) then (
   (System__wch_con__wc_upper_half_encoding_method.dynamic_property System__wch_con__wc_upper_half_encoding_method.first System__wch_con__wc_upper_half_encoding_method.last temp___expr_1571)) else true)
 
 predicate default_initial_assumption #"s-wchcon.ads" 184 0 0# "inline" 
   (temp___expr_1572 : int) (temp___skip_top_level_1573 : bool)  =
  #"s-wchcon.ads" 184 0 0# true

end

(* Module giving axioms for type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesT___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T7s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T8s___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_type___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 predicate dynamic_invariant #"s-wchcon.ads" 184 0 0# "inline" 
   (temp___expr_1579 : Ada__text_io__file_type.file_type) (temp___is_init_1576 : bool) (temp___skip_constant_1577 : bool) (temp___do_toplevel_1578 : bool)  =
  #"a-textio.ads" 52 0 0# true
 
 predicate default_initial_assumption #"a-textio.ads" 52 0 0# "inline" 
   (temp___expr_1580 : Ada__text_io__file_type.file_type) (temp___skip_top_level_1581 : bool)  =
  #"a-textio.ads" 52 0 0# true

end

(* Module giving axioms for type "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_mode___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__file_mode

 predicate dynamic_invariant #"a-textio.ads" 52 0 0# "inline" 
   (temp___expr_1585 : int) (temp___is_init_1582 : bool) (temp___skip_constant_1583 : bool) (temp___do_toplevel_1584 : bool)  =
  #"a-textio.ads" 53 0 0# (if (( temp___is_init_1582 \/ (Ada__text_io__file_mode.first <= Ada__text_io__file_mode.last) )) then (
   (Ada__text_io__file_mode.dynamic_property Ada__text_io__file_mode.first Ada__text_io__file_mode.last temp___expr_1585)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 53 0 0# "inline" 
   (temp___expr_1586 : int) (temp___skip_top_level_1587 : bool)  =
  #"a-textio.ads" 53 0 0# true

end

(* Module giving axioms for type "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__TcountB___axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for type "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__count

 predicate dynamic_invariant #"a-textio.ads" 53 0 0# "inline" 
   (temp___expr_1591 : int) (temp___is_init_1588 : bool) (temp___skip_constant_1589 : bool) (temp___do_toplevel_1590 : bool)  =
  #"a-textio.ads" 64 0 0# (if (( temp___is_init_1588 \/ (Ada__text_io__count.first <= Ada__text_io__count.last) )) then (
   (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last temp___expr_1591)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 64 0 0# "inline" 
   (temp___expr_1592 : int) (temp___skip_top_level_1593 : bool)  =
  #"a-textio.ads" 64 0 0# true

end

(* Module giving axioms for type "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__positive_count___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__positive_count

 predicate dynamic_invariant #"a-textio.ads" 64 0 0# "inline" 
   (temp___expr_1597 : int) (temp___is_init_1594 : bool) (temp___skip_constant_1595 : bool) (temp___do_toplevel_1596 : bool)  =
  #"a-textio.ads" 68 0 0# (if (( temp___is_init_1594 \/ (Ada__text_io__positive_count.first <= Ada__text_io__positive_count.last) )) then (
   (Ada__text_io__positive_count.dynamic_property Ada__text_io__positive_count.first Ada__text_io__positive_count.last temp___expr_1597)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 68 0 0# "inline" 
   (temp___expr_1598 : int) (temp___skip_top_level_1599 : bool)  =
  #"a-textio.ads" 68 0 0# true

end

(* Module giving axioms for type "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__field___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__field

 predicate dynamic_invariant #"a-textio.ads" 68 0 0# "inline" 
   (temp___expr_1603 : int) (temp___is_init_1600 : bool) (temp___skip_constant_1601 : bool) (temp___do_toplevel_1602 : bool)  =
  #"a-textio.ads" 73 0 0# (if (( temp___is_init_1600 \/ (Ada__text_io__field.first <= Ada__text_io__field.last) )) then (
   (Ada__text_io__field.dynamic_property Ada__text_io__field.first Ada__text_io__field.last temp___expr_1603)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 73 0 0# "inline" 
   (temp___expr_1604 : int) (temp___skip_top_level_1605 : bool)  =
  #"a-textio.ads" 73 0 0# true

end

(* Module giving axioms for type "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__number_base___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__number_base

 predicate dynamic_invariant #"a-textio.ads" 73 0 0# "inline" 
   (temp___expr_1609 : int) (temp___is_init_1606 : bool) (temp___skip_constant_1607 : bool) (temp___do_toplevel_1608 : bool)  =
  #"a-textio.ads" 78 0 0# (if (( temp___is_init_1606 \/ (Ada__text_io__number_base.first <= Ada__text_io__number_base.last) )) then (
   (Ada__text_io__number_base.dynamic_property Ada__text_io__number_base.first Ada__text_io__number_base.last temp___expr_1609)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 78 0 0# "inline" 
   (temp___expr_1610 : int) (temp___skip_top_level_1611 : bool)  =
  #"a-textio.ads" 78 0 0# true

end

(* Module giving axioms for type "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__type_set___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__type_set

 predicate dynamic_invariant #"a-textio.ads" 78 0 0# "inline" 
   (temp___expr_1615 : int) (temp___is_init_1612 : bool) (temp___skip_constant_1613 : bool) (temp___do_toplevel_1614 : bool)  =
  #"a-textio.ads" 80 0 0# (if (( temp___is_init_1612 \/ (Ada__text_io__type_set.first <= Ada__text_io__type_set.last) )) then (
   (Ada__text_io__type_set.dynamic_property Ada__text_io__type_set.first Ada__text_io__type_set.last temp___expr_1615)) else true)
 
 predicate default_initial_assumption #"a-textio.ads" 80 0 0# "inline" 
   (temp___expr_1616 : int) (temp___skip_top_level_1617 : bool)  =
  #"a-textio.ads" 80 0 0# true

end
(* Module for defining the value of constant "system_name" defined at system.ads:47, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__system_name

 axiom system_name__def_axiom :
  ((System__system_name.system_name ) = 0)

end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:92, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_bit_order

 axiom default_bit_order__def_axiom :
  ((System__default_bit_order.default_bit_order ) = 1)

end

(* Module for defining the value of constant "max_priority" defined at system.ads:97, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_priority

 axiom max_priority__def_axiom :
  ((System__max_priority.max_priority ) = 30)

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:98, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__max_interrupt_priority

 axiom max_interrupt_priority__def_axiom :
  ((System__max_interrupt_priority.max_interrupt_priority ) = 31)

end

(* Module for defining the value of constant "default_priority" defined at system.ads:104, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__default_priority

 axiom default_priority__def_axiom :
  ((System__default_priority.default_priority ) = 15)

end

(* Module for defining the value of constant "null_address" defined at system.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV32
 use        System__null_address

 axiom null_address__def_axiom :
  ((System__null_address.null_address ) = (BV32.of_int 0))

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_divide_checks

 axiom backend_divide_checks__def_axiom :
  ((System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:122, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__backend_overflow_checks

 axiom backend_overflow_checks__def_axiom :
  ((System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:123, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__command_line_args

 axiom command_line_args__def_axiom :
  ((System__command_line_args.command_line_args ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:124, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__configurable_run_time

 axiom configurable_run_time__def_axiom :
  ((System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "denorm" defined at system.ads:125, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__denorm

 axiom denorm__def_axiom :
  ((System__denorm.denorm ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__duration_32_bits

 axiom duration_32_bits__def_axiom :
  ((System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__exit_status_supported

 axiom exit_status_supported__def_axiom :
  ((System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__fractional_fixed_ops

 axiom fractional_fixed_ops__def_axiom :
  ((System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_layout

 axiom frontend_layout__def_axiom :
  ((System__frontend_layout.frontend_layout ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_overflows

 axiom machine_overflows__def_axiom :
  ((System__machine_overflows.machine_overflows ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__machine_rounds

 axiom machine_rounds__def_axiom :
  ((System__machine_rounds.machine_rounds ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__preallocated_stacks

 axiom preallocated_stacks__def_axiom :
  ((System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__signed_zeros

 axiom signed_zeros__def_axiom :
  ((System__signed_zeros.signed_zeros ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_default

 axiom stack_check_default__def_axiom :
  ((System__stack_check_default.stack_check_default ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_probes

 axiom stack_check_probes__def_axiom :
  ((System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__stack_check_limits

 axiom stack_check_limits__def_axiom :
  ((System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_aggregates

 axiom support_aggregates__def_axiom :
  ((System__support_aggregates.support_aggregates ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_atomic_primitives

 axiom support_atomic_primitives__def_axiom :
  ((System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_assign

 axiom support_composite_assign__def_axiom :
  ((System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_composite_compare

 axiom support_composite_compare__def_axiom :
  ((System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__support_long_shifts

 axiom support_long_shifts__def_axiom :
  ((System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__always_compatible_rep

 axiom always_compatible_rep__def_axiom :
  ((System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__suppress_standard_library

 axiom suppress_standard_library__def_axiom :
  ((System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__use_ada_main_program_name

 axiom use_ada_main_program_name__def_axiom :
  ((System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "frontend_exceptions" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_exceptions___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__frontend_exceptions

 axiom frontend_exceptions__def_axiom :
  ((System__frontend_exceptions.frontend_exceptions ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__zcx_by_default

 axiom zcx_by_default__def_axiom :
  ((System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "underlying_priorities" defined at system.ads:165, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__underlying_priorities___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__underlying_priorities
 use        Array__Int__Standard__integer
 use        System__underlying_priorities__aggregate_def
 use        Array__Int__Standard__integer

 axiom underlying_priorities__def_axiom :
  ((System__underlying_priorities.underlying_priorities ) = (System__underlying_priorities__aggregate_def.system__underlying_priorities__aggregate_def ( -15 ) ( -7 ) ( -6 ) ( -5 ) ( -4 ) ( -3 ) ( -2 ) ( -1 ) 0 1 2 3 4 5 6 15))

end

(* Module for defining the value of constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__unspecified_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__unspecified_size

 axiom unspecified_size__def_axiom :
  ((System__parameters__unspecified_size.unspecified_size ) = ( -2147483648 ))

end

(* Module for defining the value of constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__dynamic___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__dynamic

 axiom dynamic__def_axiom :
  ((System__parameters__dynamic.dynamic ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_percentage___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__sec_stack_percentage

 axiom sec_stack_percentage__def_axiom :
  ((System__parameters__sec_stack_percentage.sec_stack_percentage ) = ( -1 ))

end

(* Module for defining the value of constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_dynamic___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__sec_stack_dynamic

 axiom sec_stack_dynamic__def_axiom :
  ((System__parameters__sec_stack_dynamic.sec_stack_dynamic ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_env_stack_size___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__parameters__default_env_stack_size

 axiom default_env_stack_size__def_axiom :
  ((System__parameters__default_env_stack_size.default_env_stack_size ) = 8192000)

end

(* Module for defining the value of constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__stack_grows_down___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__stack_grows_down

 axiom stack_grows_down__def_axiom :
  ((System__parameters__stack_grows_down.stack_grows_down ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "c_malloc_linkname" defined at s-parame.ads:119, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__c_malloc_linkname___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__parameters__c_malloc_linkname
 use        Temp___String_Literal_151
 use        Array__Int__Standard__character

 axiom c_malloc_linkname__def_axiom :
  ((System__parameters__c_malloc_linkname.c_malloc_linkname ) = (Standard__string.of_array (Temp___String_Literal_151.temp___String_Literal_151 ()) 1 13))

end

(* Module for defining the value of constant "garbage_collected" defined at s-parame.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__garbage_collected___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__garbage_collected

 axiom garbage_collected__def_axiom :
  ((System__parameters__garbage_collected.garbage_collected ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "single_lock" defined at s-parame.ads:157, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__single_lock___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__single_lock

 axiom single_lock__def_axiom :
  ((System__parameters__single_lock.single_lock ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "no_abort" defined at s-parame.ads:170, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__no_abort___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__no_abort

 axiom no_abort__def_axiom :
  ((System__parameters__no_abort.no_abort ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "runtime_traces" defined at s-parame.ads:190, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__runtime_traces___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__parameters__runtime_traces

 axiom runtime_traces__def_axiom :
  ((System__parameters__runtime_traces.runtime_traces ) = (Boolean.of_int 0))

end

(* Module for defining the value of constant "constraint_error_name" defined at s-stalib.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__constraint_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__constraint_error_name
 use        Temp___String_Literal_152
 use        Array__Int__Standard__character

 axiom constraint_error_name__def_axiom :
  ((System__standard_library__constraint_error_name.constraint_error_name ) = (Standard__string.of_array (Temp___String_Literal_152.temp___String_Literal_152 ()) 1 17))

end

(* Module for defining the value of constant "program_error_name" defined at s-stalib.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__program_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__program_error_name
 use        Temp___String_Literal_153
 use        Array__Int__Standard__character

 axiom program_error_name__def_axiom :
  ((System__standard_library__program_error_name.program_error_name ) = (Standard__string.of_array (Temp___String_Literal_153.temp___String_Literal_153 ()) 1 14))

end

(* Module for defining the value of constant "storage_error_name" defined at s-stalib.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__storage_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__storage_error_name
 use        Temp___String_Literal_154
 use        Array__Int__Standard__character

 axiom storage_error_name__def_axiom :
  ((System__standard_library__storage_error_name.storage_error_name ) = (Standard__string.of_array (Temp___String_Literal_154.temp___String_Literal_154 ()) 1 14))

end

(* Module for defining the value of constant "tasking_error_name" defined at s-stalib.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__tasking_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__tasking_error_name
 use        Temp___String_Literal_155
 use        Array__Int__Standard__character

 axiom tasking_error_name__def_axiom :
  ((System__standard_library__tasking_error_name.tasking_error_name ) = (Standard__string.of_array (Temp___String_Literal_155.temp___String_Literal_155 ()) 1 14))

end

(* Module for defining the value of constant "abort_signal_name" defined at s-stalib.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__abort_signal_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__abort_signal_name
 use        Temp___String_Literal_156
 use        Array__Int__Standard__character

 axiom abort_signal_name__def_axiom :
  ((System__standard_library__abort_signal_name.abort_signal_name ) = (Standard__string.of_array (Temp___String_Literal_156.temp___String_Literal_156 ()) 1 14))

end

(* Module for defining the value of constant "numeric_error_name" defined at s-stalib.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__standard_library__numeric_error_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__standard_library__numeric_error_name
 use        Temp___String_Literal_157
 use        Array__Int__Standard__character

 axiom numeric_error_name__def_axiom :
  ((System__standard_library__numeric_error_name.numeric_error_name ) = (Standard__string.of_array (Temp___String_Literal_157.temp___String_Literal_157 ()) 1 14))

end

(* Module for defining the value of constant "null_tb_entry" defined at s-traent.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__traceback_entries__null_tb_entry___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__null_address
 use        System__traceback_entries__null_tb_entry

 axiom null_tb_entry__def_axiom :
  ((System__traceback_entries__null_tb_entry.null_tb_entry ) = System__null_address.null_address)

end

(* Module for defining the value of constant "null_loc" defined at a-except.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__exceptions__null_loc___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__null_address
 use        Ada__exceptions__null_loc

 axiom null_loc__def_axiom :
  ((Ada__exceptions__null_loc.null_loc ) = System__null_address.null_address)

end

(* Module for defining the value of constant "nul" defined at i-c.ads:74, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__nul

 axiom nul__def_axiom :
  ((Interfaces__c__nul.nul ) = 0)

end

(* Module for defining the value of constant "wide_nul" defined at i-c.ads:111, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__wide_nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__wide_nul

 axiom wide_nul__def_axiom :
  ((Interfaces__c__wide_nul.wide_nul ) = 0)

end

(* Module for defining the value of constant "char16_nul" defined at i-c.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__char16_nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char16_nul

 axiom char16_nul__def_axiom :
  ((Interfaces__c__char16_nul.char16_nul ) = 0)

end

(* Module for defining the value of constant "char32_nul" defined at i-c.ads:191, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c__char32_nul___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Interfaces__c__char32_nul

 axiom char32_nul__def_axiom :
  ((Interfaces__c__char32_nul.char32_nul ) = 0)

end

(* Module for defining the value of constant "target_os" defined at s-oscons.ads:53, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__target_os___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__os_constants__target_os

 axiom target_os__def_axiom :
  ((System__os_constants__target_os.target_os ) = 0)

end

(* Module for defining the value of constant "target_name" defined at s-oscons.ads:59, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__target_name___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__os_constants__target_name
 use        Temp___String_Literal_164
 use        Array__Int__Standard__character

 axiom target_name__def_axiom :
  ((System__os_constants__target_name.target_name ) = (Standard__string.of_array (Temp___String_Literal_164.temp___String_Literal_164 ()) 1 15))

end

(* Module for defining the value of constant "pty_library" defined at s-oscons.ads:164, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__pty_library___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__os_constants__pty_library
 use        Temp___String_Literal_165
 use        Array__Int__Standard__character

 axiom pty_library__def_axiom :
  ((System__os_constants__pty_library.pty_library ) = (Standard__string.of_array (Temp___String_Literal_165.temp___String_Literal_165 ()) 1 0))

end

(* Module for defining the value of constant "thread_blocking_io" defined at s-oscons.ads:270, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__thread_blocking_io___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        System__os_constants__thread_blocking_io

 axiom thread_blocking_io__def_axiom :
  ((System__os_constants__thread_blocking_io.thread_blocking_io ) = (Boolean.of_int 1))

end

(* Module for defining the value of constant "inet_pton_linkname" defined at s-oscons.ads:273, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__os_constants__inet_pton_linkname___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__string
 use        System__os_constants__inet_pton_linkname
 use        Temp___String_Literal_166
 use        Array__Int__Standard__character

 axiom inet_pton_linkname__def_axiom :
  ((System__os_constants__inet_pton_linkname.inet_pton_linkname ) = (Standard__string.of_array (Temp___String_Literal_166.temp___String_Literal_166 ()) 1 16))

end

(* Module for defining the value of constant "immediate" defined at g-socket.ads:433, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__immediate___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__duration
 use        Gnat__sockets__immediate

 axiom immediate__def_axiom :
  ((Gnat__sockets__immediate.immediate ) = (Standard__duration.of_fixed 0))

end

(* Module for defining the value of constant "forever" defined at g-socket.ads:435, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__forever___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__duration
 use        Gnat__sockets__forever

 axiom forever__def_axiom :
  ((Gnat__sockets__forever.forever ) = (Standard__duration.of_fixed 2147483647000000000))

end

(* Module for defining the value of constant "no_socket" defined at g-socket.ads:1168, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__no_socket___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__no_socket

 axiom no_socket__def_axiom :
  ((Gnat__sockets__no_socket.no_socket ) = ( -1 ))

end

(* Module for defining the value of constant "any_port" defined at g-socket.ads:1230, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__any_port___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__any_port

 axiom any_port__def_axiom :
  ((Gnat__sockets__any_port.any_port ) = 0)

end

(* Module for defining the value of constant "no_port" defined at g-socket.ads:1231, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__no_port___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__no_port

 axiom no_port__def_axiom :
  ((Gnat__sockets__no_port.no_port ) = 0)

end

(* Module for defining the value of constant "any_inet_addr" defined at g-socket.ads:1233, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__any_inet_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v6_type
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__any_inet_addr
 use        Gnat__sockets__T18s
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___171
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 axiom any_inet_addr__def_axiom :
  ((Gnat__sockets__any_inet_addr.any_inet_addr ) = { Gnat__sockets__T18s.__split_discrs = { Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T18s.__split_fields = { Gnat__sockets__T18s.rec__gnat__sockets__inet_addr_type__sin_v4 = (Temp___171.temp___171 0); Gnat__sockets__T18s.rec__gnat__sockets__inet_addr_type__sin_v6 = Gnat__sockets__inet_addr_v6_type.dummy }; Gnat__sockets__T18s.attr__constrained = true })

end

(* Module for defining the value of constant "no_inet_addr" defined at g-socket.ads:1235, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__no_inet_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v6_type
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__no_inet_addr
 use        Gnat__sockets__T21s
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___175
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 axiom no_inet_addr__def_axiom :
  ((Gnat__sockets__no_inet_addr.no_inet_addr ) = { Gnat__sockets__T21s.__split_discrs = { Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T21s.__split_fields = { Gnat__sockets__T21s.rec__gnat__sockets__inet_addr_type__sin_v4 = (Temp___175.temp___175 0); Gnat__sockets__T21s.rec__gnat__sockets__inet_addr_type__sin_v6 = Gnat__sockets__inet_addr_v6_type.dummy }; Gnat__sockets__T21s.attr__constrained = true })

end

(* Module for defining the value of constant "broadcast_inet_addr" defined at g-socket.ads:1237, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__broadcast_inet_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v6_type
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__broadcast_inet_addr
 use        Gnat__sockets__T24s
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___179
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 axiom broadcast_inet_addr__def_axiom :
  ((Gnat__sockets__broadcast_inet_addr.broadcast_inet_addr ) = { Gnat__sockets__T24s.__split_discrs = { Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T24s.__split_fields = { Gnat__sockets__T24s.rec__gnat__sockets__inet_addr_type__sin_v4 = (Temp___179.temp___179 255); Gnat__sockets__T24s.rec__gnat__sockets__inet_addr_type__sin_v6 = Gnat__sockets__inet_addr_v6_type.dummy }; Gnat__sockets__T24s.attr__constrained = true })

end

(* Module for defining the value of constant "loopback_inet_addr" defined at g-socket.ads:1239, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__loopback_inet_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v6_type
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__loopback_inet_addr
 use        Gnat__sockets__T27s
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___183
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 axiom loopback_inet_addr__def_axiom :
  ((Gnat__sockets__loopback_inet_addr.loopback_inet_addr ) = { Gnat__sockets__T27s.__split_discrs = { Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T27s.__split_fields = { Gnat__sockets__T27s.rec__gnat__sockets__inet_addr_type__sin_v4 = (Temp___183.temp___183 127 0 0 1); Gnat__sockets__T27s.rec__gnat__sockets__inet_addr_type__sin_v6 = Gnat__sockets__inet_addr_v6_type.dummy }; Gnat__sockets__T27s.attr__constrained = true })

end

(* Module for defining the value of constant "unspecified_group_inet_addr" defined at g-socket.ads:1242, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__unspecified_group_inet_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v6_type
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__unspecified_group_inet_addr
 use        Gnat__sockets__T30s
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___190
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 axiom unspecified_group_inet_addr__def_axiom :
  ((Gnat__sockets__unspecified_group_inet_addr.unspecified_group_inet_addr ) = { Gnat__sockets__T30s.__split_discrs = { Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T30s.__split_fields = { Gnat__sockets__T30s.rec__gnat__sockets__inet_addr_type__sin_v4 = (Temp___190.temp___190 224 0 0 0); Gnat__sockets__T30s.rec__gnat__sockets__inet_addr_type__sin_v6 = Gnat__sockets__inet_addr_v6_type.dummy }; Gnat__sockets__T30s.attr__constrained = true })

end

(* Module for defining the value of constant "all_hosts_group_inet_addr" defined at g-socket.ads:1244, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__all_hosts_group_inet_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v6_type
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__all_hosts_group_inet_addr
 use        Gnat__sockets__T33s
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___197
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 axiom all_hosts_group_inet_addr__def_axiom :
  ((Gnat__sockets__all_hosts_group_inet_addr.all_hosts_group_inet_addr ) = { Gnat__sockets__T33s.__split_discrs = { Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T33s.__split_fields = { Gnat__sockets__T33s.rec__gnat__sockets__inet_addr_type__sin_v4 = (Temp___197.temp___197 224 0 0 1); Gnat__sockets__T33s.rec__gnat__sockets__inet_addr_type__sin_v6 = Gnat__sockets__inet_addr_v6_type.dummy }; Gnat__sockets__T33s.attr__constrained = true })

end

(* Module for defining the value of constant "all_routers_group_inet_addr" defined at g-socket.ads:1246, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__all_routers_group_inet_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__inet_addr_v6_type
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__all_routers_group_inet_addr
 use        Gnat__sockets__T36s
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Temp___204
 use        Array__Int__Gnat__sockets__inet_addr_comp_type

 axiom all_routers_group_inet_addr__def_axiom :
  ((Gnat__sockets__all_routers_group_inet_addr.all_routers_group_inet_addr ) = { Gnat__sockets__T36s.__split_discrs = { Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T36s.__split_fields = { Gnat__sockets__T36s.rec__gnat__sockets__inet_addr_type__sin_v4 = (Temp___204.temp___204 224 0 0 2); Gnat__sockets__T36s.rec__gnat__sockets__inet_addr_type__sin_v6 = Gnat__sockets__inet_addr_v6_type.dummy }; Gnat__sockets__T36s.attr__constrained = true })

end

(* Module for defining the value of constant "no_sock_addr" defined at g-socket.ads:1249, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__no_sock_addr___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__port_type
 use        Gnat__sockets__port_type__rep
 use        Gnat__sockets__no_inet_addr
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__no_sock_addr
 use        Gnat__sockets__T39s__T40s
 use        Gnat__sockets__T39s

 axiom no_sock_addr__def_axiom :
  ((Gnat__sockets__no_sock_addr.no_sock_addr ) = (Gnat__sockets__T39s.to_base { Gnat__sockets__T39s.__split_discrs = { Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family = (Gnat__sockets__family_type__rep.of_rep 0) }; Gnat__sockets__T39s.__split_fields = { Gnat__sockets__T39s.rec__gnat__sockets__sock_addr_type__addr = (Gnat__sockets__T39s__T40s.of_base Gnat__sockets__no_inet_addr.no_inet_addr); Gnat__sockets__T39s.rec__gnat__sockets__sock_addr_type__port = (Gnat__sockets__port_type__rep.of_rep 0) }; Gnat__sockets__T39s.attr__constrained = true }))

end

(* Module for defining the value of constant "no_request_flag" defined at g-socket.ads:1278, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__no_request_flag___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8
 use        Gnat__sockets__no_request_flag

 axiom no_request_flag__def_axiom :
  ((Gnat__sockets__no_request_flag.no_request_flag ) = (BV8.of_int 0))

end

(* Module for defining the value of constant "process_out_of_band_data" defined at g-socket.ads:1279, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__process_out_of_band_data___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8
 use        Gnat__sockets__process_out_of_band_data

 axiom process_out_of_band_data__def_axiom :
  ((Gnat__sockets__process_out_of_band_data.process_out_of_band_data ) = (BV8.of_int 1))

end

(* Module for defining the value of constant "peek_at_incoming_data" defined at g-socket.ads:1280, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__peek_at_incoming_data___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8
 use        Gnat__sockets__peek_at_incoming_data

 axiom peek_at_incoming_data__def_axiom :
  ((Gnat__sockets__peek_at_incoming_data.peek_at_incoming_data ) = (BV8.of_int 2))

end

(* Module for defining the value of constant "wait_for_a_full_reception" defined at g-socket.ads:1281, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__wait_for_a_full_reception___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8
 use        Gnat__sockets__wait_for_a_full_reception

 axiom wait_for_a_full_reception__def_axiom :
  ((Gnat__sockets__wait_for_a_full_reception.wait_for_a_full_reception ) = (BV8.of_int 4))

end

(* Module for defining the value of constant "send_end_of_record" defined at g-socket.ads:1282, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Gnat__sockets__send_end_of_record___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".BV8
 use        Gnat__sockets__send_end_of_record

 axiom send_end_of_record__def_axiom :
  ((Gnat__sockets__send_end_of_record.send_end_of_record ) = (BV8.of_int 8))

end

(* Module for defining the value of constant "eof" defined at i-cstrea.ads:56, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__eof___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iofbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iofbf___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iolbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iolbf___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "ionbf" defined at i-cstrea.ads:61, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__ionbf___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "l_tmpnam" defined at i-cstrea.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__l_tmpnam___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_cur" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_cur___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_end" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_end___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_set" defined at i-cstrea.ads:69, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_set___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "max_path_len" defined at i-cstrea.ads:270, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__max_path_len___axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "null_stream" defined at i-cstrea.ads:313, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__null_stream___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__null_address
 use        Interfaces__c_streams__null_stream

 axiom null_stream__def_axiom :
  ((Interfaces__c_streams__null_stream.null_stream ) = System__null_address.null_address)

end

(* Module for defining the value of constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_hex___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_hex

 axiom wcem_hex__def_axiom :
  ((System__wch_con__wcem_hex.wcem_hex ) = 1)

end

(* Module for defining the value of constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_upper___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_upper

 axiom wcem_upper__def_axiom :
  ((System__wch_con__wcem_upper.wcem_upper ) = 2)

end

(* Module for defining the value of constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_shift_jis___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_shift_jis

 axiom wcem_shift_jis__def_axiom :
  ((System__wch_con__wcem_shift_jis.wcem_shift_jis ) = 3)

end

(* Module for defining the value of constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_euc___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_euc

 axiom wcem_euc__def_axiom :
  ((System__wch_con__wcem_euc.wcem_euc ) = 4)

end

(* Module for defining the value of constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_utf8___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_utf8

 axiom wcem_utf8__def_axiom :
  ((System__wch_con__wcem_utf8.wcem_utf8 ) = 5)

end

(* Module for defining the value of constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_brackets___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wcem_brackets

 axiom wcem_brackets__def_axiom :
  ((System__wch_con__wcem_brackets.wcem_brackets ) = 6)

end

(* Module for defining the value of constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_encoding_letters___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_encoding_letters
 use        Array__Int__Standard__character
 use        System__wch_con__wc_encoding_letters__aggregate_def
 use        Array__Int__Standard__character

 axiom wc_encoding_letters__def_axiom :
  ((System__wch_con__wc_encoding_letters.wc_encoding_letters ) = (System__wch_con__wc_encoding_letters__aggregate_def.system__wch_con__wc_encoding_letters__aggregate_def 104 117 115 101 56 98))

end

(* Module for defining the value of constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_longest_sequences___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        System__wch_con__wc_longest_sequences
 use        Array__Int__Standard__natural
 use        System__wch_con__wc_longest_sequences__aggregate_def
 use        Array__Int__Standard__natural

 axiom wc_longest_sequences__def_axiom :
  ((System__wch_con__wc_longest_sequences.wc_longest_sequences ) = (System__wch_con__wc_longest_sequences__aggregate_def.system__wch_con__wc_longest_sequences__aggregate_def 5 2 2 2 6 12))

end

(* Module for defining the value of constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__unbounded___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Ada__text_io__unbounded

 axiom unbounded__def_axiom :
  ((Ada__text_io__unbounded.unbounded ) = 0)

end

(* Module for defining the value of constant "http_port" defined at network_ns.ads:9, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Network_ns__http_port___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Network_ns__http_port

 axiom http_port__def_axiom :
  ((Network_ns__http_port.http_port ) = 80)

end

(* Module for defining the value of constant "max_cxns" defined at network_ns.ads:10, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Network_ns__max_cxns___axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Network_ns__max_cxns

 axiom max_cxns__def_axiom :
  ((Network_ns__max_cxns.max_cxns ) = 16)

end

(* Module for declaring a program function (and possibly an axiom) for "Olt" defined at system.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Olt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Olt

 val olt #"system.ads" 77 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__Olt.olt left right)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ole" defined at system.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ole___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ole

 val ole #"system.ads" 78 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__Ole.ole left right)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "Ogt" defined at system.ads:79, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Ogt___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Ogt

 val ogt #"system.ads" 79 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__Ogt.ogt left right)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oge" defined at system.ads:80, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oge___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oge

 val oge #"system.ads" 80 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__Oge.oge left right)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at system.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__Oeq___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__Oeq

 val oeq #"system.ads" 81 0 0# 
   (left : BV32.t) (right : BV32.t) : bool
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__Oeq.oeq left right)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__default_stack_size___axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type___axiom
 use        System__parameters__default_stack_size

 val default_stack_size #"s-parame.ads" 81 0 0# 
   (__void_param : unit) : int
  requires { #"s-parame.ads" 61 0 0# true }
  ensures { #"s-parame.ads" 61 0 0# ( ( (result = (System__parameters__default_stack_size.default_stack_size ())) /\ true ) /\ (System__parameters__size_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom default_stack_size__post_axiom :
  (forall __void_param #"s-parame.ads" 81 0 0#  : unit [(System__parameters__default_stack_size.default_stack_size __void_param)].
   ( true -> (let result = (System__parameters__default_stack_size.default_stack_size __void_param) in (
    (System__parameters__size_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__minimum_stack_size___axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type___axiom
 use        System__parameters__minimum_stack_size

 val minimum_stack_size #"s-parame.ads" 84 0 0# 
   (__void_param : unit) : int
  requires { #"s-parame.ads" 61 0 0# true }
  ensures { #"s-parame.ads" 61 0 0# ( ( (result = (System__parameters__minimum_stack_size.minimum_stack_size ())) /\ true ) /\ (System__parameters__size_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom minimum_stack_size__post_axiom :
  (forall __void_param #"s-parame.ads" 84 0 0#  : unit [(System__parameters__minimum_stack_size.minimum_stack_size __void_param)].
   ( true -> (let result = (System__parameters__minimum_stack_size.minimum_stack_size __void_param) in (
    (System__parameters__size_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__parameters__adjust_storage_size___axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type___axiom
 use        System__parameters__adjust_storage_size

 val adjust_storage_size #"s-parame.ads" 87 0 0# 
   (size : int) : int
  requires { #"s-parame.ads" 61 0 0# true }
  ensures { #"s-parame.ads" 61 0 0# ( ( (result = (System__parameters__adjust_storage_size.adjust_storage_size size)) /\ true ) /\ (System__parameters__size_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom adjust_storage_size__post_axiom :
  (forall size #"s-parame.ads" 87 0 0#  : int [(System__parameters__adjust_storage_size.adjust_storage_size size)].
   ( (System__parameters__size_type___axiom.dynamic_invariant size True True True) -> (let result = (System__parameters__adjust_storage_size.adjust_storage_size size) in (
    (System__parameters__size_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "abort_undefer_direct" defined at s-stalib.ads:254, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__standard_library__abort_undefer_direct___axiom
 use import "_gnatprove_standard".Main

 val abort_undefer_direct #"s-stalib.ads" 254 0 0# 
   (__void_param : unit) : unit
  requires { #"s-stalib.ads" 254 0 0# true }
  ensures { #"s-stalib.ads" 254 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "adafinal" defined at s-stalib.ads:259, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__standard_library__adafinal___axiom
 use import "_gnatprove_standard".Main

 val adafinal #"s-stalib.ads" 259 0 0# 
   (__void_param : unit) : unit
  requires { #"s-stalib.ads" 259 0 0# true }
  ensures { #"s-stalib.ads" 259 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "pc_for" defined at s-traent.ads:58, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__traceback_entries__pc_for___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__traceback_entries__traceback_entry
 use        System__traceback_entries__pc_for

 val pc_for #"s-traent.ads" 58 0 0# 
   (tb_entry : BV32.t) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__traceback_entries__pc_for.pc_for tb_entry)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom pc_for__post_axiom :
  (forall tb_entry #"s-traent.ads" 58 0 0#  : BV32.t [(System__traceback_entries__pc_for.pc_for tb_entry)].
   ( (if (( True \/ (BV32.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
    (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last tb_entry)) else true) -> (let result = (System__traceback_entries__pc_for.pc_for tb_entry) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "tb_entry_for" defined at s-traent.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__traceback_entries__tb_entry_for___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__traceback_entries__traceback_entry
 use        System__traceback_entries__tb_entry_for

 val tb_entry_for #"s-traent.ads" 63 0 0# 
   (pc : BV32.t) : BV32.t
  requires { #"s-traent.ads" 50 0 0# true }
  ensures { #"s-traent.ads" 50 0 0# ( ( (result = (System__traceback_entries__tb_entry_for.tb_entry_for pc)) /\ true ) /\ (if (( True \/ (BV32.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
   (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last result)) else true) ) }
 
 axiom tb_entry_for__post_axiom :
  (forall pc #"s-traent.ads" 63 0 0#  : BV32.t [(System__traceback_entries__tb_entry_for.tb_entry_for pc)].
   ( (System__address___axiom.dynamic_invariant pc True True True) -> (let result = (System__traceback_entries__tb_entry_for.tb_entry_for pc) in (
    (if (( True \/ (BV32.ule System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last) )) then (
     (System__traceback_entries__traceback_entry.dynamic_property System__traceback_entries__traceback_entry.first System__traceback_entries__traceback_entry.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name" defined at a-except.ads:70, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__exception_name

 val exception_name #"a-except.ads" 70 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__exception_name.exception_name id)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name__post_axiom :
  (forall id #"a-except.ads" 70 0 0#  : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__exception_name.exception_name id)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__exception_name.exception_name id) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name__2" defined at a-except.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_name__2

 val exception_name__2 #"a-except.ads" 72 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__exception_name__2.exception_name__2 x)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name__2__post_axiom :
  (forall x #"a-except.ads" 72 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_name__2.exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_name__2.exception_name__2 x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_exception_name" defined at a-except.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_exception_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__wide_exception_name

 val wide_exception_name #"a-except.ads" 74 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_string.wide_string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__wide_exception_name.wide_exception_name id)) /\ true ) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_exception_name__post_axiom :
  (forall id #"a-except.ads" 75 0 0#  : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__wide_exception_name.wide_exception_name id)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__wide_exception_name.wide_exception_name id) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_exception_name__2" defined at a-except.ads:78, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_exception_name__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__wide_exception_name__2

 val wide_exception_name__2 #"a-except.ads" 78 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_string.wide_string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x)) /\ true ) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_exception_name__2__post_axiom :
  (forall x #"a-except.ads" 79 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__wide_exception_name__2.wide_exception_name__2 x) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_wide_exception_name" defined at a-except.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_wide_exception_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__wide_wide_exception_name

 val wide_wide_exception_name #"a-except.ads" 82 0 0# 
   (id : Ada__exceptions__exception_id.exception_id) : Standard__wide_wide_string.wide_wide_string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id)) /\ true ) /\ (Standard__wide_wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_wide_exception_name__post_axiom :
  (forall id #"a-except.ads" 83 0 0#  : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant id True True True) -> (let result = (Ada__exceptions__wide_wide_exception_name.wide_wide_exception_name id) in (
    (Standard__wide_wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "wide_wide_exception_name__2" defined at a-except.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__wide_wide_exception_name__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__wide_wide_exception_name__2

 val wide_wide_exception_name__2 #"a-except.ads" 86 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__wide_wide_string.wide_wide_string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x)) /\ true ) /\ (Standard__wide_wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom wide_wide_exception_name__2__post_axiom :
  (forall x #"a-except.ads" 87 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__wide_wide_exception_name__2.wide_wide_exception_name__2 x) in (
    (Standard__wide_wide_string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "raise_exception" defined at a-except.ads:90, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_exception___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 val raise_exception #"a-except.ads" 90 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# false }
 
 namespace No_Return
  val raise_exception #"a-except.ads" 90 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
   requires { #"system.ads" 1 0 0# false }
   ensures { #"system.ads" 1 0 0# false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "exception_message" defined at a-except.ads:94, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_message___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_message

 val exception_message #"a-except.ads" 94 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__exception_message.exception_message x)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_message__post_axiom :
  (forall x #"a-except.ads" 94 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_message.exception_message x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_message.exception_message x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence" defined at a-except.ads:96, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence #"a-except.ads" 96 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { #"a-except.ads" 286 0 0# true }
  ensures { #"a-except.ads" 286 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "exception_identity" defined at a-except.ads:102, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_identity___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_identity

 val exception_identity #"a-except.ads" 102 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Ada__exceptions__exception_id.exception_id
  requires { #"a-except.ads" 58 0 0# true }
  ensures { #"a-except.ads" 58 0 0# ( ( (result = (Ada__exceptions__exception_identity.exception_identity x)) /\ true ) /\ (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_identity__post_axiom :
  (forall x #"a-except.ads" 102 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_identity.exception_identity x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_identity.exception_identity x) in (
    (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_information" defined at a-except.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_information___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_information

 val exception_information #"a-except.ads" 104 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__exception_information.exception_information x)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_information__post_axiom :
  (forall x #"a-except.ads" 104 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_information.exception_information x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_information.exception_information x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "save_occurrence" defined at a-except.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__save_occurrence___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom

 val save_occurrence #"a-except.ads" 123 0 0# 
   (target__split_fields : Ada__exceptions__exception_occurrence.__split_fields__ref) (source : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { #"a-except.ads" 286 0 0# true }
  ensures { #"a-except.ads" 286 0 0# (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant { Ada__exceptions__exception_occurrence.__split_fields = target__split_fields.Ada__exceptions__exception_occurrence.__split_fields__content } True True True) }
  writes {target__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "eid_to_string" defined at a-except.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__eid_to_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__eid_to_string

 val eid_to_string #"a-except.ads" 169 0 0# 
   (x : Ada__exceptions__exception_id.exception_id) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__eid_to_string.eid_to_string x)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom eid_to_string__post_axiom :
  (forall x #"a-except.ads" 169 0 0#  : Ada__exceptions__exception_id.exception_id [(Ada__exceptions__eid_to_string.eid_to_string x)].
   ( (Ada__exceptions__exception_id___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__eid_to_string.eid_to_string x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "string_to_eid" defined at a-except.ads:170, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__string_to_eid___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_id
 use        Ada__exceptions__exception_id___axiom
 use        Ada__exceptions__string_to_eid

 val string_to_eid #"a-except.ads" 170 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_id.exception_id
  requires { #"a-except.ads" 58 0 0# true }
  ensures { #"a-except.ads" 58 0 0# ( ( (result = (Ada__exceptions__string_to_eid.string_to_eid s)) /\ true ) /\ (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True) ) }
 
 axiom string_to_eid__post_axiom :
  (forall s #"a-except.ads" 170 0 0#  : Standard__string.string [(Ada__exceptions__string_to_eid.string_to_eid s)].
   ( (Standard__string___axiom.dynamic_invariant s True True True) -> (let result = (Ada__exceptions__string_to_eid.string_to_eid s) in (
    (Ada__exceptions__exception_id___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "exception_name_simple" defined at a-except.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__exception_name_simple___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__exception_name_simple

 val exception_name_simple #"a-except.ads" 180 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__exception_name_simple.exception_name_simple x)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom exception_name_simple__post_axiom :
  (forall x #"a-except.ads" 180 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__exception_name_simple.exception_name_simple x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__exception_name_simple.exception_name_simple x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "raise_exception_always" defined at a-except.ads:188, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_exception_always___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__exceptions__exception_id

 val raise_exception_always #"a-except.ads" 188 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# false }
 
 namespace No_Return
  val raise_exception_always #"a-except.ads" 188 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (message : Standard__string.string) : unit
   requires { #"system.ads" 1 0 0# false }
   ensures { #"system.ads" 1 0 0# false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "raise_from_signal_handler" defined at a-except.ads:197, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_from_signal_handler___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Ada__exceptions__exception_id

 val raise_from_signal_handler #"a-except.ads" 197 0 0# 
   (e : Ada__exceptions__exception_id.exception_id) (m : BV32.t) : unit
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# false }
 
 namespace No_Return
  val raise_from_signal_handler #"a-except.ads" 197 0 0# 
    (e : Ada__exceptions__exception_id.exception_id) (m : BV32.t) : unit
   requires { #"system.ads" 108 0 0# false }
   ensures { #"system.ads" 108 0 0# false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "raise_from_controlled_operation" defined at a-except.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__raise_from_controlled_operation___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val raise_from_controlled_operation #"a-except.ads" 215 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { #"a-except.ads" 286 0 0# true }
  ensures { #"a-except.ads" 286 0 0# false }
 
 namespace No_Return
  val raise_from_controlled_operation #"a-except.ads" 215 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { #"a-except.ads" 286 0 0# false }
   ensures { #"a-except.ads" 286 0 0# false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_library_exception_if_any" defined at a-except.ads:224, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_library_exception_if_any___axiom
 use import "_gnatprove_standard".Main

 val reraise_library_exception_if_any #"a-except.ads" 224 0 0# 
   (__void_param : unit) : unit
  requires { #"a-except.ads" 224 0 0# true }
  ensures { #"a-except.ads" 224 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence_always" defined at a-except.ads:231, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence_always___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence_always #"a-except.ads" 231 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { #"a-except.ads" 286 0 0# true }
  ensures { #"a-except.ads" 286 0 0# false }
 
 namespace No_Return
  val reraise_occurrence_always #"a-except.ads" 231 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { #"a-except.ads" 286 0 0# false }
   ensures { #"a-except.ads" 286 0 0# false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "reraise_occurrence_no_defer" defined at a-except.ads:238, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__reraise_occurrence_no_defer___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence

 val reraise_occurrence_no_defer #"a-except.ads" 238 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
  requires { #"a-except.ads" 286 0 0# true }
  ensures { #"a-except.ads" 286 0 0# false }
 
 namespace No_Return
  val reraise_occurrence_no_defer #"a-except.ads" 238 0 0# 
    (x : Ada__exceptions__exception_occurrence.exception_occurrence) : unit
   requires { #"a-except.ads" 286 0 0# false }
   ensures { #"a-except.ads" 286 0 0# false }

 end

end

(* Module for declaring a program function (and possibly an axiom) for "triggered_by_abort" defined at a-except.ads:245, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__triggered_by_abort___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__triggered_by_abort

 val triggered_by_abort #"a-except.ads" 245 0 0# 
   (__void_param : unit) : bool
  requires { #"a-except.ads" 245 0 0# true }
  ensures { #"a-except.ads" 245 0 0# ( ( (result = (Ada__exceptions__triggered_by_abort.triggered_by_abort ())) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "poll" defined at a-except.ads:270, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__poll___axiom
 use import "_gnatprove_standard".Main

 val poll #"a-except.ads" 270 0 0# 
   (__void_param : unit) : unit
  requires { #"a-except.ads" 270 0 0# true }
  ensures { #"a-except.ads" 270 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "Oeq" defined at a-except.ads:319, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__Oeq___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__Oeq

 val oeq #"a-except.ads" 319 0 0# 
   (left : Ada__exceptions__exception_occurrence.exception_occurrence) (right : Ada__exceptions__exception_occurrence.exception_occurrence) : bool
  requires { #"a-except.ads" 286 0 0# true }
  ensures { #"a-except.ads" 286 0 0# ( ( (result = (Ada__exceptions__Oeq.oeq left right)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "get_exception_machine_occurrence" defined at a-except.ads:325, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__get_exception_machine_occurrence___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__get_exception_machine_occurrence

 val get_exception_machine_occurrence #"a-except.ads" 325 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_exception_machine_occurrence__post_axiom :
  (forall x #"a-except.ads" 326 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__get_exception_machine_occurrence.get_exception_machine_occurrence x) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "eo_to_string" defined at a-except.ads:334, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__eo_to_string___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__eo_to_string

 val eo_to_string #"a-except.ads" 334 0 0# 
   (x : Ada__exceptions__exception_occurrence.exception_occurrence) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__exceptions__eo_to_string.eo_to_string x)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom eo_to_string__post_axiom :
  (forall x #"a-except.ads" 334 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Ada__exceptions__eo_to_string.eo_to_string x)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant x True True True) -> (let result = (Ada__exceptions__eo_to_string.eo_to_string x) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "string_to_eo" defined at a-except.ads:335, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__exceptions__string_to_eo___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Ada__exceptions__string_to_eo

 val string_to_eo #"a-except.ads" 335 0 0# 
   (s : Standard__string.string) : Ada__exceptions__exception_occurrence.exception_occurrence
  requires { #"a-except.ads" 286 0 0# true }
  ensures { #"a-except.ads" 286 0 0# ( ( (result = (Ada__exceptions__string_to_eo.string_to_eo s)) /\ true ) /\ (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant result True False True) ) }
 
 axiom string_to_eo__post_axiom :
  (forall s #"a-except.ads" 335 0 0#  : Standard__string.string [(Ada__exceptions__string_to_eo.string_to_eo s)].
   ( (Standard__string___axiom.dynamic_invariant s True True True) -> (let result = (Ada__exceptions__string_to_eo.string_to_eo s) in (
    (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "read" defined at a-stream.ads:57, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__streams__read___axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type
 use        Ada__streams__root_stream_type___axiom
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__Tstream_element_offsetB__rep
 use        Ada__streams__stream_element_offset
 use        Ada__streams__stream_element_offset___axiom
 use        Ada__streams__stream_element_array
 use        Array__Int__Ada__streams__stream_element
 use        Array__Int__Ada__streams__stream_element
 use        Array__Int__Ada__streams__stream_element
 use        Array__Int__Ada__streams__stream_element

 val read #"a-stream.ads" 57 0 0# 
   (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Array__Int__Ada__streams__stream_element.map__ref) (item__first : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (item__last : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (last : int__ref) : unit
  requires { #"a-stream.ads" 44 0 0# true }
  ensures { #"a-stream.ads" 44 0 0# ( ( (Ada__streams__root_stream_type___axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) /\ (if (True) then (
   true) else (
   (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last (Ada__streams__Tstream_element_offsetB__rep.to_rep item__first) (Ada__streams__Tstream_element_offsetB__rep.to_rep item__last)))) ) /\ (Ada__streams__stream_element_offset___axiom.dynamic_invariant last.int__content True True True) ) }
  writes {stream__split_fields, item, last}
 
 namespace Dispatch
  predicate read__specific_post #"a-stream.ads" 60 0 0# 
    (attr__tag : int) (ada__streams__read__stream__fields : Ada__streams__root_stream_type.__split_fields) (stream__attr__tag : int) (ada__streams__read__item : Array__Int__Ada__streams__stream_element.map) (item__first : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (item__last : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (ada__streams__read__last : int) (ada__streams__read__stream__old__fields : Ada__streams__root_stream_type.__split_fields) (ada__streams__read__item__old : Array__Int__Ada__streams__stream_element.map) (ada__streams__read__last__old : int) 
  
  val read #"a-stream.ads" 57 0 0# 
    (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Array__Int__Ada__streams__stream_element.map__ref) (item__first : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (item__last : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (last : int__ref) : unit
   requires { #"a-stream.ads" 44 0 0# true }
   ensures { #"a-stream.ads" 44 0 0# ( ( true /\ ( ( (Ada__streams__root_stream_type___axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) /\ (if (True) then (
    true) else (
    (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last (Ada__streams__Tstream_element_offsetB__rep.to_rep item__first) (Ada__streams__Tstream_element_offsetB__rep.to_rep item__last)))) ) /\ (Ada__streams__stream_element_offset___axiom.dynamic_invariant last.int__content True True True) ) ) /\ (read__specific_post stream__attr__tag stream__split_fields.Ada__streams__root_stream_type.__split_fields__content stream__attr__tag item.Array__Int__Ada__streams__stream_element.map__content item__first item__last last.int__content (old stream__split_fields.Ada__streams__root_stream_type.__split_fields__content ) (old item.Array__Int__Ada__streams__stream_element.map__content ) (old last.int__content )) ) }
   writes {stream__split_fields, item, last}

 end
 
 axiom ada__streams__root_stream_type__compat_axiom :
  (forall ada__streams__read__stream__fields #"a-stream.ads" 58 0 0#  ada__streams__read__stream__old__fields #"a-stream.ads" 58 0 0#  : Ada__streams__root_stream_type.__split_fields.
  (forall stream__attr__tag #"a-stream.ads" 58 0 0#  ada__streams__read__last #"a-stream.ads" 60 0 0#  ada__streams__read__last__old #"a-stream.ads" 60 0 0#  : int.
  (forall ada__streams__read__item #"a-stream.ads" 59 0 0#  ada__streams__read__item__old #"a-stream.ads" 59 0 0#  : Array__Int__Ada__streams__stream_element.map.
  (forall item__first #"a-stream.ads" 59 0 0#  item__last #"a-stream.ads" 59 0 0#  : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB [(Dispatch.read__specific_post Ada__streams__root_stream_type.__tag ada__streams__read__stream__fields stream__attr__tag ada__streams__read__item item__first item__last ada__streams__read__last ada__streams__read__stream__old__fields ada__streams__read__item__old ada__streams__read__last__old)].
   ( (Dispatch.read__specific_post Ada__streams__root_stream_type.__tag ada__streams__read__stream__fields stream__attr__tag ada__streams__read__item item__first item__last ada__streams__read__last ada__streams__read__stream__old__fields ada__streams__read__item__old ada__streams__read__last__old) -> (let temp___stream_420 = { Ada__streams__root_stream_type.__split_fields = ada__streams__read__stream__old__fields; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } in (
   (let temp___stream_420 = { Ada__streams__root_stream_type.__split_fields = ada__streams__read__stream__fields; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } in (
    true))
   ))
    )))))

end

(* Module for declaring a program function (and possibly an axiom) for "write" defined at a-stream.ads:63, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__streams__write___axiom
 use import "_gnatprove_standard".Main
 use        Ada__streams__root_stream_type
 use        Ada__streams__root_stream_type___axiom
 use        Ada__streams__stream_element_array

 val write #"a-stream.ads" 63 0 0# 
   (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Ada__streams__stream_element_array.stream_element_array) : unit
  requires { #"a-stream.ads" 54 0 0# true }
  ensures { #"a-stream.ads" 54 0 0# (Ada__streams__root_stream_type___axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) }
  writes {stream__split_fields}
 
 namespace Dispatch
  predicate write__specific_post #"a-stream.ads" 64 0 0# 
    (attr__tag : int) (ada__streams__write__stream__fields : Ada__streams__root_stream_type.__split_fields) (stream__attr__tag : int) (item : Ada__streams__stream_element_array.stream_element_array) (ada__streams__write__stream__old__fields : Ada__streams__root_stream_type.__split_fields) 
  
  val write #"a-stream.ads" 63 0 0# 
    (stream__split_fields : Ada__streams__root_stream_type.__split_fields__ref) (stream__attr__tag : int) (item : Ada__streams__stream_element_array.stream_element_array) : unit
   requires { #"a-stream.ads" 54 0 0# true }
   ensures { #"a-stream.ads" 54 0 0# ( ( true /\ (Ada__streams__root_stream_type___axiom.dynamic_invariant { Ada__streams__root_stream_type.__split_fields = stream__split_fields.Ada__streams__root_stream_type.__split_fields__content; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } True True True) ) /\ (write__specific_post stream__attr__tag stream__split_fields.Ada__streams__root_stream_type.__split_fields__content stream__attr__tag item (old stream__split_fields.Ada__streams__root_stream_type.__split_fields__content )) ) }
   writes {stream__split_fields}

 end
 
 axiom ada__streams__root_stream_type__compat_axiom :
  (forall ada__streams__write__stream__fields #"a-stream.ads" 64 0 0#  ada__streams__write__stream__old__fields #"a-stream.ads" 64 0 0#  : Ada__streams__root_stream_type.__split_fields.
  (forall stream__attr__tag #"a-stream.ads" 64 0 0#  : int.
  (forall item #"a-stream.ads" 65 0 0#  : Ada__streams__stream_element_array.stream_element_array [(Dispatch.write__specific_post Ada__streams__root_stream_type.__tag ada__streams__write__stream__fields stream__attr__tag item ada__streams__write__stream__old__fields)].
   ( (Dispatch.write__specific_post Ada__streams__root_stream_type.__tag ada__streams__write__stream__fields stream__attr__tag item ada__streams__write__stream__old__fields) -> (let temp___stream_422 = { Ada__streams__root_stream_type.__split_fields = ada__streams__write__stream__old__fields; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } in (
   (let temp___stream_422 = { Ada__streams__root_stream_type.__split_fields = ada__streams__write__stream__fields; Ada__streams__root_stream_type.attr__tag = stream__attr__tag } in (
    true))
   ))
    ))))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c" defined at i-c.ads:76, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        Interfaces__c__char___axiom
 use        Interfaces__c__to_c

 val to_c #"i-c.ads" 76 0 0# 
   (item : int) : int
  requires { #"i-c.ads" 72 0 0# true }
  ensures { #"i-c.ads" 72 0 0# ( ( (result = (Interfaces__c__to_c.to_c item)) /\ true ) /\ (Interfaces__c__char___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__post_axiom :
  (forall item #"i-c.ads" 76 0 0#  : int [(Interfaces__c__to_c.to_c item)].
   ( (Standard__character___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c.to_c item) in (
    (Interfaces__c__char___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada" defined at i-c.ads:77, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        Interfaces__c__char___axiom
 use        Interfaces__c__to_ada

 val to_ada #"i-c.ads" 77 0 0# 
   (item : int) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada.to_ada item)) /\ true ) /\ (Standard__character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__post_axiom :
  (forall item #"i-c.ads" 77 0 0#  : int [(Interfaces__c__to_ada.to_ada item)].
   ( (Interfaces__c__char___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada.to_ada item) in (
    (Standard__character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated" defined at i-c.ads:82, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char_array
 use        Interfaces__c__is_nul_terminated

 val is_nul_terminated #"i-c.ads" 82 0 0# 
   (item : Interfaces__c__char_array.char_array) : bool
  requires { #"i-c.ads" 79 0 0# true }
  ensures { #"i-c.ads" 79 0 0# ( ( (result = (Interfaces__c__is_nul_terminated.is_nul_terminated item)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__2" defined at i-c.ads:84, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Interfaces__c__char_array
 use        Interfaces__c__char_array___axiom
 use        Interfaces__c__to_c__2

 val to_c__2 #"i-c.ads" 84 0 0# 
   (item : Standard__string.string) (append_nul : bool) : Interfaces__c__char_array.char_array
  requires { #"i-c.ads" 79 0 0# true }
  ensures { #"i-c.ads" 79 0 0# ( ( (result = (Interfaces__c__to_c__2.to_c__2 item append_nul)) /\ true ) /\ (Interfaces__c__char_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__2__post_axiom :
  (forall item #"i-c.ads" 85 0 0#  : Standard__string.string.
  (forall append_nul #"i-c.ads" 86 0 0#  : bool [(Interfaces__c__to_c__2.to_c__2 item append_nul)].
   ( (Standard__string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__2.to_c__2 item append_nul) in (
    (Interfaces__c__char_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__2" defined at i-c.ads:88, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Interfaces__c__char_array
 use        Interfaces__c__char_array___axiom
 use        Interfaces__c__to_ada__2

 val to_ada__2 #"i-c.ads" 88 0 0# 
   (item : Interfaces__c__char_array.char_array) (trim_nul : bool) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada__2.to_ada__2 item trim_nul)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__2__post_axiom :
  (forall item #"i-c.ads" 89 0 0#  : Interfaces__c__char_array.char_array.
  (forall trim_nul #"i-c.ads" 90 0 0#  : bool [(Interfaces__c__to_ada__2.to_ada__2 item trim_nul)].
   ( (Interfaces__c__char_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__2.to_ada__2 item trim_nul) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__3" defined at i-c.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__3___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__char_array
 use        Array__BV32__Interfaces__c__char

 val to_c__3 #"i-c.ads" 92 0 0# 
   (item : Standard__string.string) (target : Array__BV32__Interfaces__c__char.map__ref) (target__first : Interfaces__c__size_t.size_t) (target__last : Interfaces__c__size_t.size_t) (count : BV32.t__ref) (append_nul : bool) : unit
  requires { #"i-c.ads" 96 0 0# true }
  ensures { #"i-c.ads" 96 0 0# ( (if (True) then (
   true) else (
   (Interfaces__c__char_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__size_t__rep.to_rep target__first) (Interfaces__c__size_t__rep.to_rep target__last)))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV32.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__3" defined at i-c.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__3___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__integer__rep
 use        Interfaces__c__char_array
 use        Array__Int__Standard__character

 val to_ada__3 #"i-c.ads" 98 0 0# 
   (item : Interfaces__c__char_array.char_array) (target : Array__Int__Standard__character.map__ref) (target__first : Standard__integer.integer) (target__last : Standard__integer.integer) (count : int__ref) (trim_nul : bool) : unit
  requires { #"i-c.ads" 102 0 0# true }
  ensures { #"i-c.ads" 102 0 0# ( (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep target__first) (Standard__integer__rep.to_rep target__last)))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__4" defined at i-c.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character___axiom
 use        Interfaces__c__wchar_t___axiom
 use        Interfaces__c__to_c__4

 val to_c__4 #"i-c.ads" 113 0 0# 
   (item : int) : int
  requires { #"i-c.ads" 108 0 0# true }
  ensures { #"i-c.ads" 108 0 0# ( ( (result = (Interfaces__c__to_c__4.to_c__4 item)) /\ true ) /\ (Interfaces__c__wchar_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__4__post_axiom :
  (forall item #"i-c.ads" 113 0 0#  : int [(Interfaces__c__to_c__4.to_c__4 item)].
   ( (Standard__wide_character___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__4.to_c__4 item) in (
    (Interfaces__c__wchar_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__4" defined at i-c.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character___axiom
 use        Interfaces__c__wchar_t___axiom
 use        Interfaces__c__to_ada__4

 val to_ada__4 #"i-c.ads" 114 0 0# 
   (item : int) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada__4.to_ada__4 item)) /\ true ) /\ (Standard__wide_character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__4__post_axiom :
  (forall item #"i-c.ads" 114 0 0#  : int [(Interfaces__c__to_ada__4.to_ada__4 item)].
   ( (Interfaces__c__wchar_t___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__4.to_ada__4 item) in (
    (Standard__wide_character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated__2" defined at i-c.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated__2___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__wchar_array
 use        Interfaces__c__is_nul_terminated__2

 val is_nul_terminated__2 #"i-c.ads" 118 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) : bool
  requires { #"i-c.ads" 116 0 0# true }
  ensures { #"i-c.ads" 116 0 0# ( ( (result = (Interfaces__c__is_nul_terminated__2.is_nul_terminated__2 item)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__5" defined at i-c.ads:120, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__5___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__wchar_array
 use        Interfaces__c__wchar_array___axiom
 use        Interfaces__c__to_c__5

 val to_c__5 #"i-c.ads" 120 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__wchar_array.wchar_array
  requires { #"i-c.ads" 116 0 0# true }
  ensures { #"i-c.ads" 116 0 0# ( ( (result = (Interfaces__c__to_c__5.to_c__5 item append_nul)) /\ true ) /\ (Interfaces__c__wchar_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__5__post_axiom :
  (forall item #"i-c.ads" 121 0 0#  : Standard__wide_string.wide_string.
  (forall append_nul #"i-c.ads" 122 0 0#  : bool [(Interfaces__c__to_c__5.to_c__5 item append_nul)].
   ( (Standard__wide_string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__5.to_c__5 item append_nul) in (
    (Interfaces__c__wchar_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__5" defined at i-c.ads:124, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__5___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__wchar_array
 use        Interfaces__c__wchar_array___axiom
 use        Interfaces__c__to_ada__5

 val to_ada__5 #"i-c.ads" 124 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) (trim_nul : bool) : Standard__wide_string.wide_string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada__5.to_ada__5 item trim_nul)) /\ true ) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__5__post_axiom :
  (forall item #"i-c.ads" 125 0 0#  : Interfaces__c__wchar_array.wchar_array.
  (forall trim_nul #"i-c.ads" 126 0 0#  : bool [(Interfaces__c__to_ada__5.to_ada__5 item trim_nul)].
   ( (Interfaces__c__wchar_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__5.to_ada__5 item trim_nul) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__6" defined at i-c.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__6___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__wide_string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__wchar_array
 use        Array__BV32__Interfaces__c__wchar_t

 val to_c__6 #"i-c.ads" 128 0 0# 
   (item : Standard__wide_string.wide_string) (target : Array__BV32__Interfaces__c__wchar_t.map__ref) (target__first : Interfaces__c__size_t.size_t) (target__last : Interfaces__c__size_t.size_t) (count : BV32.t__ref) (append_nul : bool) : unit
  requires { #"i-c.ads" 132 0 0# true }
  ensures { #"i-c.ads" 132 0 0# ( (if (True) then (
   true) else (
   (Interfaces__c__wchar_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__size_t__rep.to_rep target__first) (Interfaces__c__size_t__rep.to_rep target__last)))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV32.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__6" defined at i-c.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__6___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__integer__rep
 use        Standard__wide_string
 use        Interfaces__c__wchar_array
 use        Array__Int__Standard__wide_character

 val to_ada__6 #"i-c.ads" 134 0 0# 
   (item : Interfaces__c__wchar_array.wchar_array) (target : Array__Int__Standard__wide_character.map__ref) (target__first : Standard__integer.integer) (target__last : Standard__integer.integer) (count : int__ref) (trim_nul : bool) : unit
  requires { #"i-c.ads" 138 0 0# true }
  ensures { #"i-c.ads" 138 0 0# ( (if (True) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep target__first) (Standard__integer__rep.to_rep target__last)))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__7" defined at i-c.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__7___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character___axiom
 use        Interfaces__c__char16_t___axiom
 use        Interfaces__c__to_c__7

 val to_c__7 #"i-c.ads" 152 0 0# 
   (item : int) : int
  requires { #"i-c.ads" 146 0 0# true }
  ensures { #"i-c.ads" 146 0 0# ( ( (result = (Interfaces__c__to_c__7.to_c__7 item)) /\ true ) /\ (Interfaces__c__char16_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__7__post_axiom :
  (forall item #"i-c.ads" 152 0 0#  : int [(Interfaces__c__to_c__7.to_c__7 item)].
   ( (Standard__wide_character___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__7.to_c__7 item) in (
    (Interfaces__c__char16_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__7" defined at i-c.ads:155, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__7___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_character___axiom
 use        Interfaces__c__char16_t___axiom
 use        Interfaces__c__to_ada__7

 val to_ada__7 #"i-c.ads" 155 0 0# 
   (item : int) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada__7.to_ada__7 item)) /\ true ) /\ (Standard__wide_character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__7__post_axiom :
  (forall item #"i-c.ads" 155 0 0#  : int [(Interfaces__c__to_ada__7.to_ada__7 item)].
   ( (Interfaces__c__char16_t___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__7.to_ada__7 item) in (
    (Standard__wide_character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated__3" defined at i-c.ads:161, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated__3___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char16_array
 use        Interfaces__c__is_nul_terminated__3

 val is_nul_terminated__3 #"i-c.ads" 161 0 0# 
   (item : Interfaces__c__char16_array.char16_array) : bool
  requires { #"i-c.ads" 158 0 0# true }
  ensures { #"i-c.ads" 158 0 0# ( ( (result = (Interfaces__c__is_nul_terminated__3.is_nul_terminated__3 item)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__8" defined at i-c.ads:164, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__8___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__char16_array
 use        Interfaces__c__char16_array___axiom
 use        Interfaces__c__to_c__8

 val to_c__8 #"i-c.ads" 164 0 0# 
   (item : Standard__wide_string.wide_string) (append_nul : bool) : Interfaces__c__char16_array.char16_array
  requires { #"i-c.ads" 158 0 0# true }
  ensures { #"i-c.ads" 158 0 0# ( ( (result = (Interfaces__c__to_c__8.to_c__8 item append_nul)) /\ true ) /\ (Interfaces__c__char16_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__8__post_axiom :
  (forall item #"i-c.ads" 165 0 0#  : Standard__wide_string.wide_string.
  (forall append_nul #"i-c.ads" 166 0 0#  : bool [(Interfaces__c__to_c__8.to_c__8 item append_nul)].
   ( (Standard__wide_string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__8.to_c__8 item append_nul) in (
    (Interfaces__c__char16_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__8" defined at i-c.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__8___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_string
 use        Standard__wide_string___axiom
 use        Interfaces__c__char16_array
 use        Interfaces__c__char16_array___axiom
 use        Interfaces__c__to_ada__8

 val to_ada__8 #"i-c.ads" 169 0 0# 
   (item : Interfaces__c__char16_array.char16_array) (trim_nul : bool) : Standard__wide_string.wide_string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada__8.to_ada__8 item trim_nul)) /\ true ) /\ (Standard__wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__8__post_axiom :
  (forall item #"i-c.ads" 170 0 0#  : Interfaces__c__char16_array.char16_array.
  (forall trim_nul #"i-c.ads" 171 0 0#  : bool [(Interfaces__c__to_ada__8.to_ada__8 item trim_nul)].
   ( (Interfaces__c__char16_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__8.to_ada__8 item trim_nul) in (
    (Standard__wide_string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__9" defined at i-c.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__9___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__wide_string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__char16_array
 use        Array__BV32__Interfaces__c__char16_t

 val to_c__9 #"i-c.ads" 174 0 0# 
   (item : Standard__wide_string.wide_string) (target : Array__BV32__Interfaces__c__char16_t.map__ref) (target__first : Interfaces__c__size_t.size_t) (target__last : Interfaces__c__size_t.size_t) (count : BV32.t__ref) (append_nul : bool) : unit
  requires { #"i-c.ads" 178 0 0# true }
  ensures { #"i-c.ads" 178 0 0# ( (if (True) then (
   true) else (
   (Interfaces__c__char16_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__size_t__rep.to_rep target__first) (Interfaces__c__size_t__rep.to_rep target__last)))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV32.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__9" defined at i-c.ads:181, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__9___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__integer__rep
 use        Standard__wide_string
 use        Interfaces__c__char16_array
 use        Array__Int__Standard__wide_character

 val to_ada__9 #"i-c.ads" 181 0 0# 
   (item : Interfaces__c__char16_array.char16_array) (target : Array__Int__Standard__wide_character.map__ref) (target__first : Standard__integer.integer) (target__last : Standard__integer.integer) (count : int__ref) (trim_nul : bool) : unit
  requires { #"i-c.ads" 185 0 0# true }
  ensures { #"i-c.ads" 185 0 0# ( (if (True) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep target__first) (Standard__integer__rep.to_rep target__last)))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__10" defined at i-c.ads:194, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__10___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_character___axiom
 use        Interfaces__c__char32_t___axiom
 use        Interfaces__c__to_c__10

 val to_c__10 #"i-c.ads" 194 0 0# 
   (item : int) : int
  requires { #"i-c.ads" 188 0 0# true }
  ensures { #"i-c.ads" 188 0 0# ( ( (result = (Interfaces__c__to_c__10.to_c__10 item)) /\ true ) /\ (Interfaces__c__char32_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__10__post_axiom :
  (forall item #"i-c.ads" 194 0 0#  : int [(Interfaces__c__to_c__10.to_c__10 item)].
   ( (Standard__wide_wide_character___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__10.to_c__10 item) in (
    (Interfaces__c__char32_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__10" defined at i-c.ads:197, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__10___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_character___axiom
 use        Interfaces__c__char32_t___axiom
 use        Interfaces__c__to_ada__10

 val to_ada__10 #"i-c.ads" 197 0 0# 
   (item : int) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada__10.to_ada__10 item)) /\ true ) /\ (Standard__wide_wide_character___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__10__post_axiom :
  (forall item #"i-c.ads" 197 0 0#  : int [(Interfaces__c__to_ada__10.to_ada__10 item)].
   ( (Interfaces__c__char32_t___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__10.to_ada__10 item) in (
    (Standard__wide_wide_character___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_nul_terminated__4" defined at i-c.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__is_nul_terminated__4___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__char32_array
 use        Interfaces__c__is_nul_terminated__4

 val is_nul_terminated__4 #"i-c.ads" 203 0 0# 
   (item : Interfaces__c__char32_array.char32_array) : bool
  requires { #"i-c.ads" 200 0 0# true }
  ensures { #"i-c.ads" 200 0 0# ( ( (result = (Interfaces__c__is_nul_terminated__4.is_nul_terminated__4 item)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__11" defined at i-c.ads:206, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__11___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Interfaces__c__char32_array
 use        Interfaces__c__char32_array___axiom
 use        Interfaces__c__to_c__11

 val to_c__11 #"i-c.ads" 206 0 0# 
   (item : Standard__wide_wide_string.wide_wide_string) (append_nul : bool) : Interfaces__c__char32_array.char32_array
  requires { #"i-c.ads" 200 0 0# true }
  ensures { #"i-c.ads" 200 0 0# ( ( (result = (Interfaces__c__to_c__11.to_c__11 item append_nul)) /\ true ) /\ (Interfaces__c__char32_array___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__11__post_axiom :
  (forall item #"i-c.ads" 207 0 0#  : Standard__wide_wide_string.wide_wide_string.
  (forall append_nul #"i-c.ads" 208 0 0#  : bool [(Interfaces__c__to_c__11.to_c__11 item append_nul)].
   ( (Standard__wide_wide_string___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_c__11.to_c__11 item append_nul) in (
    (Interfaces__c__char32_array___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__11" defined at i-c.ads:211, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__11___axiom
 use import "_gnatprove_standard".Main
 use        Standard__wide_wide_string
 use        Standard__wide_wide_string___axiom
 use        Interfaces__c__char32_array
 use        Interfaces__c__char32_array___axiom
 use        Interfaces__c__to_ada__11

 val to_ada__11 #"i-c.ads" 211 0 0# 
   (item : Interfaces__c__char32_array.char32_array) (trim_nul : bool) : Standard__wide_wide_string.wide_wide_string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Interfaces__c__to_ada__11.to_ada__11 item trim_nul)) /\ true ) /\ (Standard__wide_wide_string___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_ada__11__post_axiom :
  (forall item #"i-c.ads" 212 0 0#  : Interfaces__c__char32_array.char32_array.
  (forall trim_nul #"i-c.ads" 213 0 0#  : bool [(Interfaces__c__to_ada__11.to_ada__11 item trim_nul)].
   ( (Interfaces__c__char32_array___axiom.dynamic_invariant item True True True) -> (let result = (Interfaces__c__to_ada__11.to_ada__11 item trim_nul) in (
    (Standard__wide_wide_string___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c__12" defined at i-c.ads:216, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_c__12___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__wide_wide_string
 use        Interfaces__c__size_t
 use        Interfaces__c__size_t___axiom
 use        Interfaces__c__size_t__rep
 use        Interfaces__c__char32_array
 use        Array__BV32__Interfaces__c__char32_t

 val to_c__12 #"i-c.ads" 216 0 0# 
   (item : Standard__wide_wide_string.wide_wide_string) (target : Array__BV32__Interfaces__c__char32_t.map__ref) (target__first : Interfaces__c__size_t.size_t) (target__last : Interfaces__c__size_t.size_t) (count : BV32.t__ref) (append_nul : bool) : unit
  requires { #"i-c.ads" 220 0 0# true }
  ensures { #"i-c.ads" 220 0 0# ( (if (True) then (
   true) else (
   (Interfaces__c__char32_array.dynamic_property Interfaces__c__size_t.first Interfaces__c__size_t.last (Interfaces__c__size_t__rep.to_rep target__first) (Interfaces__c__size_t__rep.to_rep target__last)))) /\ (Interfaces__c__size_t___axiom.dynamic_invariant count.BV32.t__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "to_ada__12" defined at i-c.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c__to_ada__12___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__integer__rep
 use        Standard__wide_wide_string
 use        Interfaces__c__char32_array
 use        Array__Int__Standard__wide_wide_character

 val to_ada__12 #"i-c.ads" 223 0 0# 
   (item : Interfaces__c__char32_array.char32_array) (target : Array__Int__Standard__wide_wide_character.map__ref) (target__first : Standard__integer.integer) (target__last : Standard__integer.integer) (count : int__ref) (trim_nul : bool) : unit
  requires { #"i-c.ads" 227 0 0# true }
  ensures { #"i-c.ads" 227 0 0# ( (if (True) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep target__first) (Standard__integer__rep.to_rep target__last)))) /\ (Standard__natural___axiom.dynamic_invariant count.int__content True True True) ) }
  writes {target, count}

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at s-stoele.ads:76, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Oadd___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__storage_elements__storage_offset___axiom
 use        System__storage_elements__Oadd

 val oadd #"s-stoele.ads" 76 0 0# 
   (left : BV32.t) (right : int) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__storage_elements__Oadd.oadd left right)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall left #"s-stoele.ads" 76 0 0#  : BV32.t.
  (forall right #"s-stoele.ads" 76 0 0#  : int [(System__storage_elements__Oadd.oadd left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__storage_elements__storage_offset___axiom.dynamic_invariant right True True True) ) -> (let result = (System__storage_elements__Oadd.oadd left right) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd__2" defined at s-stoele.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Oadd__2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__storage_elements__storage_offset___axiom
 use        System__storage_elements__Oadd__2

 val oadd__2 #"s-stoele.ads" 81 0 0# 
   (left : int) (right : BV32.t) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__storage_elements__Oadd__2.oadd__2 left right)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__2__post_axiom :
  (forall left #"s-stoele.ads" 81 0 0#  : int.
  (forall right #"s-stoele.ads" 81 0 0#  : BV32.t [(System__storage_elements__Oadd__2.oadd__2 left right)].
   ( ( (System__storage_elements__storage_offset___axiom.dynamic_invariant left True True True) /\ (System__address___axiom.dynamic_invariant right True True True) ) -> (let result = (System__storage_elements__Oadd__2.oadd__2 left right) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract" defined at s-stoele.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Osubtract___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__storage_elements__storage_offset___axiom
 use        System__storage_elements__Osubtract

 val osubtract #"s-stoele.ads" 86 0 0# 
   (left : BV32.t) (right : int) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__storage_elements__Osubtract.osubtract left right)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__post_axiom :
  (forall left #"s-stoele.ads" 86 0 0#  : BV32.t.
  (forall right #"s-stoele.ads" 86 0 0#  : int [(System__storage_elements__Osubtract.osubtract left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__storage_elements__storage_offset___axiom.dynamic_invariant right True True True) ) -> (let result = (System__storage_elements__Osubtract.osubtract left right) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Osubtract__2" defined at s-stoele.ads:91, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Osubtract__2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__storage_elements__storage_offset___axiom
 use        System__storage_elements__Osubtract__2

 val osubtract__2 #"s-stoele.ads" 91 0 0# 
   (left : BV32.t) (right : BV32.t) : int
  requires { #"s-stoele.ads" 54 0 0# true }
  ensures { #"s-stoele.ads" 54 0 0# ( ( (result = (System__storage_elements__Osubtract__2.osubtract__2 left right)) /\ true ) /\ (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True) ) }
 
 axiom osubtract__2__post_axiom :
  (forall left #"s-stoele.ads" 91 0 0#  right #"s-stoele.ads" 91 0 0#  : BV32.t [(System__storage_elements__Osubtract__2.osubtract__2 left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__address___axiom.dynamic_invariant right True True True) ) -> (let result = (System__storage_elements__Osubtract__2.osubtract__2 left right) in (
    (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "Omod" defined at s-stoele.ads:96, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__Omod___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__storage_elements__storage_offset___axiom
 use        System__storage_elements__Omod

 val omod #"s-stoele.ads" 96 0 0# 
   (left : BV32.t) (right : int) : int
  requires { #"s-stoele.ads" 54 0 0# true }
  ensures { #"s-stoele.ads" 54 0 0# ( ( (result = (System__storage_elements__Omod.omod left right)) /\ true ) /\ (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True) ) }
 
 axiom omod__post_axiom :
  (forall left #"s-stoele.ads" 97 0 0#  : BV32.t.
  (forall right #"s-stoele.ads" 98 0 0#  : int [(System__storage_elements__Omod.omod left right)].
   ( ( (System__address___axiom.dynamic_invariant left True True True) /\ (System__storage_elements__storage_offset___axiom.dynamic_invariant right True True True) ) -> (let result = (System__storage_elements__Omod.omod left right) in (
    (System__storage_elements__storage_offset___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "to_address" defined at s-stoele.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__to_address___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__storage_elements__integer_address___axiom
 use        System__storage_elements__to_address

 val to_address #"s-stoele.ads" 107 0 0# 
   (value : BV32.t) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__storage_elements__to_address.to_address value)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_address__post_axiom :
  (forall value #"s-stoele.ads" 107 0 0#  : BV32.t [(System__storage_elements__to_address.to_address value)].
   ( (System__storage_elements__integer_address___axiom.dynamic_invariant value True True True) -> (let result = (System__storage_elements__to_address.to_address value) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_integer" defined at s-stoele.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__storage_elements__to_integer___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__storage_elements__integer_address___axiom
 use        System__storage_elements__to_integer

 val to_integer #"s-stoele.ads" 112 0 0# 
   (value : BV32.t) : BV32.t
  requires { #"s-stoele.ads" 105 0 0# true }
  ensures { #"s-stoele.ads" 105 0 0# ( ( (result = (System__storage_elements__to_integer.to_integer value)) /\ true ) /\ (System__storage_elements__integer_address___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_integer__post_axiom :
  (forall value #"s-stoele.ads" 112 0 0#  : BV32.t [(System__storage_elements__to_integer.to_integer value)].
   ( (System__address___axiom.dynamic_invariant value True True True) -> (let result = (System__storage_elements__to_integer.to_integer value) in (
    (System__storage_elements__integer_address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "initialize" defined at g-socket.ads:379, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__initialize___axiom
 use import "_gnatprove_standard".Main

 val initialize #"g-socket.ads" 379 0 0# 
   (__void_param : unit) : unit
  requires { #"g-socket.ads" 379 0 0# true }
  ensures { #"g-socket.ads" 379 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "initialize__2" defined at g-socket.ads:390, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__initialize__2___axiom
 use import "_gnatprove_standard".Main

 val initialize__2 #"g-socket.ads" 390 0 0# 
   (process_blocking_io : bool) : unit
  requires { #"g-socket.ads" 390 0 0# true }
  ensures { #"g-socket.ads" 390 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "finalize" defined at g-socket.ads:403, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__finalize___axiom
 use import "_gnatprove_standard".Main

 val finalize #"g-socket.ads" 403 0 0# 
   (__void_param : unit) : unit
  requires { #"g-socket.ads" 403 0 0# true }
  ensures { #"g-socket.ads" 403 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "image" defined at g-socket.ads:456, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__image___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__image

 val image #"g-socket.ads" 456 0 0# 
   (socket : int) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__image.image socket)) /\ (Gnat__sockets__image.image__function_guard result socket) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom image__post_axiom :
  (forall socket #"g-socket.ads" 456 0 0#  : int [(Gnat__sockets__image.image socket)].
   ( (Gnat__sockets__socket_type___axiom.dynamic_invariant socket True True True) -> (let result = (Gnat__sockets__image.image socket) in (
    (if ((Gnat__sockets__image.image__function_guard result socket)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "to_c" defined at g-socket.ads:459, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__to_c___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer___axiom
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__to_c

 val to_c #"g-socket.ads" 459 0 0# 
   (socket : int) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__to_c.to_c socket)) /\ (Gnat__sockets__to_c.to_c__function_guard result socket) ) /\ (Standard__integer___axiom.dynamic_invariant result True False True) ) }
 
 axiom to_c__post_axiom :
  (forall socket #"g-socket.ads" 459 0 0#  : int [(Gnat__sockets__to_c.to_c socket)].
   ( (Gnat__sockets__socket_type___axiom.dynamic_invariant socket True True True) -> (let result = (Gnat__sockets__to_c.to_c socket) in (
    (if ((Gnat__sockets__to_c.to_c__function_guard result socket)) then (
     (Standard__integer___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "image__2" defined at g-socket.ads:516, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__image__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__inet_addr_type___axiom
 use        Gnat__sockets__image__2

 val image__2 #"g-socket.ads" 516 0 0# 
   (value : Gnat__sockets__inet_addr_type.inet_addr_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__image__2.image__2 value)) /\ (Gnat__sockets__image__2.image__2__function_guard result value) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom image__2__post_axiom :
  (forall value #"g-socket.ads" 516 0 0#  : Gnat__sockets__inet_addr_type.inet_addr_type [(Gnat__sockets__image__2.image__2 value)].
   ( (Gnat__sockets__inet_addr_type___axiom.dynamic_invariant value True True True) -> (let result = (Gnat__sockets__image__2.image__2 value) in (
    (if ((Gnat__sockets__image__2.image__2__function_guard result value)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "image__3" defined at g-socket.ads:522, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__image__3___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom
 use        Gnat__sockets__image__3

 val image__3 #"g-socket.ads" 522 0 0# 
   (value : Gnat__sockets__sock_addr_type.sock_addr_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__image__3.image__3 value)) /\ (Gnat__sockets__image__3.image__3__function_guard result value) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom image__3__post_axiom :
  (forall value #"g-socket.ads" 522 0 0#  : Gnat__sockets__sock_addr_type.sock_addr_type [(Gnat__sockets__image__3.image__3 value)].
   ( (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant value True True True) -> (let result = (Gnat__sockets__image__3.image__3 value) in (
    (if ((Gnat__sockets__image__3.image__3__function_guard result value)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "inet_addr" defined at g-socket.ads:525, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__inet_addr___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__inet_addr_type___axiom
 use        Gnat__sockets__inet_addr

 val inet_addr #"g-socket.ads" 525 0 0# 
   (image : Standard__string.string) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# true }
  ensures { #"g-socket.ads" 1220 0 0# ( ( (result = (Gnat__sockets__inet_addr.inet_addr image)) /\ (Gnat__sockets__inet_addr.inet_addr__function_guard result image) ) /\ (Gnat__sockets__inet_addr_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom inet_addr__post_axiom :
  (forall image #"g-socket.ads" 525 0 0#  : Standard__string.string [(Gnat__sockets__inet_addr.inet_addr image)].
   ( (Standard__string___axiom.dynamic_invariant image True True True) -> (let result = (Gnat__sockets__inet_addr.inet_addr image) in (
    (if ((Gnat__sockets__inet_addr.inet_addr__function_guard result image)) then (
     (Gnat__sockets__inet_addr_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "official_name" defined at g-socket.ads:536, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__official_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__host_entry_type
 use        Gnat__sockets__host_entry_type___axiom
 use        Gnat__sockets__official_name

 val official_name #"g-socket.ads" 536 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__official_name.official_name e)) /\ (Gnat__sockets__official_name.official_name__function_guard result e) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom official_name__post_axiom :
  (forall e #"g-socket.ads" 536 0 0#  : Gnat__sockets__host_entry_type.host_entry_type [(Gnat__sockets__official_name.official_name e)].
   ( (Gnat__sockets__host_entry_type___axiom.dynamic_invariant e True True True) -> (let result = (Gnat__sockets__official_name.official_name e) in (
    (if ((Gnat__sockets__official_name.official_name__function_guard result e)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "aliases_length" defined at g-socket.ads:539, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__aliases_length___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural___axiom
 use        Gnat__sockets__host_entry_type
 use        Gnat__sockets__host_entry_type___axiom
 use        Gnat__sockets__aliases_length

 val aliases_length #"g-socket.ads" 539 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__aliases_length.aliases_length e)) /\ (Gnat__sockets__aliases_length.aliases_length__function_guard result e) ) /\ (Standard__natural___axiom.dynamic_invariant result True False True) ) }
 
 axiom aliases_length__post_axiom :
  (forall e #"g-socket.ads" 539 0 0#  : Gnat__sockets__host_entry_type.host_entry_type [(Gnat__sockets__aliases_length.aliases_length e)].
   ( (Gnat__sockets__host_entry_type___axiom.dynamic_invariant e True True True) -> (let result = (Gnat__sockets__aliases_length.aliases_length e) in (
    (if ((Gnat__sockets__aliases_length.aliases_length__function_guard result e)) then (
     (Standard__natural___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "addresses_length" defined at g-socket.ads:542, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__addresses_length___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural___axiom
 use        Gnat__sockets__host_entry_type
 use        Gnat__sockets__host_entry_type___axiom
 use        Gnat__sockets__addresses_length

 val addresses_length #"g-socket.ads" 542 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__addresses_length.addresses_length e)) /\ (Gnat__sockets__addresses_length.addresses_length__function_guard result e) ) /\ (Standard__natural___axiom.dynamic_invariant result True False True) ) }
 
 axiom addresses_length__post_axiom :
  (forall e #"g-socket.ads" 542 0 0#  : Gnat__sockets__host_entry_type.host_entry_type [(Gnat__sockets__addresses_length.addresses_length e)].
   ( (Gnat__sockets__host_entry_type___axiom.dynamic_invariant e True True True) -> (let result = (Gnat__sockets__addresses_length.addresses_length e) in (
    (if ((Gnat__sockets__addresses_length.addresses_length__function_guard result e)) then (
     (Standard__natural___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "aliases" defined at g-socket.ads:545, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__aliases___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive___axiom
 use        Standard__string___axiom
 use        Gnat__sockets__host_entry_type
 use        Gnat__sockets__host_entry_type___axiom
 use        Gnat__sockets__aliases

 val aliases #"g-socket.ads" 545 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) (n : int) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__aliases.aliases e n)) /\ (Gnat__sockets__aliases.aliases__function_guard result e n) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom aliases__post_axiom :
  (forall e #"g-socket.ads" 546 0 0#  : Gnat__sockets__host_entry_type.host_entry_type.
  (forall n #"g-socket.ads" 547 0 0#  : int [(Gnat__sockets__aliases.aliases e n)].
   ( ( (Gnat__sockets__host_entry_type___axiom.dynamic_invariant e True True True) /\ (Standard__positive___axiom.dynamic_invariant n True True True) ) -> (let result = (Gnat__sockets__aliases.aliases e n) in (
    (if ((Gnat__sockets__aliases.aliases__function_guard result e n)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "addresses" defined at g-socket.ads:550, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__addresses___axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive___axiom
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__inet_addr_type___axiom
 use        Gnat__sockets__host_entry_type
 use        Gnat__sockets__host_entry_type___axiom
 use        Gnat__sockets__addresses

 val addresses #"g-socket.ads" 550 0 0# 
   (e : Gnat__sockets__host_entry_type.host_entry_type) (n : int) : Gnat__sockets__inet_addr_type.inet_addr_type
  requires { #"g-socket.ads" 1220 0 0# true }
  ensures { #"g-socket.ads" 1220 0 0# ( ( (result = (Gnat__sockets__addresses.addresses e n)) /\ (Gnat__sockets__addresses.addresses__function_guard result e n) ) /\ (Gnat__sockets__inet_addr_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom addresses__post_axiom :
  (forall e #"g-socket.ads" 551 0 0#  : Gnat__sockets__host_entry_type.host_entry_type.
  (forall n #"g-socket.ads" 552 0 0#  : int [(Gnat__sockets__addresses.addresses e n)].
   ( ( (Gnat__sockets__host_entry_type___axiom.dynamic_invariant e True True True) /\ (Standard__positive___axiom.dynamic_invariant n True True True) ) -> (let result = (Gnat__sockets__addresses.addresses e n) in (
    (if ((Gnat__sockets__addresses.addresses__function_guard result e n)) then (
     (Gnat__sockets__inet_addr_type___axiom.dynamic_invariant result True False True)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_host_by_address" defined at g-socket.ads:560, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get_host_by_address___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__family_type___axiom
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__inet_addr_type___axiom
 use        Gnat__sockets__host_entry_type
 use        Gnat__sockets__host_entry_type___axiom
 use        Gnat__sockets__get_host_by_address

 val get_host_by_address #"g-socket.ads" 560 0 0# 
   (address : Gnat__sockets__inet_addr_type.inet_addr_type) (family : int) : Gnat__sockets__host_entry_type.host_entry_type
  requires { #"g-socket.ads" 1264 0 0# true }
  ensures { #"g-socket.ads" 1264 0 0# ( ( (result = (Gnat__sockets__get_host_by_address.get_host_by_address address family)) /\ (Gnat__sockets__get_host_by_address.get_host_by_address__function_guard result address family) ) /\ (Gnat__sockets__host_entry_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_host_by_address__post_axiom :
  (forall address #"g-socket.ads" 561 0 0#  : Gnat__sockets__inet_addr_type.inet_addr_type.
  (forall family #"g-socket.ads" 562 0 0#  : int [(Gnat__sockets__get_host_by_address.get_host_by_address address family)].
   ( ( (Gnat__sockets__inet_addr_type___axiom.dynamic_invariant address True True True) /\ (Gnat__sockets__family_type___axiom.dynamic_invariant family True True True) ) -> (let result = (Gnat__sockets__get_host_by_address.get_host_by_address address family) in (
    (if ((Gnat__sockets__get_host_by_address.get_host_by_address__function_guard result address family)) then (
     (Gnat__sockets__host_entry_type___axiom.dynamic_invariant result True False True)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_host_by_name" defined at g-socket.ads:567, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get_host_by_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__host_entry_type
 use        Gnat__sockets__host_entry_type___axiom
 use        Gnat__sockets__get_host_by_name

 val get_host_by_name #"g-socket.ads" 567 0 0# 
   (name : Standard__string.string) : Gnat__sockets__host_entry_type.host_entry_type
  requires { #"g-socket.ads" 1264 0 0# true }
  ensures { #"g-socket.ads" 1264 0 0# ( ( (result = (Gnat__sockets__get_host_by_name.get_host_by_name name)) /\ (Gnat__sockets__get_host_by_name.get_host_by_name__function_guard result name) ) /\ (Gnat__sockets__host_entry_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_host_by_name__post_axiom :
  (forall name #"g-socket.ads" 568 0 0#  : Standard__string.string [(Gnat__sockets__get_host_by_name.get_host_by_name name)].
   ( (Standard__string___axiom.dynamic_invariant name True True True) -> (let result = (Gnat__sockets__get_host_by_name.get_host_by_name name) in (
    (if ((Gnat__sockets__get_host_by_name.get_host_by_name__function_guard result name)) then (
     (Gnat__sockets__host_entry_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "host_name" defined at g-socket.ads:573, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__host_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__host_name

 val host_name #"g-socket.ads" 573 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__host_name.host_name ())) /\ (Gnat__sockets__host_name.host_name__function_guard result ()) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom host_name__post_axiom :
  (forall __void_param #"g-socket.ads" 573 0 0#  : unit [(Gnat__sockets__host_name.host_name __void_param)].
   ( true -> (let result = (Gnat__sockets__host_name.host_name __void_param) in (
    (if ((Gnat__sockets__host_name.host_name__function_guard result __void_param)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "official_name__2" defined at g-socket.ads:581, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__official_name__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__service_entry_type
 use        Gnat__sockets__service_entry_type___axiom
 use        Gnat__sockets__official_name__2

 val official_name__2 #"g-socket.ads" 581 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__official_name__2.official_name__2 s)) /\ (Gnat__sockets__official_name__2.official_name__2__function_guard result s) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom official_name__2__post_axiom :
  (forall s #"g-socket.ads" 581 0 0#  : Gnat__sockets__service_entry_type.service_entry_type [(Gnat__sockets__official_name__2.official_name__2 s)].
   ( (Gnat__sockets__service_entry_type___axiom.dynamic_invariant s True True True) -> (let result = (Gnat__sockets__official_name__2.official_name__2 s) in (
    (if ((Gnat__sockets__official_name__2.official_name__2__function_guard result s)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "port_number" defined at g-socket.ads:584, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__port_number___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__port_type___axiom
 use        Gnat__sockets__service_entry_type
 use        Gnat__sockets__service_entry_type___axiom
 use        Gnat__sockets__port_number

 val port_number #"g-socket.ads" 584 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : int
  requires { #"g-socket.ads" 479 0 0# true }
  ensures { #"g-socket.ads" 479 0 0# ( ( (result = (Gnat__sockets__port_number.port_number s)) /\ (Gnat__sockets__port_number.port_number__function_guard result s) ) /\ (Gnat__sockets__port_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom port_number__post_axiom :
  (forall s #"g-socket.ads" 584 0 0#  : Gnat__sockets__service_entry_type.service_entry_type [(Gnat__sockets__port_number.port_number s)].
   ( (Gnat__sockets__service_entry_type___axiom.dynamic_invariant s True True True) -> (let result = (Gnat__sockets__port_number.port_number s) in (
    (if ((Gnat__sockets__port_number.port_number__function_guard result s)) then (
     (Gnat__sockets__port_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "protocol_name" defined at g-socket.ads:587, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__protocol_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__service_entry_type
 use        Gnat__sockets__service_entry_type___axiom
 use        Gnat__sockets__protocol_name

 val protocol_name #"g-socket.ads" 587 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__protocol_name.protocol_name s)) /\ (Gnat__sockets__protocol_name.protocol_name__function_guard result s) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom protocol_name__post_axiom :
  (forall s #"g-socket.ads" 587 0 0#  : Gnat__sockets__service_entry_type.service_entry_type [(Gnat__sockets__protocol_name.protocol_name s)].
   ( (Gnat__sockets__service_entry_type___axiom.dynamic_invariant s True True True) -> (let result = (Gnat__sockets__protocol_name.protocol_name s) in (
    (if ((Gnat__sockets__protocol_name.protocol_name__function_guard result s)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "aliases_length__2" defined at g-socket.ads:590, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__aliases_length__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural___axiom
 use        Gnat__sockets__service_entry_type
 use        Gnat__sockets__service_entry_type___axiom
 use        Gnat__sockets__aliases_length__2

 val aliases_length__2 #"g-socket.ads" 590 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__aliases_length__2.aliases_length__2 s)) /\ (Gnat__sockets__aliases_length__2.aliases_length__2__function_guard result s) ) /\ (Standard__natural___axiom.dynamic_invariant result True False True) ) }
 
 axiom aliases_length__2__post_axiom :
  (forall s #"g-socket.ads" 590 0 0#  : Gnat__sockets__service_entry_type.service_entry_type [(Gnat__sockets__aliases_length__2.aliases_length__2 s)].
   ( (Gnat__sockets__service_entry_type___axiom.dynamic_invariant s True True True) -> (let result = (Gnat__sockets__aliases_length__2.aliases_length__2 s) in (
    (if ((Gnat__sockets__aliases_length__2.aliases_length__2__function_guard result s)) then (
     (Standard__natural___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "aliases__2" defined at g-socket.ads:593, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__aliases__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__positive___axiom
 use        Standard__string___axiom
 use        Gnat__sockets__service_entry_type
 use        Gnat__sockets__service_entry_type___axiom
 use        Gnat__sockets__aliases__2

 val aliases__2 #"g-socket.ads" 593 0 0# 
   (s : Gnat__sockets__service_entry_type.service_entry_type) (n : int) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__aliases__2.aliases__2 s n)) /\ (Gnat__sockets__aliases__2.aliases__2__function_guard result s n) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom aliases__2__post_axiom :
  (forall s #"g-socket.ads" 594 0 0#  : Gnat__sockets__service_entry_type.service_entry_type.
  (forall n #"g-socket.ads" 595 0 0#  : int [(Gnat__sockets__aliases__2.aliases__2 s n)].
   ( ( (Gnat__sockets__service_entry_type___axiom.dynamic_invariant s True True True) /\ (Standard__positive___axiom.dynamic_invariant n True True True) ) -> (let result = (Gnat__sockets__aliases__2.aliases__2 s n) in (
    (if ((Gnat__sockets__aliases__2.aliases__2__function_guard result s n)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "get_service_by_name" defined at g-socket.ads:598, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get_service_by_name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__service_entry_type
 use        Gnat__sockets__service_entry_type___axiom
 use        Gnat__sockets__get_service_by_name

 val get_service_by_name #"g-socket.ads" 598 0 0# 
   (name : Standard__string.string) (protocol : Standard__string.string) : Gnat__sockets__service_entry_type.service_entry_type
  requires { #"g-socket.ads" 1270 0 0# true }
  ensures { #"g-socket.ads" 1270 0 0# ( ( (result = (Gnat__sockets__get_service_by_name.get_service_by_name name protocol)) /\ (Gnat__sockets__get_service_by_name.get_service_by_name__function_guard result name protocol) ) /\ (Gnat__sockets__service_entry_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_service_by_name__post_axiom :
  (forall name #"g-socket.ads" 599 0 0#  protocol #"g-socket.ads" 600 0 0#  : Standard__string.string [(Gnat__sockets__get_service_by_name.get_service_by_name name protocol)].
   ( ( (Standard__string___axiom.dynamic_invariant name True True True) /\ (Standard__string___axiom.dynamic_invariant protocol True True True) ) -> (let result = (Gnat__sockets__get_service_by_name.get_service_by_name name protocol) in (
    (if ((Gnat__sockets__get_service_by_name.get_service_by_name__function_guard result name protocol)) then (
     (Gnat__sockets__service_entry_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_service_by_port" defined at g-socket.ads:603, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get_service_by_port___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__port_type___axiom
 use        Gnat__sockets__service_entry_type
 use        Gnat__sockets__service_entry_type___axiom
 use        Gnat__sockets__get_service_by_port

 val get_service_by_port #"g-socket.ads" 603 0 0# 
   (port : int) (protocol : Standard__string.string) : Gnat__sockets__service_entry_type.service_entry_type
  requires { #"g-socket.ads" 1270 0 0# true }
  ensures { #"g-socket.ads" 1270 0 0# ( ( (result = (Gnat__sockets__get_service_by_port.get_service_by_port port protocol)) /\ (Gnat__sockets__get_service_by_port.get_service_by_port__function_guard result port protocol) ) /\ (Gnat__sockets__service_entry_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_service_by_port__post_axiom :
  (forall port #"g-socket.ads" 604 0 0#  : int.
  (forall protocol #"g-socket.ads" 605 0 0#  : Standard__string.string [(Gnat__sockets__get_service_by_port.get_service_by_port port protocol)].
   ( ( (Gnat__sockets__port_type___axiom.dynamic_invariant port True True True) /\ (Standard__string___axiom.dynamic_invariant protocol True True True) ) -> (let result = (Gnat__sockets__get_service_by_port.get_service_by_port port protocol) in (
    (if ((Gnat__sockets__get_service_by_port.get_service_by_port__function_guard result port protocol)) then (
     (Gnat__sockets__service_entry_type___axiom.dynamic_invariant result True False True)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "Oadd" defined at g-socket.ads:805, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__Oadd___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Gnat__sockets__request_flag_type___axiom
 use        Gnat__sockets__Oadd

 val oadd #"g-socket.ads" 805 0 0# 
   (l : BV8.t) (r : BV8.t) : BV8.t
  requires { #"g-socket.ads" 1277 0 0# true }
  ensures { #"g-socket.ads" 1277 0 0# ( ( (result = (Gnat__sockets__Oadd.oadd l r)) /\ (Gnat__sockets__Oadd.oadd__function_guard result l r) ) /\ (Gnat__sockets__request_flag_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom oadd__post_axiom :
  (forall l #"g-socket.ads" 805 0 0#  r #"g-socket.ads" 805 0 0#  : BV8.t [(Gnat__sockets__Oadd.oadd l r)].
   ( ( (Gnat__sockets__request_flag_type___axiom.dynamic_invariant l True True True) /\ (Gnat__sockets__request_flag_type___axiom.dynamic_invariant r True True True) ) -> (let result = (Gnat__sockets__Oadd.oadd l r) in (
    (if ((Gnat__sockets__Oadd.oadd__function_guard result l r)) then (
     (Gnat__sockets__request_flag_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "create_socket" defined at g-socket.ads:817, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__create_socket___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type___axiom

 val create_socket #"g-socket.ads" 817 0 0# 
   (socket : int__ref) (family : int) (mode : int) : unit
  requires { #"g-socket.ads" 467 0 0# true }
  ensures { #"g-socket.ads" 467 0 0# (Gnat__sockets__socket_type___axiom.dynamic_invariant socket.int__content True True True) }
  writes {socket}

end

(* Module for declaring a program function (and possibly an axiom) for "accept_socket" defined at g-socket.ads:823, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__accept_socket___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom

 val accept_socket #"g-socket.ads" 823 0 0# 
   (server : int) (socket : int__ref) (address__split_fields : Gnat__sockets__sock_addr_type.__split_fields__ref) (address__split_discrs : Gnat__sockets__sock_addr_type.__split_discrs__ref) (address__attr__constrained : bool) : unit
  requires { #"g-socket.ads" 826 0 0# true }
  ensures { #"g-socket.ads" 826 0 0# ( ( (Gnat__sockets__socket_type___axiom.dynamic_invariant socket.int__content True True True) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = address__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = address__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = address__attr__constrained } True True True) ) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = address__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = address__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = address__attr__constrained } True True True) ) }
  writes {socket, address__split_fields, address__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "bind_socket" defined at g-socket.ads:848, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__bind_socket___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val bind_socket #"g-socket.ads" 848 0 0# 
   (socket : int) (address : Gnat__sockets__sock_addr_type.sock_addr_type) : unit
  requires { #"g-socket.ads" 505 0 0# true }
  ensures { #"g-socket.ads" 505 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "close_socket" defined at g-socket.ads:854, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__close_socket___axiom
 use import "_gnatprove_standard".Main

 val close_socket #"g-socket.ads" 854 0 0# 
   (socket : int) : unit
  requires { #"g-socket.ads" 1167 0 0# true }
  ensures { #"g-socket.ads" 1167 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "connect_socket" defined at g-socket.ads:857, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__connect_socket___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__sock_addr_type

 val connect_socket #"g-socket.ads" 857 0 0# 
   (socket : int) (server : Gnat__sockets__sock_addr_type.sock_addr_type) : unit
  requires { #"g-socket.ads" 505 0 0# true }
  ensures { #"g-socket.ads" 505 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "control_socket" defined at g-socket.ads:878, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__control_socket___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__request_type
 use        Gnat__sockets__request_type___axiom

 val control_socket #"g-socket.ads" 878 0 0# 
   (socket : int) (request__split_fields : Gnat__sockets__request_type.__split_fields__ref) (request__split_discrs : Gnat__sockets__request_type.__split_discrs__ref) (request__attr__constrained : bool) : unit
  requires { #"g-socket.ads" 880 0 0# true }
  ensures { #"g-socket.ads" 880 0 0# ( (Gnat__sockets__request_type___axiom.dynamic_invariant { Gnat__sockets__request_type.__split_fields = request__split_fields.Gnat__sockets__request_type.__split_fields__content; Gnat__sockets__request_type.__split_discrs = request__split_discrs.Gnat__sockets__request_type.__split_discrs__content; Gnat__sockets__request_type.attr__constrained = request__attr__constrained } True True True) /\ (Gnat__sockets__request_type___axiom.dynamic_invariant { Gnat__sockets__request_type.__split_fields = request__split_fields.Gnat__sockets__request_type.__split_fields__content; Gnat__sockets__request_type.__split_discrs = request__split_discrs.Gnat__sockets__request_type.__split_discrs__content; Gnat__sockets__request_type.attr__constrained = request__attr__constrained } True True True) ) }
  writes {request__split_fields, request__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "get_peer_name" defined at g-socket.ads:885, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get_peer_name___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom
 use        Gnat__sockets__get_peer_name

 val get_peer_name #"g-socket.ads" 885 0 0# 
   (socket : int) : Gnat__sockets__sock_addr_type.sock_addr_type
  requires { #"g-socket.ads" 505 0 0# true }
  ensures { #"g-socket.ads" 505 0 0# ( ( (result = (Gnat__sockets__get_peer_name.get_peer_name socket)) /\ (Gnat__sockets__get_peer_name.get_peer_name__function_guard result socket) ) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_peer_name__post_axiom :
  (forall socket #"g-socket.ads" 885 0 0#  : int [(Gnat__sockets__get_peer_name.get_peer_name socket)].
   ( (Gnat__sockets__socket_type___axiom.dynamic_invariant socket True True True) -> (let result = (Gnat__sockets__get_peer_name.get_peer_name socket) in (
    (if ((Gnat__sockets__get_peer_name.get_peer_name__function_guard result socket)) then (
     (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_socket_name" defined at g-socket.ads:889, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get_socket_name___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom
 use        Gnat__sockets__get_socket_name

 val get_socket_name #"g-socket.ads" 889 0 0# 
   (socket : int) : Gnat__sockets__sock_addr_type.sock_addr_type
  requires { #"g-socket.ads" 505 0 0# true }
  ensures { #"g-socket.ads" 505 0 0# ( ( (result = (Gnat__sockets__get_socket_name.get_socket_name socket)) /\ (Gnat__sockets__get_socket_name.get_socket_name__function_guard result socket) ) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_socket_name__post_axiom :
  (forall socket #"g-socket.ads" 889 0 0#  : int [(Gnat__sockets__get_socket_name.get_socket_name socket)].
   ( (Gnat__sockets__socket_type___axiom.dynamic_invariant socket True True True) -> (let result = (Gnat__sockets__get_socket_name.get_socket_name socket) in (
    (if ((Gnat__sockets__get_socket_name.get_socket_name__function_guard result socket)) then (
     (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_socket_option" defined at g-socket.ads:893, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get_socket_option___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c__int___axiom
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__level_type___axiom
 use        Gnat__sockets__option_name___axiom
 use        Gnat__sockets__option_type
 use        Gnat__sockets__option_type___axiom
 use        Gnat__sockets__get_socket_option

 val get_socket_option #"g-socket.ads" 893 0 0# 
   (socket : int) (level : int) (name : int) (optname : int) : Gnat__sockets__option_type.option_type
  requires { #"g-socket.ads" 704 0 0# true }
  ensures { #"g-socket.ads" 704 0 0# ( ( (result = (Gnat__sockets__get_socket_option.get_socket_option socket level name optname)) /\ (Gnat__sockets__get_socket_option.get_socket_option__function_guard result socket level name optname) ) /\ (Gnat__sockets__option_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_socket_option__post_axiom :
  (forall socket #"g-socket.ads" 894 0 0#  level #"g-socket.ads" 895 0 0#  name #"g-socket.ads" 896 0 0#  optname #"g-socket.ads" 897 0 0#  : int [(Gnat__sockets__get_socket_option.get_socket_option socket level name optname)].
   ( ( ( ( (Gnat__sockets__socket_type___axiom.dynamic_invariant socket True True True) /\ (Gnat__sockets__level_type___axiom.dynamic_invariant level True True True) ) /\ (Gnat__sockets__option_name___axiom.dynamic_invariant name True True True) ) /\ (Interfaces__c__int___axiom.dynamic_invariant optname True True True) ) -> (let result = (Gnat__sockets__get_socket_option.get_socket_option socket level name optname) in (
    (if ((Gnat__sockets__get_socket_option.get_socket_option__function_guard result socket level name optname)) then (
     (Gnat__sockets__option_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "listen_socket" defined at g-socket.ads:901, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__listen_socket___axiom
 use import "_gnatprove_standard".Main

 val listen_socket #"g-socket.ads" 901 0 0# 
   (socket : int) (length : int) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "receive_socket" defined at g-socket.ads:911, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__receive_socket___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__Tstream_element_offsetB__rep
 use        Ada__streams__stream_element_offset
 use        Ada__streams__stream_element_offset___axiom
 use        Ada__streams__stream_element_array
 use        Array__Int__Ada__streams__stream_element

 val receive_socket #"g-socket.ads" 911 0 0# 
   (socket : int) (item : Array__Int__Ada__streams__stream_element.map__ref) (item__first : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (item__last : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (last : int__ref) (flags : BV8.t) : unit
  requires { #"g-socket.ads" 1277 0 0# true }
  ensures { #"g-socket.ads" 1277 0 0# ( (if (True) then (
   true) else (
   (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last (Ada__streams__Tstream_element_offsetB__rep.to_rep item__first) (Ada__streams__Tstream_element_offsetB__rep.to_rep item__last)))) /\ (Ada__streams__stream_element_offset___axiom.dynamic_invariant last.int__content True True True) ) }
  writes {item, last}

end

(* Module for declaring a program function (and possibly an axiom) for "receive_socket__2" defined at g-socket.ads:924, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__receive_socket__2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Ada__streams__Tstream_element_offsetB
 use        Ada__streams__Tstream_element_offsetB__rep
 use        Ada__streams__stream_element_offset
 use        Ada__streams__stream_element_offset___axiom
 use        Ada__streams__stream_element_array
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom
 use        Array__Int__Ada__streams__stream_element

 val receive_socket__2 #"g-socket.ads" 924 0 0# 
   (socket : int) (item : Array__Int__Ada__streams__stream_element.map__ref) (item__first : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (item__last : Ada__streams__Tstream_element_offsetB.tstream_element_offsetB) (last : int__ref) (from__split_fields : Gnat__sockets__sock_addr_type.__split_fields__ref) (from__split_discrs : Gnat__sockets__sock_addr_type.__split_discrs__ref) (from__attr__constrained : bool) (flags : BV8.t) : unit
  requires { #"g-socket.ads" 1277 0 0# true }
  ensures { #"g-socket.ads" 1277 0 0# ( ( ( (if (True) then (
   true) else (
   (Ada__streams__stream_element_array.dynamic_property Ada__streams__stream_element_offset.first Ada__streams__stream_element_offset.last (Ada__streams__Tstream_element_offsetB__rep.to_rep item__first) (Ada__streams__Tstream_element_offsetB__rep.to_rep item__last)))) /\ (Ada__streams__stream_element_offset___axiom.dynamic_invariant last.int__content True True True) ) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = from__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = from__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = from__attr__constrained } True True True) ) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = from__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = from__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = from__attr__constrained } True True True) ) }
  writes {item, last, from__split_fields, from__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "resolve_exception" defined at g-socket.ads:944, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__resolve_exception___axiom
 use import "_gnatprove_standard".Main
 use        Ada__exceptions__exception_occurrence
 use        Ada__exceptions__exception_occurrence___axiom
 use        Gnat__sockets__error_type___axiom
 use        Gnat__sockets__resolve_exception

 val resolve_exception #"g-socket.ads" 944 0 0# 
   (occurrence : Ada__exceptions__exception_occurrence.exception_occurrence) : int
  requires { #"g-socket.ads" 621 0 0# true }
  ensures { #"g-socket.ads" 621 0 0# ( ( (result = (Gnat__sockets__resolve_exception.resolve_exception occurrence)) /\ (Gnat__sockets__resolve_exception.resolve_exception__function_guard result occurrence) ) /\ (Gnat__sockets__error_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom resolve_exception__post_axiom :
  (forall occurrence #"g-socket.ads" 945 0 0#  : Ada__exceptions__exception_occurrence.exception_occurrence [(Gnat__sockets__resolve_exception.resolve_exception occurrence)].
   ( (Ada__exceptions__exception_occurrence___axiom.dynamic_invariant occurrence True True True) -> (let result = (Gnat__sockets__resolve_exception.resolve_exception occurrence) in (
    (if ((Gnat__sockets__resolve_exception.resolve_exception__function_guard result occurrence)) then (
     (Gnat__sockets__error_type___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "send_socket__2" defined at g-socket.ads:969, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__send_socket__2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Ada__streams__stream_element_offset___axiom
 use        Ada__streams__stream_element_array

 val send_socket__2 #"g-socket.ads" 969 0 0# 
   (socket : int) (item : Ada__streams__stream_element_array.stream_element_array) (last : int__ref) (flags : BV8.t) : unit
  requires { #"g-socket.ads" 1277 0 0# true }
  ensures { #"g-socket.ads" 1277 0 0# (Ada__streams__stream_element_offset___axiom.dynamic_invariant last.int__content True True True) }
  writes {last}

end

(* Module for declaring a program function (and possibly an axiom) for "send_socket__3" defined at g-socket.ads:978, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__send_socket__3___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV8
 use        Ada__streams__stream_element_offset___axiom
 use        Ada__streams__stream_element_array
 use        Gnat__sockets__sock_addr_type

 val send_socket__3 #"g-socket.ads" 978 0 0# 
   (socket : int) (item : Ada__streams__stream_element_array.stream_element_array) (last : int__ref) (to__ : Gnat__sockets__sock_addr_type.sock_addr_type) (flags : BV8.t) : unit
  requires { #"g-socket.ads" 1277 0 0# true }
  ensures { #"g-socket.ads" 1277 0 0# (Ada__streams__stream_element_offset___axiom.dynamic_invariant last.int__content True True True) }
  writes {last}

end

(* Module for declaring a program function (and possibly an axiom) for "set_close_on_exec" defined at g-socket.ads:997, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__set_close_on_exec___axiom
 use import "_gnatprove_standard".Main

 val set_close_on_exec #"g-socket.ads" 997 0 0# 
   (socket : int) (close_on_exec : bool) (status : bool__ref) : unit
  requires { #"g-socket.ads" 1000 0 0# true }
  ensures { #"g-socket.ads" 1000 0 0# true }
  writes {status}

end

(* Module for declaring a program function (and possibly an axiom) for "set_socket_option" defined at g-socket.ads:1008, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__set_socket_option___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__option_type

 val set_socket_option #"g-socket.ads" 1008 0 0# 
   (socket : int) (level : int) (option : Gnat__sockets__option_type.option_type) : unit
  requires { #"g-socket.ads" 704 0 0# true }
  ensures { #"g-socket.ads" 704 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "shutdown_socket" defined at g-socket.ads:1014, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__shutdown_socket___axiom
 use import "_gnatprove_standard".Main

 val shutdown_socket #"g-socket.ads" 1014 0 0# 
   (socket : int) (how : int) : unit
  requires { #"g-socket.ads" 471 0 0# true }
  ensures { #"g-socket.ads" 471 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "clear" defined at g-socket.ads:1056, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__clear___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom

 val clear #"g-socket.ads" 1056 0 0# 
   (item__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (socket : int) : unit
  requires { #"g-socket.ads" 1167 0 0# true }
  ensures { #"g-socket.ads" 1167 0 0# (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = item__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) }
  writes {item__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "copy" defined at g-socket.ads:1059, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__copy___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom

 val copy #"g-socket.ads" 1059 0 0# 
   (source : Gnat__sockets__socket_set_type.socket_set_type) (target__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) : unit
  requires { #"g-socket.ads" 1202 0 0# true }
  ensures { #"g-socket.ads" 1202 0 0# (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = target__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) }
  writes {target__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "empty" defined at g-socket.ads:1062, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__empty___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom

 val empty #"g-socket.ads" 1062 0 0# 
   (item__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) : unit
  requires { #"g-socket.ads" 1202 0 0# true }
  ensures { #"g-socket.ads" 1202 0 0# (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = item__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) }
  writes {item__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "get" defined at g-socket.ads:1065, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__get___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom

 val get #"g-socket.ads" 1065 0 0# 
   (item__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (socket : int__ref) : unit
  requires { #"g-socket.ads" 1167 0 0# true }
  ensures { #"g-socket.ads" 1167 0 0# ( (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = item__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) /\ (Gnat__sockets__socket_type___axiom.dynamic_invariant socket.int__content True True True) ) }
  writes {item__split_fields, socket}

end

(* Module for declaring a program function (and possibly an axiom) for "is_empty" defined at g-socket.ads:1069, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__is_empty___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__is_empty

 val is_empty #"g-socket.ads" 1069 0 0# 
   (item : Gnat__sockets__socket_set_type.socket_set_type) : bool
  requires { #"g-socket.ads" 1202 0 0# true }
  ensures { #"g-socket.ads" 1202 0 0# ( ( (result = (Gnat__sockets__is_empty.is_empty item)) /\ (Gnat__sockets__is_empty.is_empty__function_guard result item) ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "is_set" defined at g-socket.ads:1072, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__is_set___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__is_set

 val is_set #"g-socket.ads" 1072 0 0# 
   (item : Gnat__sockets__socket_set_type.socket_set_type) (socket : int) : bool
  requires { #"g-socket.ads" 1167 0 0# true }
  ensures { #"g-socket.ads" 1167 0 0# ( ( (result = (Gnat__sockets__is_set.is_set item socket)) /\ (Gnat__sockets__is_set.is_set__function_guard result item socket) ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "set" defined at g-socket.ads:1077, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__set___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom

 val set #"g-socket.ads" 1077 0 0# 
   (item__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (socket : int) : unit
  requires { #"g-socket.ads" 1167 0 0# true }
  ensures { #"g-socket.ads" 1167 0 0# (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = item__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) }
  writes {item__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "image__4" defined at g-socket.ads:1080, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__image__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom
 use        Gnat__sockets__image__4

 val image__4 #"g-socket.ads" 1080 0 0# 
   (item : Gnat__sockets__socket_set_type.socket_set_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Gnat__sockets__image__4.image__4 item)) /\ (Gnat__sockets__image__4.image__4__function_guard result item) ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom image__4__post_axiom :
  (forall item #"g-socket.ads" 1080 0 0#  : Gnat__sockets__socket_set_type.socket_set_type [(Gnat__sockets__image__4.image__4 item)].
   ( (Gnat__sockets__socket_set_type___axiom.dynamic_invariant item True True True) -> (let result = (Gnat__sockets__image__4.image__4 item) in (
    (if ((Gnat__sockets__image__4.image__4__function_guard result item)) then (
     (Standard__string___axiom.dynamic_invariant result True False True)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "create_selector" defined at g-socket.ads:1106, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__create_selector___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type
 use        Gnat__sockets__selector_type___axiom

 val create_selector #"g-socket.ads" 1106 0 0# 
   (selector__split_fields : Gnat__sockets__selector_type.__split_fields__ref) (selector__split_discrs : Gnat__sockets__selector_type.__split_discrs__ref) (selector__attr__constrained : bool) : unit
  requires { #"g-socket.ads" 1106 0 0# true }
  ensures { #"g-socket.ads" 1106 0 0# ( (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) /\ (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) ) }
  writes {selector__split_fields, selector__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "close_selector" defined at g-socket.ads:1109, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__close_selector___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type
 use        Gnat__sockets__selector_type___axiom

 val close_selector #"g-socket.ads" 1109 0 0# 
   (selector__split_fields : Gnat__sockets__selector_type.__split_fields__ref) (selector__split_discrs : Gnat__sockets__selector_type.__split_discrs__ref) (selector__attr__constrained : bool) : unit
  requires { #"g-socket.ads" 1109 0 0# true }
  ensures { #"g-socket.ads" 1109 0 0# ( (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) /\ (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) ) }
  writes {selector__split_fields, selector__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "check_selector" defined at g-socket.ads:1116, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__check_selector___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type
 use        Gnat__sockets__selector_type___axiom
 use        Gnat__sockets__selector_duration
 use        Gnat__sockets__selector_status___axiom
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom

 val check_selector #"g-socket.ads" 1116 0 0# 
   (selector__split_fields : Gnat__sockets__selector_type.__split_fields__ref) (selector__split_discrs : Gnat__sockets__selector_type.__split_discrs__ref) (selector__attr__constrained : bool) (r_socket_set__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (w_socket_set__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (status : int__ref) (timeout : Gnat__sockets__selector_duration.selector_duration) : unit
  requires { #"g-socket.ads" 441 0 0# true }
  ensures { #"g-socket.ads" 441 0 0# ( ( ( ( (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) /\ (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) ) /\ (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = r_socket_set__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) ) /\ (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = w_socket_set__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) ) /\ (Gnat__sockets__selector_status___axiom.dynamic_invariant status.int__content True True True) ) }
  writes {selector__split_fields, selector__split_discrs, r_socket_set__split_fields, w_socket_set__split_fields, status}

end

(* Module for declaring a program function (and possibly an axiom) for "check_selector__2" defined at g-socket.ads:1140, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__check_selector__2___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type
 use        Gnat__sockets__selector_type___axiom
 use        Gnat__sockets__selector_duration
 use        Gnat__sockets__selector_status___axiom
 use        Gnat__sockets__socket_set_type
 use        Gnat__sockets__socket_set_type___axiom

 val check_selector__2 #"g-socket.ads" 1140 0 0# 
   (selector__split_fields : Gnat__sockets__selector_type.__split_fields__ref) (selector__split_discrs : Gnat__sockets__selector_type.__split_discrs__ref) (selector__attr__constrained : bool) (r_socket_set__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (w_socket_set__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (e_socket_set__split_fields : Gnat__sockets__socket_set_type.__split_fields__ref) (status : int__ref) (timeout : Gnat__sockets__selector_duration.selector_duration) : unit
  requires { #"g-socket.ads" 441 0 0# true }
  ensures { #"g-socket.ads" 441 0 0# ( ( ( ( ( (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) /\ (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) ) /\ (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = r_socket_set__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) ) /\ (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = w_socket_set__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) ) /\ (Gnat__sockets__socket_set_type___axiom.dynamic_invariant { Gnat__sockets__socket_set_type.__split_fields = e_socket_set__split_fields.Gnat__sockets__socket_set_type.__split_fields__content } True True True) ) /\ (Gnat__sockets__selector_status___axiom.dynamic_invariant status.int__content True True True) ) }
  writes {selector__split_fields, selector__split_discrs, r_socket_set__split_fields, w_socket_set__split_fields, e_socket_set__split_fields, status}

end

(* Module for declaring a program function (and possibly an axiom) for "abort_selector" defined at g-socket.ads:1152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Gnat__sockets__abort_selector___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__selector_type
 use        Gnat__sockets__selector_type___axiom

 val abort_selector #"g-socket.ads" 1152 0 0# 
   (selector__split_fields : Gnat__sockets__selector_type.__split_fields__ref) (selector__split_discrs : Gnat__sockets__selector_type.__split_discrs__ref) (selector__attr__constrained : bool) : unit
  requires { #"g-socket.ads" 1152 0 0# true }
  ensures { #"g-socket.ads" 1152 0 0# ( (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) /\ (Gnat__sockets__selector_type___axiom.dynamic_invariant { Gnat__sockets__selector_type.__split_fields = selector__split_fields.Gnat__sockets__selector_type.__split_fields__content; Gnat__sockets__selector_type.__split_discrs = selector__split_discrs.Gnat__sockets__selector_type.__split_discrs__content; Gnat__sockets__selector_type.attr__constrained = selector__attr__constrained } True True True) ) }
  writes {selector__split_fields, selector__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "strlen" defined at s-crtl.ads:85, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__strlen___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__crtl__size_t___axiom
 use        System__crtl__strlen

 val strlen #"s-crtl.ads" 85 0 0# 
   (a : BV32.t) : BV32.t
  requires { #"s-crtl.ads" 60 0 0# true }
  ensures { #"s-crtl.ads" 60 0 0# ( ( (result = (System__crtl__strlen.strlen a)) /\ true ) /\ (System__crtl__size_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom strlen__post_axiom :
  (forall a #"s-crtl.ads" 85 0 0#  : BV32.t [(System__crtl__strlen.strlen a)].
   ( (System__address___axiom.dynamic_invariant a True True True) -> (let result = (System__crtl__strlen.strlen a) in (
    (System__crtl__size_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "strncpy" defined at s-crtl.ads:88, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__strncpy___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val strncpy #"s-crtl.ads" 88 0 0# 
   (dest : BV32.t) (src : BV32.t) (n : BV32.t) : unit
  requires { #"s-crtl.ads" 60 0 0# true }
  ensures { #"s-crtl.ads" 60 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "atoi" defined at s-crtl.ads:95, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__atoi___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__integer___axiom
 use        System__address___axiom
 use        System__crtl__atoi

 val atoi #"s-crtl.ads" 95 0 0# 
   (a : BV32.t) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (System__crtl__atoi.atoi a)) /\ true ) /\ (Standard__integer___axiom.dynamic_invariant result True False True) ) }
 
 axiom atoi__post_axiom :
  (forall a #"s-crtl.ads" 95 0 0#  : BV32.t [(System__crtl__atoi.atoi a)].
   ( (System__address___axiom.dynamic_invariant a True True True) -> (let result = (System__crtl__atoi.atoi a) in (
    (Standard__integer___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "clearerr" defined at s-crtl.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__clearerr___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val clearerr #"s-crtl.ads" 98 0 0# 
   (stream : BV32.t) : unit
  requires { #"s-crtl.ads" 50 0 0# true }
  ensures { #"s-crtl.ads" 50 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "dup" defined at s-crtl.ads:101, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__dup___axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int___axiom
 use        System__crtl__dup

 val dup #"s-crtl.ads" 101 0 0# 
   (handle : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__dup.dup handle)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom dup__post_axiom :
  (forall handle #"s-crtl.ads" 101 0 0#  : int [(System__crtl__dup.dup handle)].
   ( (System__crtl__int___axiom.dynamic_invariant handle True True True) -> (let result = (System__crtl__dup.dup handle) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "dup2" defined at s-crtl.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__dup2___axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int___axiom
 use        System__crtl__dup2

 val dup2 #"s-crtl.ads" 104 0 0# 
   (from : int) (to__ : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__dup2.dup2 from to__)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom dup2__post_axiom :
  (forall from #"s-crtl.ads" 104 0 0#  to__ #"s-crtl.ads" 104 0 0#  : int [(System__crtl__dup2.dup2 from to__)].
   ( ( (System__crtl__int___axiom.dynamic_invariant from True True True) /\ (System__crtl__int___axiom.dynamic_invariant to__ True True True) ) -> (let result = (System__crtl__dup2.dup2 from to__) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fclose" defined at s-crtl.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fclose___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fclose

 val fclose #"s-crtl.ads" 107 0 0# 
   (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fclose.fclose stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fclose__post_axiom :
  (forall stream #"s-crtl.ads" 107 0 0#  : BV32.t [(System__crtl__fclose.fclose stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__fclose.fclose stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fdopen" defined at s-crtl.ads:110, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fdopen___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fdopen

 val fdopen #"s-crtl.ads" 110 0 0# 
   (handle : int) (mode : BV32.t) : BV32.t
  requires { #"s-crtl.ads" 50 0 0# true }
  ensures { #"s-crtl.ads" 50 0 0# ( ( (result = (System__crtl__fdopen.fdopen handle mode)) /\ true ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom fdopen__post_axiom :
  (forall handle #"s-crtl.ads" 110 0 0#  : int.
  (forall mode #"s-crtl.ads" 110 0 0#  : BV32.t [(System__crtl__fdopen.fdopen handle mode)].
   ( ( (System__crtl__int___axiom.dynamic_invariant handle True True True) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode)) else true) ) -> (let result = (System__crtl__fdopen.fdopen handle mode) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fflush" defined at s-crtl.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fflush___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fflush

 val fflush #"s-crtl.ads" 113 0 0# 
   (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fflush.fflush stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fflush__post_axiom :
  (forall stream #"s-crtl.ads" 113 0 0#  : BV32.t [(System__crtl__fflush.fflush stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__fflush.fflush stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fgetc" defined at s-crtl.ads:116, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fgetc___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fgetc

 val fgetc #"s-crtl.ads" 116 0 0# 
   (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fgetc.fgetc stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fgetc__post_axiom :
  (forall stream #"s-crtl.ads" 116 0 0#  : BV32.t [(System__crtl__fgetc.fgetc stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__fgetc.fgetc stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fgets" defined at s-crtl.ads:119, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fgets___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fgets

 val fgets #"s-crtl.ads" 119 0 0# 
   (strng : BV32.t) (n : int) (stream : BV32.t) : BV32.t
  requires { #"s-crtl.ads" 41 0 0# true }
  ensures { #"s-crtl.ads" 41 0 0# ( ( (result = (System__crtl__fgets.fgets strng n stream)) /\ true ) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
   (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last result)) else true) ) }
 
 axiom fgets__post_axiom :
  (forall strng #"s-crtl.ads" 119 0 0#  stream #"s-crtl.ads" 119 0 0#  : BV32.t.
  (forall n #"s-crtl.ads" 119 0 0#  : int [(System__crtl__fgets.fgets strng n stream)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last strng)) else true) /\ (System__crtl__int___axiom.dynamic_invariant n True True True) ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fgets.fgets strng n stream) in (
    (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
     (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fopen" defined at s-crtl.ads:122, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fopen___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__filename_encoding___axiom
 use        System__crtl__fopen

 val fopen #"s-crtl.ads" 122 0 0# 
   (filename : BV32.t) (mode : BV32.t) (encoding : int) : BV32.t
  requires { #"s-crtl.ads" 50 0 0# true }
  ensures { #"s-crtl.ads" 50 0 0# ( ( (result = (System__crtl__fopen.fopen filename mode encoding)) /\ true ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom fopen__post_axiom :
  (forall filename #"s-crtl.ads" 123 0 0#  mode #"s-crtl.ads" 124 0 0#  : BV32.t.
  (forall encoding #"s-crtl.ads" 125 0 0#  : int [(System__crtl__fopen.fopen filename mode encoding)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode)) else true) ) /\ (System__crtl__filename_encoding___axiom.dynamic_invariant encoding True True True) ) -> (let result = (System__crtl__fopen.fopen filename mode encoding) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputc" defined at s-crtl.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputc___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fputc

 val fputc #"s-crtl.ads" 128 0 0# 
   (c : int) (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fputc.fputc c stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fputc__post_axiom :
  (forall c #"s-crtl.ads" 128 0 0#  : int.
  (forall stream #"s-crtl.ads" 128 0 0#  : BV32.t [(System__crtl__fputc.fputc c stream)].
   ( ( (System__crtl__int___axiom.dynamic_invariant c True True True) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fputc.fputc c stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputwc" defined at s-crtl.ads:131, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputwc___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fputwc

 val fputwc #"s-crtl.ads" 131 0 0# 
   (c : int) (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fputwc.fputwc c stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fputwc__post_axiom :
  (forall c #"s-crtl.ads" 131 0 0#  : int.
  (forall stream #"s-crtl.ads" 131 0 0#  : BV32.t [(System__crtl__fputwc.fputwc c stream)].
   ( ( (System__crtl__int___axiom.dynamic_invariant c True True True) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fputwc.fputwc c stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fputs" defined at s-crtl.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fputs___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__fputs

 val fputs #"s-crtl.ads" 134 0 0# 
   (strng : BV32.t) (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fputs.fputs strng stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fputs__post_axiom :
  (forall strng #"s-crtl.ads" 134 0 0#  stream #"s-crtl.ads" 134 0 0#  : BV32.t [(System__crtl__fputs.fputs strng stream)].
   ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last strng)) else true) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__fputs.fputs strng stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "free" defined at s-crtl.ads:137, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__free___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val free #"s-crtl.ads" 137 0 0# 
   (ptr : BV32.t) : unit
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "freopen" defined at s-crtl.ads:140, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__freopen___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__filename_encoding___axiom
 use        System__crtl__freopen

 val freopen #"s-crtl.ads" 140 0 0# 
   (filename : BV32.t) (mode : BV32.t) (stream : BV32.t) (encoding : int) : BV32.t
  requires { #"s-crtl.ads" 50 0 0# true }
  ensures { #"s-crtl.ads" 50 0 0# ( ( (result = (System__crtl__freopen.freopen filename mode stream encoding)) /\ true ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom freopen__post_axiom :
  (forall filename #"s-crtl.ads" 141 0 0#  mode #"s-crtl.ads" 142 0 0#  stream #"s-crtl.ads" 143 0 0#  : BV32.t.
  (forall encoding #"s-crtl.ads" 144 0 0#  : int [(System__crtl__freopen.freopen filename mode stream encoding)].
   ( ( ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last mode)) else true) ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) /\ (System__crtl__filename_encoding___axiom.dynamic_invariant encoding True True True) ) -> (let result = (System__crtl__freopen.freopen filename mode stream encoding) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fseek" defined at s-crtl.ads:147, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fseek___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__long___axiom
 use        System__crtl__fseek

 val fseek #"s-crtl.ads" 147 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fseek.fseek stream offset origin)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fseek__post_axiom :
  (forall stream #"s-crtl.ads" 148 0 0#  : BV32.t.
  (forall offset #"s-crtl.ads" 149 0 0#  origin #"s-crtl.ads" 150 0 0#  : int [(System__crtl__fseek.fseek stream offset origin)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) /\ (System__crtl__long___axiom.dynamic_invariant offset True True True) ) /\ (System__crtl__int___axiom.dynamic_invariant origin True True True) ) -> (let result = (System__crtl__fseek.fseek stream offset origin) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "fseek64" defined at s-crtl.ads:153, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__fseek64___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__int64___axiom
 use        System__crtl__fseek64

 val fseek64 #"s-crtl.ads" 153 0 0# 
   (stream : BV32.t) (offset : int) (origin : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__fseek64.fseek64 stream offset origin)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fseek64__post_axiom :
  (forall stream #"s-crtl.ads" 154 0 0#  : BV32.t.
  (forall offset #"s-crtl.ads" 155 0 0#  origin #"s-crtl.ads" 156 0 0#  : int [(System__crtl__fseek64.fseek64 stream offset origin)].
   ( ( ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) /\ (System__crtl__int64___axiom.dynamic_invariant offset True True True) ) /\ (System__crtl__int___axiom.dynamic_invariant origin True True True) ) -> (let result = (System__crtl__fseek64.fseek64 stream offset origin) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "ftell" defined at s-crtl.ads:159, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ftell___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__long___axiom
 use        System__crtl__ftell

 val ftell #"s-crtl.ads" 159 0 0# 
   (stream : BV32.t) : int
  requires { #"s-crtl.ads" 55 0 0# true }
  ensures { #"s-crtl.ads" 55 0 0# ( ( (result = (System__crtl__ftell.ftell stream)) /\ true ) /\ (System__crtl__long___axiom.dynamic_invariant result True False True) ) }
 
 axiom ftell__post_axiom :
  (forall stream #"s-crtl.ads" 159 0 0#  : BV32.t [(System__crtl__ftell.ftell stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__ftell.ftell stream) in (
    (System__crtl__long___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ftell64" defined at s-crtl.ads:162, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ftell64___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int64___axiom
 use        System__crtl__ftell64

 val ftell64 #"s-crtl.ads" 162 0 0# 
   (stream : BV32.t) : int
  requires { #"s-crtl.ads" 65 0 0# true }
  ensures { #"s-crtl.ads" 65 0 0# ( ( (result = (System__crtl__ftell64.ftell64 stream)) /\ true ) /\ (System__crtl__int64___axiom.dynamic_invariant result True False True) ) }
 
 axiom ftell64__post_axiom :
  (forall stream #"s-crtl.ads" 162 0 0#  : BV32.t [(System__crtl__ftell64.ftell64 stream)].
   ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) -> (let result = (System__crtl__ftell64.ftell64 stream) in (
    (System__crtl__int64___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "getenv" defined at s-crtl.ads:165, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__getenv___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Standard__string
 use        Standard__string___axiom
 use        System__address___axiom
 use        System__crtl__getenv

 val getenv #"s-crtl.ads" 165 0 0# 
   (s : Standard__string.string) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__crtl__getenv.getenv s)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom getenv__post_axiom :
  (forall s #"s-crtl.ads" 165 0 0#  : Standard__string.string [(System__crtl__getenv.getenv s)].
   ( (Standard__string___axiom.dynamic_invariant s True True True) -> (let result = (System__crtl__getenv.getenv s) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "isatty" defined at s-crtl.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__isatty___axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int___axiom
 use        System__crtl__isatty

 val isatty #"s-crtl.ads" 168 0 0# 
   (handle : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__isatty.isatty handle)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom isatty__post_axiom :
  (forall handle #"s-crtl.ads" 168 0 0#  : int [(System__crtl__isatty.isatty handle)].
   ( (System__crtl__int___axiom.dynamic_invariant handle True True True) -> (let result = (System__crtl__isatty.isatty handle) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "lseek" defined at s-crtl.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__lseek___axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int___axiom
 use        System__crtl__off_t___axiom
 use        System__crtl__lseek

 val lseek #"s-crtl.ads" 171 0 0# 
   (fd : int) (offset : int) (direction : int) : int
  requires { #"s-crtl.ads" 58 0 0# true }
  ensures { #"s-crtl.ads" 58 0 0# ( ( (result = (System__crtl__lseek.lseek fd offset direction)) /\ true ) /\ (System__crtl__off_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom lseek__post_axiom :
  (forall fd #"s-crtl.ads" 171 0 0#  offset #"s-crtl.ads" 171 0 0#  direction #"s-crtl.ads" 171 0 0#  : int [(System__crtl__lseek.lseek fd offset direction)].
   ( ( ( (System__crtl__int___axiom.dynamic_invariant fd True True True) /\ (System__crtl__off_t___axiom.dynamic_invariant offset True True True) ) /\ (System__crtl__int___axiom.dynamic_invariant direction True True True) ) -> (let result = (System__crtl__lseek.lseek fd offset direction) in (
    (System__crtl__off_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "malloc" defined at s-crtl.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__malloc___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__crtl__size_t___axiom
 use        System__crtl__malloc

 val malloc #"s-crtl.ads" 174 0 0# 
   (size : BV32.t) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__crtl__malloc.malloc size)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom malloc__post_axiom :
  (forall size #"s-crtl.ads" 174 0 0#  : BV32.t [(System__crtl__malloc.malloc size)].
   ( (System__crtl__size_t___axiom.dynamic_invariant size True True True) -> (let result = (System__crtl__malloc.malloc size) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "memcpy" defined at s-crtl.ads:177, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__memcpy___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val memcpy #"s-crtl.ads" 177 0 0# 
   (s1 : BV32.t) (s2 : BV32.t) (n : BV32.t) : unit
  requires { #"s-crtl.ads" 60 0 0# true }
  ensures { #"s-crtl.ads" 60 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "memmove" defined at s-crtl.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__memmove___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val memmove #"s-crtl.ads" 180 0 0# 
   (s1 : BV32.t) (s2 : BV32.t) (n : BV32.t) : unit
  requires { #"s-crtl.ads" 60 0 0# true }
  ensures { #"s-crtl.ads" 60 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "mktemp" defined at s-crtl.ads:183, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__mktemp___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val mktemp #"s-crtl.ads" 183 0 0# 
   (template : BV32.t) : unit
  requires { #"s-crtl.ads" 41 0 0# true }
  ensures { #"s-crtl.ads" 41 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "pclose" defined at s-crtl.ads:186, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__pclose___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__crtl__int___axiom
 use        System__crtl__pclose

 val pclose #"s-crtl.ads" 186 0 0# 
   (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__pclose.pclose stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom pclose__post_axiom :
  (forall stream #"s-crtl.ads" 186 0 0#  : BV32.t [(System__crtl__pclose.pclose stream)].
   ( (System__address___axiom.dynamic_invariant stream True True True) -> (let result = (System__crtl__pclose.pclose stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "popen" defined at s-crtl.ads:189, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__popen___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__crtl__popen

 val popen #"s-crtl.ads" 189 0 0# 
   (command : BV32.t) (mode : BV32.t) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__crtl__popen.popen command mode)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom popen__post_axiom :
  (forall command #"s-crtl.ads" 189 0 0#  mode #"s-crtl.ads" 189 0 0#  : BV32.t [(System__crtl__popen.popen command mode)].
   ( ( (System__address___axiom.dynamic_invariant command True True True) /\ (System__address___axiom.dynamic_invariant mode True True True) ) -> (let result = (System__crtl__popen.popen command mode) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "realloc" defined at s-crtl.ads:192, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__realloc___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__address___axiom
 use        System__crtl__size_t___axiom
 use        System__crtl__realloc

 val realloc #"s-crtl.ads" 192 0 0# 
   (ptr : BV32.t) (size : BV32.t) : BV32.t
  requires { #"system.ads" 108 0 0# true }
  ensures { #"system.ads" 108 0 0# ( ( (result = (System__crtl__realloc.realloc ptr size)) /\ true ) /\ (System__address___axiom.dynamic_invariant result True False True) ) }
 
 axiom realloc__post_axiom :
  (forall ptr #"s-crtl.ads" 193 0 0#  size #"s-crtl.ads" 193 0 0#  : BV32.t [(System__crtl__realloc.realloc ptr size)].
   ( ( (System__address___axiom.dynamic_invariant ptr True True True) /\ (System__crtl__size_t___axiom.dynamic_invariant size True True True) ) -> (let result = (System__crtl__realloc.realloc ptr size) in (
    (System__address___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "rewind" defined at s-crtl.ads:196, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__rewind___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val rewind #"s-crtl.ads" 196 0 0# 
   (stream : BV32.t) : unit
  requires { #"s-crtl.ads" 50 0 0# true }
  ensures { #"s-crtl.ads" 50 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "rmdir" defined at s-crtl.ads:199, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__rmdir___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        System__crtl__int___axiom
 use        System__crtl__rmdir

 val rmdir #"s-crtl.ads" 199 0 0# 
   (dir_name : Standard__string.string) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__rmdir.rmdir dir_name)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom rmdir__post_axiom :
  (forall dir_name #"s-crtl.ads" 199 0 0#  : Standard__string.string [(System__crtl__rmdir.rmdir dir_name)].
   ( (Standard__string___axiom.dynamic_invariant dir_name True True True) -> (let result = (System__crtl__rmdir.rmdir dir_name) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "chdir" defined at s-crtl.ads:202, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__chdir___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        System__crtl__int___axiom
 use        System__crtl__chdir

 val chdir #"s-crtl.ads" 202 0 0# 
   (dir_name : Standard__string.string) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__chdir.chdir dir_name)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom chdir__post_axiom :
  (forall dir_name #"s-crtl.ads" 202 0 0#  : Standard__string.string [(System__crtl__chdir.chdir dir_name)].
   ( (Standard__string___axiom.dynamic_invariant dir_name True True True) -> (let result = (System__crtl__chdir.chdir dir_name) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "mkdir" defined at s-crtl.ads:205, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__mkdir___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        System__crtl__int___axiom
 use        System__crtl__filename_encoding___axiom
 use        System__crtl__mkdir

 val mkdir #"s-crtl.ads" 205 0 0# 
   (dir_name : Standard__string.string) (encoding : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__mkdir.mkdir dir_name encoding)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom mkdir__post_axiom :
  (forall dir_name #"s-crtl.ads" 206 0 0#  : Standard__string.string.
  (forall encoding #"s-crtl.ads" 207 0 0#  : int [(System__crtl__mkdir.mkdir dir_name encoding)].
   ( ( (Standard__string___axiom.dynamic_invariant dir_name True True True) /\ (System__crtl__filename_encoding___axiom.dynamic_invariant encoding True True True) ) -> (let result = (System__crtl__mkdir.mkdir dir_name encoding) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "setvbuf" defined at s-crtl.ads:210, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__setvbuf___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__size_t___axiom
 use        System__crtl__setvbuf

 val setvbuf #"s-crtl.ads" 210 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__setvbuf.setvbuf stream buffer mode size)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom setvbuf__post_axiom :
  (forall stream #"s-crtl.ads" 211 0 0#  buffer #"s-crtl.ads" 212 0 0#  size #"s-crtl.ads" 214 0 0#  : BV32.t.
  (forall mode #"s-crtl.ads" 213 0 0#  : int [(System__crtl__setvbuf.setvbuf stream buffer mode size)].
   ( ( ( ( (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer)) else true) ) /\ (System__crtl__int___axiom.dynamic_invariant mode True True True) ) /\ (System__crtl__size_t___axiom.dynamic_invariant size True True True) ) -> (let result = (System__crtl__setvbuf.setvbuf stream buffer mode size) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "tmpnam" defined at s-crtl.ads:217, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__tmpnam___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val tmpnam #"s-crtl.ads" 217 0 0# 
   (str : BV32.t) : unit
  requires { #"s-crtl.ads" 41 0 0# true }
  ensures { #"s-crtl.ads" 41 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "tmpfile" defined at s-crtl.ads:220, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__tmpfile___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__tmpfile

 val tmpfile #"s-crtl.ads" 220 0 0# 
   (__void_param : unit) : BV32.t
  requires { #"s-crtl.ads" 50 0 0# true }
  ensures { #"s-crtl.ads" 50 0 0# ( ( (result = (System__crtl__tmpfile.tmpfile ())) /\ true ) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
   (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true) ) }
 
 axiom tmpfile__post_axiom :
  (forall __void_param #"s-crtl.ads" 220 0 0#  : unit [(System__crtl__tmpfile.tmpfile __void_param)].
   ( true -> (let result = (System__crtl__tmpfile.tmpfile __void_param) in (
    (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
     (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ungetc" defined at s-crtl.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__ungetc___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__files
 use        System__crtl__int___axiom
 use        System__crtl__ungetc

 val ungetc #"s-crtl.ads" 223 0 0# 
   (c : int) (stream : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__ungetc.ungetc c stream)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom ungetc__post_axiom :
  (forall c #"s-crtl.ads" 223 0 0#  : int.
  (forall stream #"s-crtl.ads" 223 0 0#  : BV32.t [(System__crtl__ungetc.ungetc c stream)].
   ( ( (System__crtl__int___axiom.dynamic_invariant c True True True) /\ (if (( True \/ (BV32.ule System__crtl__files.first System__crtl__files.last) )) then (
    (System__crtl__files.dynamic_property System__crtl__files.first System__crtl__files.last stream)) else true) ) -> (let result = (System__crtl__ungetc.ungetc c stream) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "unlink" defined at s-crtl.ads:226, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__unlink___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int___axiom
 use        System__crtl__unlink

 val unlink #"s-crtl.ads" 226 0 0# 
   (filename : BV32.t) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__unlink.unlink filename)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom unlink__post_axiom :
  (forall filename #"s-crtl.ads" 226 0 0#  : BV32.t [(System__crtl__unlink.unlink filename)].
   ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) -> (let result = (System__crtl__unlink.unlink filename) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "open" defined at s-crtl.ads:229, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__open___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int___axiom
 use        System__crtl__open

 val open #"s-crtl.ads" 229 0 0# 
   (filename : BV32.t) (oflag : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__open.open filename oflag)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom open__post_axiom :
  (forall filename #"s-crtl.ads" 229 0 0#  : BV32.t.
  (forall oflag #"s-crtl.ads" 229 0 0#  : int [(System__crtl__open.open filename oflag)].
   ( ( (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last filename)) else true) /\ (System__crtl__int___axiom.dynamic_invariant oflag True True True) ) -> (let result = (System__crtl__open.open filename oflag) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "close" defined at s-crtl.ads:232, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__close___axiom
 use import "_gnatprove_standard".Main
 use        System__crtl__int___axiom
 use        System__crtl__close

 val close #"s-crtl.ads" 232 0 0# 
   (fd : int) : int
  requires { #"s-crtl.ads" 53 0 0# true }
  ensures { #"s-crtl.ads" 53 0 0# ( ( (result = (System__crtl__close.close fd)) /\ true ) /\ (System__crtl__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom close__post_axiom :
  (forall fd #"s-crtl.ads" 232 0 0#  : int [(System__crtl__close.close fd)].
   ( (System__crtl__int___axiom.dynamic_invariant fd True True True) -> (let result = (System__crtl__close.close fd) in (
    (System__crtl__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "read" defined at s-crtl.ads:235, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__read___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int___axiom
 use        System__crtl__size_t___axiom
 use        System__crtl__ssize_t___axiom
 use        System__crtl__read

 val read #"s-crtl.ads" 235 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int
  requires { #"s-crtl.ads" 62 0 0# true }
  ensures { #"s-crtl.ads" 62 0 0# ( ( (result = (System__crtl__read.read fd buffer count)) /\ true ) /\ (System__crtl__ssize_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom read__post_axiom :
  (forall fd #"s-crtl.ads" 235 0 0#  : int.
  (forall buffer #"s-crtl.ads" 235 0 0#  count #"s-crtl.ads" 235 0 0#  : BV32.t [(System__crtl__read.read fd buffer count)].
   ( ( ( (System__crtl__int___axiom.dynamic_invariant fd True True True) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer)) else true) ) /\ (System__crtl__size_t___axiom.dynamic_invariant count True True True) ) -> (let result = (System__crtl__read.read fd buffer count) in (
    (System__crtl__ssize_t___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "write" defined at s-crtl.ads:238, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__crtl__write___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        System__crtl__chars
 use        System__crtl__int___axiom
 use        System__crtl__size_t___axiom
 use        System__crtl__ssize_t___axiom
 use        System__crtl__write

 val write #"s-crtl.ads" 238 0 0# 
   (fd : int) (buffer : BV32.t) (count : BV32.t) : int
  requires { #"s-crtl.ads" 62 0 0# true }
  ensures { #"s-crtl.ads" 62 0 0# ( ( (result = (System__crtl__write.write fd buffer count)) /\ true ) /\ (System__crtl__ssize_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom write__post_axiom :
  (forall fd #"s-crtl.ads" 238 0 0#  : int.
  (forall buffer #"s-crtl.ads" 238 0 0#  count #"s-crtl.ads" 238 0 0#  : BV32.t [(System__crtl__write.write fd buffer count)].
   ( ( ( (System__crtl__int___axiom.dynamic_invariant fd True True True) /\ (if (( True \/ (BV32.ule System__crtl__chars.first System__crtl__chars.last) )) then (
    (System__crtl__chars.dynamic_property System__crtl__chars.first System__crtl__chars.last buffer)) else true) ) /\ (System__crtl__size_t___axiom.dynamic_invariant count True True True) ) -> (let result = (System__crtl__write.write fd buffer count) in (
    (System__crtl__ssize_t___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "stdin" defined at i-cstrea.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stdin___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stdin

 val stdin #"i-cstrea.ads" 72 0 0# 
   (__void_param : unit) : BV32.t
  requires { #"i-cstrea.ads" 41 0 0# true }
  ensures { #"i-cstrea.ads" 41 0 0# ( ( (result = (Interfaces__c_streams__stdin.stdin ())) /\ true ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
   (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true) ) }
 
 axiom stdin__post_axiom :
  (forall __void_param #"i-cstrea.ads" 72 0 0#  : unit [(Interfaces__c_streams__stdin.stdin __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stdin.stdin __void_param) in (
    (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
     (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "stdout" defined at i-cstrea.ads:73, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stdout___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stdout

 val stdout #"i-cstrea.ads" 73 0 0# 
   (__void_param : unit) : BV32.t
  requires { #"i-cstrea.ads" 41 0 0# true }
  ensures { #"i-cstrea.ads" 41 0 0# ( ( (result = (Interfaces__c_streams__stdout.stdout ())) /\ true ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
   (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true) ) }
 
 axiom stdout__post_axiom :
  (forall __void_param #"i-cstrea.ads" 73 0 0#  : unit [(Interfaces__c_streams__stdout.stdout __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stdout.stdout __void_param) in (
    (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
     (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "stderr" defined at i-cstrea.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__stderr___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__stderr

 val stderr #"i-cstrea.ads" 74 0 0# 
   (__void_param : unit) : BV32.t
  requires { #"i-cstrea.ads" 41 0 0# true }
  ensures { #"i-cstrea.ads" 41 0 0# ( ( (result = (Interfaces__c_streams__stderr.stderr ())) /\ true ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
   (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true) ) }
 
 axiom stderr__post_axiom :
  (forall __void_param #"i-cstrea.ads" 74 0 0#  : unit [(Interfaces__c_streams__stderr.stderr __void_param)].
   ( true -> (let result = (Interfaces__c_streams__stderr.stderr __void_param) in (
    (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
     (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last result)) else true)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "feof" defined at i-cstrea.ads:95, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__feof___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int___axiom
 use        Interfaces__c_streams__feof

 val feof #"i-cstrea.ads" 95 0 0# 
   (stream : BV32.t) : int
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# ( ( (result = (Interfaces__c_streams__feof.feof stream)) /\ true ) /\ (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom feof__post_axiom :
  (forall stream #"i-cstrea.ads" 95 0 0#  : BV32.t [(Interfaces__c_streams__feof.feof stream)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) -> (let result = (Interfaces__c_streams__feof.feof stream) in (
    (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "ferror" defined at i-cstrea.ads:97, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__ferror___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int___axiom
 use        Interfaces__c_streams__ferror

 val ferror #"i-cstrea.ads" 97 0 0# 
   (stream : BV32.t) : int
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# ( ( (result = (Interfaces__c_streams__ferror.ferror stream)) /\ true ) /\ (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom ferror__post_axiom :
  (forall stream #"i-cstrea.ads" 97 0 0#  : BV32.t [(Interfaces__c_streams__ferror.ferror stream)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) -> (let result = (Interfaces__c_streams__ferror.ferror stream) in (
    (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fileno" defined at i-cstrea.ads:106, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fileno___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int___axiom
 use        Interfaces__c_streams__fileno

 val fileno #"i-cstrea.ads" 106 0 0# 
   (stream : BV32.t) : int
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# ( ( (result = (Interfaces__c_streams__fileno.fileno stream)) /\ true ) /\ (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom fileno__post_axiom :
  (forall stream #"i-cstrea.ads" 106 0 0#  : BV32.t [(Interfaces__c_streams__fileno.fileno stream)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) -> (let result = (Interfaces__c_streams__fileno.fileno stream) in (
    (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fread___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t___axiom
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fread

 val fread #"i-cstrea.ads" 128 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
  requires { #"i-cstrea.ads" 44 0 0# true }
  ensures { #"i-cstrea.ads" 44 0 0# ( ( (result = (Interfaces__c_streams__fread.fread buffer size count stream)) /\ true ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom fread__post_axiom :
  (forall buffer #"i-cstrea.ads" 129 0 0#  size #"i-cstrea.ads" 130 0 0#  count #"i-cstrea.ads" 131 0 0#  stream #"i-cstrea.ads" 132 0 0#  : BV32.t [(Interfaces__c_streams__fread.fread buffer size count stream)].
   ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last) )) then (
    (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer)) else true) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant size True True True) ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant count True True True) ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) ) -> (let result = (Interfaces__c_streams__fread.fread buffer size count stream) in (
    (Interfaces__c_streams__size_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fread__2___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t___axiom
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fread__2

 val fread__2 #"i-cstrea.ads" 134 0 0# 
   (buffer : BV32.t) (index : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
  requires { #"i-cstrea.ads" 44 0 0# true }
  ensures { #"i-cstrea.ads" 44 0 0# ( ( (result = (Interfaces__c_streams__fread__2.fread__2 buffer index size count stream)) /\ true ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom fread__2__post_axiom :
  (forall buffer #"i-cstrea.ads" 135 0 0#  index #"i-cstrea.ads" 136 0 0#  size #"i-cstrea.ads" 137 0 0#  count #"i-cstrea.ads" 138 0 0#  stream #"i-cstrea.ads" 139 0 0#  : BV32.t [(Interfaces__c_streams__fread__2.fread__2 buffer index size count stream)].
   ( ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last) )) then (
    (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer)) else true) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant index True True True) ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant size True True True) ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant count True True True) ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) ) -> (let result = (Interfaces__c_streams__fread__2.fread__2 buffer index size count stream) in (
    (Interfaces__c_streams__size_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "fwrite" defined at i-cstrea.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__fwrite___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__size_t___axiom
 use        Interfaces__c_streams__voids
 use        Interfaces__c_streams__fwrite

 val fwrite #"i-cstrea.ads" 171 0 0# 
   (buffer : BV32.t) (size : BV32.t) (count : BV32.t) (stream : BV32.t) : BV32.t
  requires { #"i-cstrea.ads" 44 0 0# true }
  ensures { #"i-cstrea.ads" 44 0 0# ( ( (result = (Interfaces__c_streams__fwrite.fwrite buffer size count stream)) /\ true ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant result True False True) ) }
 
 axiom fwrite__post_axiom :
  (forall buffer #"i-cstrea.ads" 172 0 0#  size #"i-cstrea.ads" 173 0 0#  count #"i-cstrea.ads" 174 0 0#  stream #"i-cstrea.ads" 175 0 0#  : BV32.t [(Interfaces__c_streams__fwrite.fwrite buffer size count stream)].
   ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last) )) then (
    (Interfaces__c_streams__voids.dynamic_property Interfaces__c_streams__voids.first Interfaces__c_streams__voids.last buffer)) else true) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant size True True True) ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant count True True True) ) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) ) -> (let result = (Interfaces__c_streams__fwrite.fwrite buffer size count stream) in (
    (Interfaces__c_streams__size_t___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "setvbuf" defined at i-cstrea.ads:184, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__setvbuf___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__int___axiom
 use        Interfaces__c_streams__size_t___axiom
 use        Interfaces__c_streams__setvbuf

 val setvbuf #"i-cstrea.ads" 184 0 0# 
   (stream : BV32.t) (buffer : BV32.t) (mode : int) (size : BV32.t) : int
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# ( ( (result = (Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size)) /\ true ) /\ (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom setvbuf__post_axiom :
  (forall stream #"i-cstrea.ads" 185 0 0#  buffer #"i-cstrea.ads" 186 0 0#  size #"i-cstrea.ads" 188 0 0#  : BV32.t.
  (forall mode #"i-cstrea.ads" 187 0 0#  : int [(Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size)].
   ( ( ( ( (if (( True \/ (BV32.ule Interfaces__c_streams__files.first Interfaces__c_streams__files.last) )) then (
    (Interfaces__c_streams__files.dynamic_property Interfaces__c_streams__files.first Interfaces__c_streams__files.last stream)) else true) /\ (if (( True \/ (BV32.ule Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last) )) then (
    (Interfaces__c_streams__chars.dynamic_property Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last buffer)) else true) ) /\ (Interfaces__c_streams__int___axiom.dynamic_invariant mode True True True) ) /\ (Interfaces__c_streams__size_t___axiom.dynamic_invariant size True True True) ) -> (let result = (Interfaces__c_streams__setvbuf.setvbuf stream buffer mode size) in (
    (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True)))
    )))

end

(* Module for declaring a program function (and possibly an axiom) for "file_exists" defined at i-cstrea.ads:212, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__file_exists___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__int___axiom
 use        Interfaces__c_streams__file_exists

 val file_exists #"i-cstrea.ads" 212 0 0# 
   (name : BV32.t) : int
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# ( ( (result = (Interfaces__c_streams__file_exists.file_exists name)) /\ true ) /\ (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom file_exists__post_axiom :
  (forall name #"i-cstrea.ads" 212 0 0#  : BV32.t [(Interfaces__c_streams__file_exists.file_exists name)].
   ( (if (( True \/ (BV32.ule Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last) )) then (
    (Interfaces__c_streams__chars.dynamic_property Interfaces__c_streams__chars.first Interfaces__c_streams__chars.last name)) else true) -> (let result = (Interfaces__c_streams__file_exists.file_exists name) in (
    (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_regular_file" defined at i-cstrea.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__is_regular_file___axiom
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int___axiom
 use        Interfaces__c_streams__is_regular_file

 val is_regular_file #"i-cstrea.ads" 215 0 0# 
   (handle : int) : int
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# ( ( (result = (Interfaces__c_streams__is_regular_file.is_regular_file handle)) /\ true ) /\ (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True) ) }
 
 axiom is_regular_file__post_axiom :
  (forall handle #"i-cstrea.ads" 215 0 0#  : int [(Interfaces__c_streams__is_regular_file.is_regular_file handle)].
   ( (Interfaces__c_streams__int___axiom.dynamic_invariant handle True True True) -> (let result = (Interfaces__c_streams__is_regular_file.is_regular_file handle) in (
    (Interfaces__c_streams__int___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "set_binary_mode" defined at i-cstrea.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_binary_mode___axiom
 use import "_gnatprove_standard".Main

 val set_binary_mode #"i-cstrea.ads" 223 0 0# 
   (handle : int) : unit
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_text_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_text_mode___axiom
 use import "_gnatprove_standard".Main

 val set_text_mode #"i-cstrea.ads" 224 0 0# 
   (handle : int) : unit
  requires { #"i-cstrea.ads" 42 0 0# true }
  ensures { #"i-cstrea.ads" 42 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_mode" defined at i-cstrea.ads:254, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__set_mode___axiom
 use import "_gnatprove_standard".Main

 val set_mode #"i-cstrea.ads" 254 0 0# 
   (handle : int) (mode : int) : unit
  requires { #"i-cstrea.ads" 230 0 0# true }
  ensures { #"i-cstrea.ads" 230 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "full_name" defined at i-cstrea.ads:262, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Interfaces__c_streams__full_name___axiom
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".BV32

 val full_name #"i-cstrea.ads" 262 0 0# 
   (nam : BV32.t) (buffer : BV32.t) : unit
  requires { #"i-cstrea.ads" 40 0 0# true }
  ensures { #"i-cstrea.ads" 40 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__get_wc_encoding_method___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        System__wch_con__wc_encoding_method___axiom
 use        System__wch_con__get_wc_encoding_method

 val get_wc_encoding_method #"s-wchcon.ads" 203 0 0# 
   (c : int) : int
  requires { #"s-wchcon.ads" 94 0 0# true }
  ensures { #"s-wchcon.ads" 94 0 0# ( ( (result = (System__wch_con__get_wc_encoding_method.get_wc_encoding_method c)) /\ true ) /\ (System__wch_con__wc_encoding_method___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_wc_encoding_method__post_axiom :
  (forall c #"s-wchcon.ads" 203 0 0#  : int [(System__wch_con__get_wc_encoding_method.get_wc_encoding_method c)].
   ( (Standard__character___axiom.dynamic_invariant c True True True) -> (let result = (System__wch_con__get_wc_encoding_method.get_wc_encoding_method c) in (
    (System__wch_con__wc_encoding_method___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__get_wc_encoding_method__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        System__wch_con__wc_encoding_method___axiom
 use        System__wch_con__get_wc_encoding_method__2

 val get_wc_encoding_method__2 #"s-wchcon.ads" 207 0 0# 
   (s : Standard__string.string) : int
  requires { #"s-wchcon.ads" 94 0 0# true }
  ensures { #"s-wchcon.ads" 94 0 0# ( ( (result = (System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s)) /\ true ) /\ (System__wch_con__wc_encoding_method___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_wc_encoding_method__2__post_axiom :
  (forall s #"s-wchcon.ads" 207 0 0#  : Standard__string.string [(System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s)].
   ( (Standard__string___axiom.dynamic_invariant s True True True) -> (let result = (System__wch_con__get_wc_encoding_method__2.get_wc_encoding_method__2 s) in (
    (System__wch_con__wc_encoding_method___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module System__wch_con__is_start_of_encoding___axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__is_start_of_encoding

 val is_start_of_encoding #"s-wchcon.ads" 212 0 0# 
   (c : int) (em : int) : bool
  requires { #"s-wchcon.ads" 94 0 0# true }
  ensures { #"s-wchcon.ads" 94 0 0# ( ( (result = (System__wch_con__is_start_of_encoding.is_start_of_encoding c em)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "create" defined at a-textio.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__create___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom

 val create #"a-textio.ads" 86 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) (mode : int) (name : Standard__string.string) (form : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (Ada__text_io__file_type___axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "open" defined at a-textio.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__open___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom

 val open #"a-textio.ads" 92 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) (mode : int) (name : Standard__string.string) (form : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (Ada__text_io__file_type___axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "close" defined at a-textio.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__close___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom

 val close #"a-textio.ads" 98 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# (Ada__text_io__file_type___axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "delete" defined at a-textio.ads:99, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__delete___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom

 val delete #"a-textio.ads" 99 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# (Ada__text_io__file_type___axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "reset" defined at a-textio.ads:100, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__reset___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom

 val reset #"a-textio.ads" 100 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) (mode : int) : unit
  requires { #"a-textio.ads" 53 0 0# true }
  ensures { #"a-textio.ads" 53 0 0# (Ada__text_io__file_type___axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__reset__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom

 val reset__2 #"a-textio.ads" 101 0 0# 
   (file : Ada__text_io__file_type.file_type__ref) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# (Ada__text_io__file_type___axiom.dynamic_invariant file.Ada__text_io__file_type.file_type__content True True True) }
  writes {file}

end

(* Module for declaring a program function (and possibly an axiom) for "mode" defined at a-textio.ads:103, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__mode___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__file_mode___axiom
 use        Ada__text_io__mode

 val mode #"a-textio.ads" 103 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { #"a-textio.ads" 53 0 0# true }
  ensures { #"a-textio.ads" 53 0 0# ( ( (result = (Ada__text_io__mode.mode file)) /\ true ) /\ (Ada__text_io__file_mode___axiom.dynamic_invariant result True False True) ) }
 
 axiom mode__post_axiom :
  (forall file #"a-textio.ads" 103 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__mode.mode file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__mode.mode file) in (
    (Ada__text_io__file_mode___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "name" defined at a-textio.ads:104, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__name___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__name

 val name #"a-textio.ads" 104 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__text_io__name.name file)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom name__post_axiom :
  (forall file #"a-textio.ads" 104 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__name.name file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__name.name file) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "form" defined at a-textio.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__form___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__form

 val form #"a-textio.ads" 105 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__text_io__form.form file)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom form__post_axiom :
  (forall file #"a-textio.ads" 105 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__form.form file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__form.form file) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "is_open" defined at a-textio.ads:107, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__is_open___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__is_open

 val is_open #"a-textio.ads" 107 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__is_open.is_open file)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "set_input" defined at a-textio.ads:113, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_input___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_input #"a-textio.ads" 113 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_output" defined at a-textio.ads:114, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_output___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_output #"a-textio.ads" 114 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_error" defined at a-textio.ads:115, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_error___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_error #"a-textio.ads" 115 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_input___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__standard_input

 val standard_input #"a-textio.ads" 117 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__standard_input.standard_input ())) /\ true ) /\ (Ada__text_io__file_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom standard_input__post_axiom :
  (forall __void_param #"a-textio.ads" 117 0 0#  : unit [(Ada__text_io__standard_input.standard_input __void_param)].
   ( true -> (let result = (Ada__text_io__standard_input.standard_input __void_param) in (
    (Ada__text_io__file_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_output___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__standard_output

 val standard_output #"a-textio.ads" 118 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__standard_output.standard_output ())) /\ true ) /\ (Ada__text_io__file_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom standard_output__post_axiom :
  (forall __void_param #"a-textio.ads" 118 0 0#  : unit [(Ada__text_io__standard_output.standard_output __void_param)].
   ( true -> (let result = (Ada__text_io__standard_output.standard_output __void_param) in (
    (Ada__text_io__file_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__standard_error___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__standard_error

 val standard_error #"a-textio.ads" 119 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__standard_error.standard_error ())) /\ true ) /\ (Ada__text_io__file_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom standard_error__post_axiom :
  (forall __void_param #"a-textio.ads" 119 0 0#  : unit [(Ada__text_io__standard_error.standard_error __void_param)].
   ( true -> (let result = (Ada__text_io__standard_error.standard_error __void_param) in (
    (Ada__text_io__file_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "current_input" defined at a-textio.ads:121, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_input___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__current_input

 val current_input #"a-textio.ads" 121 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__current_input.current_input ())) /\ true ) /\ (Ada__text_io__file_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom current_input__post_axiom :
  (forall __void_param #"a-textio.ads" 121 0 0#  : unit [(Ada__text_io__current_input.current_input __void_param)].
   ( true -> (let result = (Ada__text_io__current_input.current_input __void_param) in (
    (Ada__text_io__file_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "current_output" defined at a-textio.ads:122, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_output___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__current_output

 val current_output #"a-textio.ads" 122 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__current_output.current_output ())) /\ true ) /\ (Ada__text_io__file_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom current_output__post_axiom :
  (forall __void_param #"a-textio.ads" 122 0 0#  : unit [(Ada__text_io__current_output.current_output __void_param)].
   ( true -> (let result = (Ada__text_io__current_output.current_output __void_param) in (
    (Ada__text_io__file_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "current_error" defined at a-textio.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__current_error___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__current_error

 val current_error #"a-textio.ads" 123 0 0# 
   (__void_param : unit) : Ada__text_io__file_type.file_type
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__current_error.current_error ())) /\ true ) /\ (Ada__text_io__file_type___axiom.dynamic_invariant result True False True) ) }
 
 axiom current_error__post_axiom :
  (forall __void_param #"a-textio.ads" 123 0 0#  : unit [(Ada__text_io__current_error.current_error __void_param)].
   ( true -> (let result = (Ada__text_io__current_error.current_error __void_param) in (
    (Ada__text_io__file_type___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "flush" defined at a-textio.ads:142, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__flush___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val flush #"a-textio.ads" 142 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__flush__2___axiom
 use import "_gnatprove_standard".Main

 val flush__2 #"a-textio.ads" 143 0 0# 
   (__void_param : unit) : unit
  requires { #"a-textio.ads" 143 0 0# true }
  ensures { #"a-textio.ads" 143 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line_length___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_line_length #"a-textio.ads" 149 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line_length__2___axiom
 use import "_gnatprove_standard".Main

 val set_line_length__2 #"a-textio.ads" 150 0 0# 
   (to__ : int) : unit
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_page_length___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_page_length #"a-textio.ads" 152 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_page_length__2___axiom
 use import "_gnatprove_standard".Main

 val set_page_length__2 #"a-textio.ads" 153 0 0# 
   (to__ : int) : unit
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "line_length" defined at a-textio.ads:155, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line_length___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__count___axiom
 use        Ada__text_io__line_length

 val line_length #"a-textio.ads" 155 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# ( ( (result = (Ada__text_io__line_length.line_length file)) /\ true ) /\ (Ada__text_io__count___axiom.dynamic_invariant result True False True) ) }
 
 axiom line_length__post_axiom :
  (forall file #"a-textio.ads" 155 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__line_length.line_length file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__line_length.line_length file) in (
    (Ada__text_io__count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line_length__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2

 val line_length__2 #"a-textio.ads" 156 0 0# 
   (__void_param : unit) : int
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# ( ( (result = (Ada__text_io__line_length__2.line_length__2 ())) /\ true ) /\ (Ada__text_io__count___axiom.dynamic_invariant result True False True) ) }
 
 axiom line_length__2__post_axiom :
  (forall __void_param #"a-textio.ads" 156 0 0#  : unit [(Ada__text_io__line_length__2.line_length__2 __void_param)].
   ( true -> (let result = (Ada__text_io__line_length__2.line_length__2 __void_param) in (
    (Ada__text_io__count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length" defined at a-textio.ads:158, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page_length___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__count___axiom
 use        Ada__text_io__page_length

 val page_length #"a-textio.ads" 158 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# ( ( (result = (Ada__text_io__page_length.page_length file)) /\ true ) /\ (Ada__text_io__count___axiom.dynamic_invariant result True False True) ) }
 
 axiom page_length__post_axiom :
  (forall file #"a-textio.ads" 158 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__page_length.page_length file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__page_length.page_length file) in (
    (Ada__text_io__count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page_length__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count___axiom
 use        Ada__text_io__page_length__2

 val page_length__2 #"a-textio.ads" 159 0 0# 
   (__void_param : unit) : int
  requires { #"a-textio.ads" 64 0 0# true }
  ensures { #"a-textio.ads" 64 0 0# ( ( (result = (Ada__text_io__page_length__2.page_length__2 ())) /\ true ) /\ (Ada__text_io__count___axiom.dynamic_invariant result True False True) ) }
 
 axiom page_length__2__post_axiom :
  (forall __void_param #"a-textio.ads" 159 0 0#  : unit [(Ada__text_io__page_length__2.page_length__2 __void_param)].
   ( true -> (let result = (Ada__text_io__page_length__2.page_length__2 __void_param) in (
    (Ada__text_io__count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "new_line" defined at a-textio.ads:165, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_line___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val new_line #"a-textio.ads" 165 0 0# 
   (file : Ada__text_io__file_type.file_type) (spacing : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_line__2___axiom
 use import "_gnatprove_standard".Main

 val new_line__2 #"a-textio.ads" 166 0 0# 
   (spacing : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_line___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val skip_line #"a-textio.ads" 168 0 0# 
   (file : Ada__text_io__file_type.file_type) (spacing : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_line__2___axiom
 use import "_gnatprove_standard".Main

 val skip_line__2 #"a-textio.ads" 169 0 0# 
   (spacing : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_line___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_line

 val end_of_line #"a-textio.ads" 171 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__end_of_line.end_of_line file)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_line__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_line__2

 val end_of_line__2 #"a-textio.ads" 172 0 0# 
   (__void_param : unit) : bool
  requires { #"a-textio.ads" 172 0 0# true }
  ensures { #"a-textio.ads" 172 0 0# ( ( (result = (Ada__text_io__end_of_line__2.end_of_line__2 ())) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "new_page" defined at a-textio.ads:174, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_page___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val new_page #"a-textio.ads" 174 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__new_page__2___axiom
 use import "_gnatprove_standard".Main

 val new_page__2 #"a-textio.ads" 175 0 0# 
   (__void_param : unit) : unit
  requires { #"a-textio.ads" 175 0 0# true }
  ensures { #"a-textio.ads" 175 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_page___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val skip_page #"a-textio.ads" 177 0 0# 
   (file : Ada__text_io__file_type.file_type) : unit
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__skip_page__2___axiom
 use import "_gnatprove_standard".Main

 val skip_page__2 #"a-textio.ads" 178 0 0# 
   (__void_param : unit) : unit
  requires { #"a-textio.ads" 178 0 0# true }
  ensures { #"a-textio.ads" 178 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_page___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_page

 val end_of_page #"a-textio.ads" 180 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__end_of_page.end_of_page file)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_page__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_page__2

 val end_of_page__2 #"a-textio.ads" 181 0 0# 
   (__void_param : unit) : bool
  requires { #"a-textio.ads" 181 0 0# true }
  ensures { #"a-textio.ads" 181 0 0# ( ( (result = (Ada__text_io__end_of_page__2.end_of_page__2 ())) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_file___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__end_of_file

 val end_of_file #"a-textio.ads" 183 0 0# 
   (file : Ada__text_io__file_type.file_type) : bool
  requires { #"a-textio.ads" 52 0 0# true }
  ensures { #"a-textio.ads" 52 0 0# ( ( (result = (Ada__text_io__end_of_file.end_of_file file)) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__end_of_file__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__end_of_file__2

 val end_of_file__2 #"a-textio.ads" 184 0 0# 
   (__void_param : unit) : bool
  requires { #"a-textio.ads" 184 0 0# true }
  ensures { #"a-textio.ads" 184 0 0# ( ( (result = (Ada__text_io__end_of_file__2.end_of_file__2 ())) /\ true ) /\ true ) }

end

(* Module for declaring a program function (and possibly an axiom) for "set_col" defined at a-textio.ads:186, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_col___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_col #"a-textio.ads" 186 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_col__2___axiom
 use import "_gnatprove_standard".Main

 val set_col__2 #"a-textio.ads" 187 0 0# 
   (to__ : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line" defined at a-textio.ads:189, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val set_line #"a-textio.ads" 189 0 0# 
   (file : Ada__text_io__file_type.file_type) (to__ : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__set_line__2___axiom
 use import "_gnatprove_standard".Main

 val set_line__2 #"a-textio.ads" 190 0 0# 
   (to__ : int) : unit
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "col" defined at a-textio.ads:192, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__col___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__positive_count___axiom
 use        Ada__text_io__col

 val col #"a-textio.ads" 192 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# ( ( (result = (Ada__text_io__col.col file)) /\ true ) /\ (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True) ) }
 
 axiom col__post_axiom :
  (forall file #"a-textio.ads" 192 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__col.col file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__col.col file) in (
    (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "col__2" defined at a-textio.ads:193, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__col__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count___axiom
 use        Ada__text_io__col__2

 val col__2 #"a-textio.ads" 193 0 0# 
   (__void_param : unit) : int
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# ( ( (result = (Ada__text_io__col__2.col__2 ())) /\ true ) /\ (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True) ) }
 
 axiom col__2__post_axiom :
  (forall __void_param #"a-textio.ads" 193 0 0#  : unit [(Ada__text_io__col__2.col__2 __void_param)].
   ( true -> (let result = (Ada__text_io__col__2.col__2 __void_param) in (
    (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line" defined at a-textio.ads:195, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__positive_count___axiom
 use        Ada__text_io__line

 val line #"a-textio.ads" 195 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# ( ( (result = (Ada__text_io__line.line file)) /\ true ) /\ (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True) ) }
 
 axiom line__post_axiom :
  (forall file #"a-textio.ads" 195 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__line.line file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__line.line file) in (
    (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "line__2" defined at a-textio.ads:196, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count___axiom
 use        Ada__text_io__line__2

 val line__2 #"a-textio.ads" 196 0 0# 
   (__void_param : unit) : int
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# ( ( (result = (Ada__text_io__line__2.line__2 ())) /\ true ) /\ (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True) ) }
 
 axiom line__2__post_axiom :
  (forall __void_param #"a-textio.ads" 196 0 0#  : unit [(Ada__text_io__line__2.line__2 __void_param)].
   ( true -> (let result = (Ada__text_io__line__2.line__2 __void_param) in (
    (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page" defined at a-textio.ads:198, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__positive_count___axiom
 use        Ada__text_io__page

 val page #"a-textio.ads" 198 0 0# 
   (file : Ada__text_io__file_type.file_type) : int
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# ( ( (result = (Ada__text_io__page.page file)) /\ true ) /\ (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True) ) }
 
 axiom page__post_axiom :
  (forall file #"a-textio.ads" 198 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__page.page file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__page.page file) in (
    (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page__2" defined at a-textio.ads:199, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page__2___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count___axiom
 use        Ada__text_io__page__2

 val page__2 #"a-textio.ads" 199 0 0# 
   (__void_param : unit) : int
  requires { #"a-textio.ads" 68 0 0# true }
  ensures { #"a-textio.ads" 68 0 0# ( ( (result = (Ada__text_io__page__2.page__2 ())) /\ true ) /\ (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True) ) }
 
 axiom page__2__post_axiom :
  (forall __void_param #"a-textio.ads" 199 0 0#  : unit [(Ada__text_io__page__2.page__2 __void_param)].
   ( true -> (let result = (Ada__text_io__page__2.page__2 __void_param) in (
    (Ada__text_io__positive_count___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get" defined at a-textio.ads:205, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        Ada__text_io__file_type

 val get #"a-textio.ads" 205 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get__2" defined at a-textio.ads:206, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom

 val get__2 #"a-textio.ads" 206 0 0# 
   (item : int__ref) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at a-textio.ads:207, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put___axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_type

 val put #"a-textio.ads" 207 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__2" defined at a-textio.ads:208, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__2___axiom
 use import "_gnatprove_standard".Main

 val put__2 #"a-textio.ads" 208 0 0# 
   (item : int) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__look_ahead___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        Ada__text_io__file_type

 val look_ahead #"a-textio.ads" 210 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) (end_of_line : bool__ref) : unit
  requires { #"a-textio.ads" 213 0 0# true }
  ensures { #"a-textio.ads" 213 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item, end_of_line}

end

(* Module for declaring a program function (and possibly an axiom) for "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__look_ahead__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom

 val look_ahead__2 #"a-textio.ads" 215 0 0# 
   (item : int__ref) (end_of_line : bool__ref) : unit
  requires { #"a-textio.ads" 217 0 0# true }
  ensures { #"a-textio.ads" 217 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item, end_of_line}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        Ada__text_io__file_type

 val get_immediate #"a-textio.ads" 219 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom

 val get_immediate__2 #"a-textio.ads" 223 0 0# 
   (item : int__ref) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__3___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom
 use        Ada__text_io__file_type

 val get_immediate__3 #"a-textio.ads" 226 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : int__ref) (available : bool__ref) : unit
  requires { #"a-textio.ads" 229 0 0# true }
  ensures { #"a-textio.ads" 229 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item, available}

end

(* Module for declaring a program function (and possibly an axiom) for "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_immediate__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__character___axiom

 val get_immediate__4 #"a-textio.ads" 231 0 0# 
   (item : int__ref) (available : bool__ref) : unit
  requires { #"a-textio.ads" 233 0 0# true }
  ensures { #"a-textio.ads" 233 0 0# (Standard__character___axiom.dynamic_invariant item.int__content True True True) }
  writes {item, available}

end

(* Module for declaring a program function (and possibly an axiom) for "get__3" defined at a-textio.ads:239, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__3___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        Standard__positive
 use        Standard__integer__rep
 use        Ada__text_io__file_type
 use        Array__Int__Standard__character

 val get__3 #"a-textio.ads" 239 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Array__Int__Standard__character.map__ref) (item__first : Standard__integer.integer) (item__last : Standard__integer.integer) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep item__first) (Standard__integer__rep.to_rep item__last)))) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "get__4" defined at a-textio.ads:240, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        Standard__positive
 use        Standard__integer__rep
 use        Array__Int__Standard__character

 val get__4 #"a-textio.ads" 240 0 0# 
   (item : Array__Int__Standard__character.map__ref) (item__first : Standard__integer.integer) (item__last : Standard__integer.integer) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep item__first) (Standard__integer__rep.to_rep item__last)))) }
  writes {item}

end

(* Module for declaring a program function (and possibly an axiom) for "put__3" defined at a-textio.ads:241, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__3___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val put__3 #"a-textio.ads" 241 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "put__4" defined at a-textio.ads:242, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put__4 #"a-textio.ads" 242 0 0# 
   (item : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "get_line" defined at a-textio.ads:244, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__integer__rep
 use        Ada__text_io__file_type
 use        Array__Int__Standard__character

 val get_line #"a-textio.ads" 244 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Array__Int__Standard__character.map__ref) (item__first : Standard__integer.integer) (item__last : Standard__integer.integer) (last : int__ref) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep item__first) (Standard__integer__rep.to_rep item__last)))) /\ (Standard__natural___axiom.dynamic_invariant last.int__content True True True) ) }
  writes {item, last}

end

(* Module for declaring a program function (and possibly an axiom) for "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        Standard__natural___axiom
 use        Standard__positive
 use        Standard__integer__rep
 use        Array__Int__Standard__character

 val get_line__2 #"a-textio.ads" 249 0 0# 
   (item : Array__Int__Standard__character.map__ref) (item__first : Standard__integer.integer) (item__last : Standard__integer.integer) (last : int__ref) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( (if (True) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__integer__rep.to_rep item__first) (Standard__integer__rep.to_rep item__last)))) /\ (Standard__natural___axiom.dynamic_invariant last.int__content True True True) ) }
  writes {item, last}

end

(* Module for declaring a program function (and possibly an axiom) for "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__3___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__text_io__file_type
 use        Ada__text_io__file_type___axiom
 use        Ada__text_io__get_line__3

 val get_line__3 #"a-textio.ads" 253 0 0# 
   (file : Ada__text_io__file_type.file_type) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__text_io__get_line__3.get_line__3 file)) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_line__3__post_axiom :
  (forall file #"a-textio.ads" 253 0 0#  : Ada__text_io__file_type.file_type [(Ada__text_io__get_line__3.get_line__3 file)].
   ( (Ada__text_io__file_type___axiom.dynamic_invariant file True True True) -> (let result = (Ada__text_io__get_line__3.get_line__3 file) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__get_line__4___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__string___axiom
 use        Ada__text_io__get_line__4

 val get_line__4 #"a-textio.ads" 256 0 0# 
   (__void_param : unit) : Standard__string.string
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__text_io__get_line__4.get_line__4 ())) /\ true ) /\ (Standard__string___axiom.dynamic_invariant result True False True) ) }
 
 axiom get_line__4__post_axiom :
  (forall __void_param #"a-textio.ads" 256 0 0#  : unit [(Ada__text_io__get_line__4.get_line__4 __void_param)].
   ( true -> (let result = (Ada__text_io__get_line__4.get_line__4 __void_param) in (
    (Standard__string___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at a-textio.ads:259, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put_line___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Ada__text_io__file_type

 val put_line #"a-textio.ads" 259 0 0# 
   (file : Ada__text_io__file_type.file_type) (item : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put_line__2___axiom
 use import "_gnatprove_standard".Main
 use        Standard__string

 val put_line__2 #"a-textio.ads" 263 0 0# 
   (item : Standard__string.string) : unit
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__eof_char___axiom
 use import "_gnatprove_standard".Main
 use        Standard__integer___axiom
 use        Ada__text_io__eof_char

 val eof_char #"a-textio.ads" 460 0 0# 
   (__void_param : unit) : int
  requires { #"system.ads" 1 0 0# true }
  ensures { #"system.ads" 1 0 0# ( ( (result = (Ada__text_io__eof_char.eof_char ())) /\ true ) /\ (Standard__integer___axiom.dynamic_invariant result True False True) ) }
 
 axiom eof_char__post_axiom :
  (forall __void_param #"a-textio.ads" 460 0 0#  : unit [(Ada__text_io__eof_char.eof_char __void_param)].
   ( true -> (let result = (Ada__text_io__eof_char.eof_char __void_param) in (
    (Standard__integer___axiom.dynamic_invariant result True False True)))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__initialize_standard_files___axiom
 use import "_gnatprove_standard".Main

 val initialize_standard_files #"a-textio.ads" 466 0 0# 
   (__void_param : unit) : unit
  requires { #"a-textio.ads" 466 0 0# true }
  ensures { #"a-textio.ads" 466 0 0# true }

end

(* Module for declaring a program function (and possibly an axiom) for "initialize_tcp_state" defined at network_ns.ads:12, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Network_ns__initialize_tcp_state___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom

 val initialize_tcp_state #"network_ns.ads" 12 0 0# 
   (server_socket : int__ref) (server_socket_addr__split_fields : Gnat__sockets__sock_addr_type.__split_fields__ref) (server_socket_addr__split_discrs : Gnat__sockets__sock_addr_type.__split_discrs__ref) (server_socket_addr__attr__constrained : bool) : unit
  requires { #"network_ns.ads" 14 0 0# true }
  ensures { #"network_ns.ads" 14 0 0# ( ( (Gnat__sockets__socket_type___axiom.dynamic_invariant server_socket.int__content True True True) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = server_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = server_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = server_socket_addr__attr__constrained } True True True) ) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = server_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = server_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = server_socket_addr__attr__constrained } True True True) ) }
  writes {server_socket, server_socket_addr__split_fields, server_socket_addr__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "get_client_cxn" defined at network_ns.ads:17, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Network_ns__get_client_cxn___axiom
 use import "_gnatprove_standard".Main
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom

 val get_client_cxn #"network_ns.ads" 17 0 0# 
   (server_socket : int) (client_socket : int__ref) (client_socket_addr__split_fields : Gnat__sockets__sock_addr_type.__split_fields__ref) (client_socket_addr__split_discrs : Gnat__sockets__sock_addr_type.__split_discrs__ref) (client_socket_addr__attr__constrained : bool) : unit
  requires { #"network_ns.ads" 20 0 0# true }
  ensures { #"network_ns.ads" 20 0 0# ( ( (Gnat__sockets__socket_type___axiom.dynamic_invariant client_socket.int__content True True True) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = client_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = client_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = client_socket_addr__attr__constrained } True True True) ) /\ (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = client_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = client_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = client_socket_addr__attr__constrained } True True True) ) }
  writes {client_socket, client_socket_addr__split_fields, client_socket_addr__split_discrs}

end

(* Module for declaring a program function (and possibly an axiom) for "main" defined at main.adb:7, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Main___axiom
 use import "_gnatprove_standard".Main

 val main #"main.adb" 7 0 0# 
   (__void_param : unit) : unit
  requires { #"main.adb" 7 0 0# true }
  ensures { #"main.adb" 7 0 0# true }

end

(* Module for checking contracts and absence of run-time errors in subprogram "main" defined at main.adb:7, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Main__subprogram_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__family_type
 use        Gnat__sockets__family_type__rep
 use        Gnat__sockets__Tinet_addr_v4_typeP1
 use        Gnat__sockets__inet_addr_type__T14s
 use        Gnat__sockets__Tinet_addr_v6_typeP1
 use        Gnat__sockets__inet_addr_type__T16s
 use        Gnat__sockets__inet_addr_type
 use        Gnat__sockets__sock_addr_type__T4s
 use        Gnat__sockets__sock_addr_type
 use        Gnat__sockets__sock_addr_type___axiom
 use        Network_ns__initialize_tcp_state___axiom
 use        Network_ns__get_client_cxn___axiom
 use        Main__server_socket
 use        Main__server_socket_addr
 use        Main__client_socket
 use        Main__client_socket_addr
 use        Main__L_1
 use        Temp___823
 use        Temp___827
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Array__Int__Gnat__sockets__inet_addr_comp_type
 use        Main__server_socket___axiom
 use        Main__server_socket_addr___axiom
 use        Main__client_socket___axiom
 use        Main__client_socket_addr___axiom
 use        Main__L_1___axiom
 use        Gnat__sockets__family_type___axiom
 use        Gnat__sockets__sock_addr_type___axiom
 use        Gnat__sockets__socket_type___axiom
 use        Gnat__sockets__inet_addr_type___axiom
 use        Network_ns__initialize_tcp_state___axiom
 use        Network_ns__get_client_cxn___axiom
 use        Gnat__sockets__Tinet_addr_v4_typeP1___axiom
 use        Gnat__sockets__Tinet_addr_v6_typeP1___axiom
 use        Gnat__sockets__inet_addr_type__T14s___axiom
 use        Gnat__sockets__inet_addr_type__T16s___axiom
 use        Gnat__sockets__sock_addr_type__T4s___axiom

 let def #"main.adb" 7 0 0# "GP_Subp:main.adb:7" "W:diverges:N" 
   (__void_param : unit)
  requires { #"main.adb" 7 0 0# true }
  ensures { #"main.adb" 7 0 0# true }
   =
  ( () (* Assume dynamic invariants of inputs of the subprogram main.adb:7 *)
  ;
  #"main.adb" 7 0 0# assume { #"main.adb" 7 0 0# true };
  () (* Assume Initial_Condition of withed units *)
  ;
  () (* Declarations introduced by the compiler at the beginning of the subprogram main.adb:7 *)
  ;
  () (* Check for RTE in the Pre of the subprogram main.adb:7 *)
  ;
  #"main.adb" 7 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end ;
  () (* Assume Pre of the subprogram main.adb:7 *)
  ;
  #"main.adb" 7 0 0# assert { #"main.adb" 7 0 0# true };
  #"main.adb" 7 0 0# try
   ( #"main.adb" 7 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"main.adb" 8 0 0# assume { #"main.adb" 8 0 0# (Gnat__sockets__socket_type___axiom.default_initial_assumption Main__server_socket.server_socket.int__content False) };
   #"g-socket.ads" 412 0 0# assume { #"g-socket.ads" 412 0 0# (Gnat__sockets__socket_type___axiom.dynamic_invariant Main__server_socket.server_socket.int__content False False True) };
   #"g-socket.ads" 1167 0 0# abstract ensures {true}(let _ = #"main.adb" 9 0 0# abstract ensures {true}(let _ = (let temp___1652 = 0 in (
   (let temp___1651 = #"g-socket.ads" 505 0 0# (any Gnat__sockets__sock_addr_type.sock_addr_type
   requires {#"g-socket.ads" 505 0 0# true} 
   ensures {#"g-socket.ads" 505 0 0# (temp___1652 = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family (Gnat__sockets__sock_addr_type.__split_discrs result))))} 
   ) in (
    (if ((Gnat__sockets__sock_addr_type.gnat__sockets__sock_addr_type__addr__pred(temp___1651))) then (
     #"g-socket.ads" 505 0 0# abstract ensures {true}(let _ = (let temp___1654 = temp___1652 in (
     (let temp___1653 = #"g-socket.ads" 506 0 0# (any Gnat__sockets__sock_addr_type__T4s.t4s
     requires {#"g-socket.ads" 506 0 0# true} 
     ensures {#"g-socket.ads" 506 0 0# (temp___1654 = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__sock_addr_type__T4s.__split_discrs result))))} 
     ) in (
      ( (if ((Gnat__sockets__sock_addr_type__T4s.gnat__sockets__inet_addr_type__sin_v4__pred(temp___1653))) then (
       #"g-socket.ads" 506 0 0# abstract ensures {true}(let _ = ( #"g-socket.ads" 1223 0 0# assert { #"g-socket.ads" 1223 0 0# ( #"g-socket.ads" 1223 0 0# "model_vc" "keep_on_simp" "GP_Sloc:g-socket.ads:1223:43" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:0" "comment:            Sin_V4 : Inet_Addr_V4_Type := (others => 0);
                                          ^ g-socket.ads:1223:43:VC_LENGTH_CHECK" "GP_Shape:inet_addr_type_def__aggr" ((if ((Gnat__sockets__inet_addr_type__T14s.first <= Gnat__sockets__inet_addr_type__T14s.last)) then (
        ((Gnat__sockets__inet_addr_type__T14s.last - Gnat__sockets__inet_addr_type__T14s.first) + 1)) else (
        0)) = (if ((Gnat__sockets__Tinet_addr_v4_typeP1.first <= Gnat__sockets__Tinet_addr_v4_typeP1.last)) then (
        ((Gnat__sockets__Tinet_addr_v4_typeP1.last - Gnat__sockets__Tinet_addr_v4_typeP1.first) + 1)) else (
        0))) ) };
       (Temp___823.temp___823(0)) ) in (
        ()))
        end ));
      (if ((Gnat__sockets__sock_addr_type__T4s.gnat__sockets__inet_addr_type__sin_v6__pred(temp___1653))) then (
       #"g-socket.ads" 506 0 0# abstract ensures {true}(let _ = ( #"g-socket.ads" 1226 0 0# assert { #"g-socket.ads" 1226 0 0# ( #"g-socket.ads" 1226 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:inet_addr_type_def__aggr" "GP_Sloc:g-socket.ads:1226:43" "GP_Id:1" "comment:            Sin_V6 : Inet_Addr_V6_Type := (others => 0);
                                          ^ g-socket.ads:1226:43:VC_LENGTH_CHECK" ((if ((Gnat__sockets__inet_addr_type__T16s.first <= Gnat__sockets__inet_addr_type__T16s.last)) then (
        ((Gnat__sockets__inet_addr_type__T16s.last - Gnat__sockets__inet_addr_type__T16s.first) + 1)) else (
        0)) = (if ((Gnat__sockets__Tinet_addr_v6_typeP1.first <= Gnat__sockets__Tinet_addr_v6_typeP1.last)) then (
        ((Gnat__sockets__Tinet_addr_v6_typeP1.last - Gnat__sockets__Tinet_addr_v6_typeP1.first) + 1)) else (
        0))) ) };
       (Temp___827.temp___827(0)) ) in (
        ()))
        end )) )))
     ))
      in (
      ()))
      end ))))
   ))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"main.adb" 9 0 0# assume { #"main.adb" 9 0 0# (Gnat__sockets__sock_addr_type___axiom.default_initial_assumption { Gnat__sockets__sock_addr_type.__split_fields = Main__server_socket_addr.server_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = Main__server_socket_addr.server_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = Main__server_socket_addr.server_socket_addr__attr__constrained } False) };
   #"g-socket.ads" 505 0 0# assume { #"g-socket.ads" 505 0 0# (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = Main__server_socket_addr.server_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = Main__server_socket_addr.server_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = Main__server_socket_addr.server_socket_addr__attr__constrained } False False True) };
   #"main.adb" 9 0 0# abstract ensures {true}(let _ = () in (
    ()))
    end ;
   #"main.adb" 10 0 0# assume { #"main.adb" 10 0 0# (Gnat__sockets__socket_type___axiom.default_initial_assumption Main__client_socket.client_socket.int__content False) };
   #"g-socket.ads" 412 0 0# assume { #"g-socket.ads" 412 0 0# (Gnat__sockets__socket_type___axiom.dynamic_invariant Main__client_socket.client_socket.int__content False False True) };
   #"g-socket.ads" 1167 0 0# abstract ensures {true}(let _ = #"main.adb" 11 0 0# abstract ensures {true}(let _ = (let temp___1658 = 0 in (
   (let temp___1657 = #"g-socket.ads" 505 0 0# (any Gnat__sockets__sock_addr_type.sock_addr_type
   requires {#"g-socket.ads" 505 0 0# true} 
   ensures {#"g-socket.ads" 505 0 0# (temp___1658 = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__sock_addr_type.rec__gnat__sockets__sock_addr_type__family (Gnat__sockets__sock_addr_type.__split_discrs result))))} 
   ) in (
    (if ((Gnat__sockets__sock_addr_type.gnat__sockets__sock_addr_type__addr__pred(temp___1657))) then (
     #"g-socket.ads" 505 0 0# abstract ensures {true}(let _ = (let temp___1660 = temp___1658 in (
     (let temp___1659 = #"g-socket.ads" 506 0 0# (any Gnat__sockets__sock_addr_type__T4s.t4s
     requires {#"g-socket.ads" 506 0 0# true} 
     ensures {#"g-socket.ads" 506 0 0# (temp___1660 = (Gnat__sockets__family_type__rep.to_rep (Gnat__sockets__inet_addr_type.rec__gnat__sockets__inet_addr_type__family (Gnat__sockets__sock_addr_type__T4s.__split_discrs result))))} 
     ) in (
      ( (if ((Gnat__sockets__sock_addr_type__T4s.gnat__sockets__inet_addr_type__sin_v4__pred(temp___1659))) then (
       #"g-socket.ads" 506 0 0# abstract ensures {true}(let _ = ( #"g-socket.ads" 1223 0 0# assert { #"g-socket.ads" 1223 0 0# ( #"g-socket.ads" 1223 0 0# "model_vc" "keep_on_simp" "GP_Sloc:g-socket.ads:1223:43" "GP_Reason:VC_LENGTH_CHECK" "comment:            Sin_V4 : Inet_Addr_V4_Type := (others => 0);
                                          ^ g-socket.ads:1223:43:VC_LENGTH_CHECK" "GP_Shape:inet_addr_type_def__aggr" "GP_Id:2" ((if ((Gnat__sockets__inet_addr_type__T14s.first <= Gnat__sockets__inet_addr_type__T14s.last)) then (
        ((Gnat__sockets__inet_addr_type__T14s.last - Gnat__sockets__inet_addr_type__T14s.first) + 1)) else (
        0)) = (if ((Gnat__sockets__Tinet_addr_v4_typeP1.first <= Gnat__sockets__Tinet_addr_v4_typeP1.last)) then (
        ((Gnat__sockets__Tinet_addr_v4_typeP1.last - Gnat__sockets__Tinet_addr_v4_typeP1.first) + 1)) else (
        0))) ) };
       (Temp___823.temp___823(0)) ) in (
        ()))
        end ));
      (if ((Gnat__sockets__sock_addr_type__T4s.gnat__sockets__inet_addr_type__sin_v6__pred(temp___1659))) then (
       #"g-socket.ads" 506 0 0# abstract ensures {true}(let _ = ( #"g-socket.ads" 1226 0 0# assert { #"g-socket.ads" 1226 0 0# ( #"g-socket.ads" 1226 0 0# "model_vc" "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Shape:inet_addr_type_def__aggr" "GP_Sloc:g-socket.ads:1226:43" "comment:            Sin_V6 : Inet_Addr_V6_Type := (others => 0);
                                          ^ g-socket.ads:1226:43:VC_LENGTH_CHECK" "GP_Id:3" ((if ((Gnat__sockets__inet_addr_type__T16s.first <= Gnat__sockets__inet_addr_type__T16s.last)) then (
        ((Gnat__sockets__inet_addr_type__T16s.last - Gnat__sockets__inet_addr_type__T16s.first) + 1)) else (
        0)) = (if ((Gnat__sockets__Tinet_addr_v6_typeP1.first <= Gnat__sockets__Tinet_addr_v6_typeP1.last)) then (
        ((Gnat__sockets__Tinet_addr_v6_typeP1.last - Gnat__sockets__Tinet_addr_v6_typeP1.first) + 1)) else (
        0))) ) };
       (Temp___827.temp___827(0)) ) in (
        ()))
        end )) )))
     ))
      in (
      ()))
      end ))))
   ))
    in (
    ()))
    end  in (
    ()))
    end ;
   #"main.adb" 11 0 0# assume { #"main.adb" 11 0 0# (Gnat__sockets__sock_addr_type___axiom.default_initial_assumption { Gnat__sockets__sock_addr_type.__split_fields = Main__client_socket_addr.client_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = Main__client_socket_addr.client_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = Main__client_socket_addr.client_socket_addr__attr__constrained } False) };
   #"g-socket.ads" 505 0 0# assume { #"g-socket.ads" 505 0 0# (Gnat__sockets__sock_addr_type___axiom.dynamic_invariant { Gnat__sockets__sock_addr_type.__split_fields = Main__client_socket_addr.client_socket_addr__split_fields.Gnat__sockets__sock_addr_type.__split_fields__content; Gnat__sockets__sock_addr_type.__split_discrs = Main__client_socket_addr.client_socket_addr__split_discrs.Gnat__sockets__sock_addr_type.__split_discrs__content; Gnat__sockets__sock_addr_type.attr__constrained = Main__client_socket_addr.client_socket_addr__attr__constrained } False False True) };
   ( "GP_Sloc:main.adb:13:4" (Network_ns__initialize_tcp_state___axiom.initialize_tcp_state(Main__server_socket.server_socket) (Main__server_socket_addr.server_socket_addr__split_fields) (Main__server_socket_addr.server_socket_addr__split_discrs) (Main__server_socket_addr.server_socket_addr__attr__constrained)) );
   ( "GP_Sloc:main.adb:16:4" (Network_ns__get_client_cxn___axiom.get_client_cxn(Main__server_socket.server_socket.int__content) (Main__client_socket.client_socket) (Main__client_socket_addr.client_socket_addr__split_fields) (Main__client_socket_addr.client_socket_addr__split_discrs) (Main__client_socket_addr.client_socket_addr__attr__constrained)) );
   ( "GP_Sloc:main.adb:17:4" ( () (* Translation of an Ada loop from main.adb:17 *)
   ;
   (if (True) then (
    #"main.adb" 11 0 0# try
     ( () (* First unroling of the loop statements appearing before the loop invariant of loop main.adb:17 *)
     ;
     () (* While loop translating the Ada loop from main.adb:17 *)
     ;
     #"main.adb" 17 0 0# while True do
      ( () (* Assume implicit invariants from the loop main.adb:17 *)
      ;
      #"main.adb" 17 0 0# assume { #"main.adb" 17 0 0# true };
      () (* Check for absence of RTE in the invariant of loop main.adb:17 *)
      ;
      () (* Loop statements appearing after the loop invariant of loop main.adb:17 *)
      ;
      ( "GP_Sloc:main.adb:20:7" () );
      () (* Check for the exit condition and loop statements appearing before the loop invariant of loop main.adb:17 *)
      ;
      (if (False) then (
       #"main.adb" 17 0 0# raise Main__L_1.L_1)) )
     done )
    with
     Main__L_1.L_1 -> ()
    end)) ) );
   #"main.adb" 7 0 0# raise Return__exc )
  with
   Return__exc -> ()
  end;
  #"main.adb" 7 0 0# abstract ensures {true}(let _ = True in (
   ()))
   end  )
end
